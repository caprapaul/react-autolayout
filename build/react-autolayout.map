{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 789935a0106acd67d4ae","webpack:///./index.js","webpack:///./styles.css?6b48","webpack:///./styles.css","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/style-loader/addStyles.js","webpack:///./~/autolayout/dist/autolayout.kiwi.js","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;qBCtCO,CAAc;;uEACE,CAAmD;;;;kCACxD,CAAO;;;;AAEzB,KAAI,SAAS,GAAG,EAAE,CAAC;AACnB,KAAI,MAAM,GAAG,EAAE,CAAC;AAChB,KAAI,SAAS,GAAG,EAAE,CAAC;AACnB,KAAI,WAAW,GAAG,EAAE,CAAC;AACrB,KAAI,OAAO,GAAG,EAAE,CAAC;AACjB,KAAI,OAAO,GAAG,qBAAqB,CAAC;;AAEpC,UAAS,SAAS,CAAC,IAAI,EAAE,OAAO,EAAE;AAChC,OAAI,IAAI,EAAE;AACR,WAAM,IAAI,KAAK,CAAC,uBAAuB,GAAG,OAAO,CAAC,CAAC;IACpD;EACF;;AAED,UAAU,KAAK,GAAG;AAChB,OAAI,CAAC,GAAG,EAAE,CAAC;AACX,QAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,UAAS,CAAC,EAAE;AACxD,UAAK,IAAI,CAAC,IAAI,CAAC,EAAE;AACf,WAAI,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;AACxB,kBAAS;QACV;AACD,WAAG,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,UAAU,EAAC;AAC5B,UAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;QACrC,MAAM;AACL,UAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACb;MACF;IACF,CAAC,CAAC;AACH,UAAO,CAAC,CAAC;EACV;;AAED,UAAS,qBAAqB,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAC;;AAE5C,OAAG,QAAQ,KAAK,KAAK,CAAE,EAAC;AACtB,SAAG,QAAQ,IAAI,QAAQ,EAAC;AACtB,WAAG,QAAQ,CAAC,MAAM,KAAK,IAAI,EAAC;AAC1B,kBAAS,CAAC,QAAQ,CAAC,MAAM,EAAE,qCAAqC,CAAC,CAAC;QACnE,MAAM;AACL,UAAC,GAAG,QAAQ,CAAC,MAAM,CAAC;QACrB;MACF;AACD,SAAG,OAAO,IAAI,QAAQ,EAAC;AACrB,WAAG,QAAQ,CAAC,KAAK,KAAK,IAAI,EAAC;AACzB,kBAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,qCAAqC,CAAC,CAAC;QAClE,MAAM;AACL,UAAC,GAAG,QAAQ,CAAC,KAAK,CAAC;QACpB;MACF;AACD,SAAG,YAAY,IAAI,QAAQ,EAAC;AAC1B,QAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;MAC7D;AACD,SAAG,YAAY,IAAI,QAAQ,EAAC;AAC1B,QAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;MAC7D;AACD,SAAG,cAAc,IAAI,QAAQ,EAAC;AAC5B,QAAC,GAAG,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;MAClC;AACD,SAAG,WAAW,IAAI,QAAQ,EAAC;AACzB,QAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,WAAW,CAAC,GAAG,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;MAC3D;AACD,SAAG,WAAW,IAAI,QAAQ,EAAC;AACzB,QAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,WAAW,CAAC,GAAG,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;MAC3D;IACF;AACD,UAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACf;;AAED,UAAS,gBAAgB,CAAC,UAAU,EAAE,aAAa,EAAE;AACnD,OAAI,iBAAiB,GAAG,EAAE,CAAC;AAC3B,OAAI,OAAO,aAAC;AACZ,OAAI,WAAW,GAAG,UAAU,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,WAAW,CAAC;AAChE,OAAI,kBAAkB,GAAG,UAAU,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,kBAAkB,CAAC;AAC9E,OAAI,QAAQ,GAAG,EAAE,CAAC;AAClB,OAAI,MAAM,GAAG,EAAE,CAAC;AAChB,OAAI,MAAM,GAAG,EAAE,CAAC;AAChB,OAAI,MAAM,GAAG,EAAE,CAAC;AAChB,OAAI,OAAO,GAAG,EAAE,CAAC;AACjB,OAAI,CAAC;OAAE,CAAC,aAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCT,OAAI,SAAS,IAAI,UAAU,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,QAAQ,EAAE;AAC3D,eAAU,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAChF;;AAED,OAAI,UAAU,IAAI,UAAU,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,QAAQ,EAAE;AAC5D,aAAQ,GAAG,UAAU,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC;IAChE;;AAED,OAAI,QAAQ,IAAI,UAAU,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,QAAQ,EAAE;AAC1D,WAAM,GAAG,UAAU,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC;IAC5D;;AAED,OAAI,QAAQ,IAAI,UAAU,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,QAAQ,EAAE;AAC1D,WAAM,GAAG,UAAU,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC;IAC5D;;AAED,OAAI,SAAS,IAAI,UAAU,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,QAAQ,EAAE;AAC3D,YAAO,GAAG,UAAU,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;IAC9D;;AAED,OAAI,QAAQ,IAAI,UAAU,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,QAAQ,EAAE;AAC1D,WAAM,GAAG,UAAU,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC;IAC5D;;AAED,OAAI,kBAAkB,EAAC;kCACZ,qBAAqB,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;;;;AAAvE,MAAC;AAAE,MAAC;IACN,MAAM,IAAI,UAAU,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,UAAU,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,EAAC;mCACnG,qBAAqB,CAAC,QAAQ,EAAE,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,WAAW,CAAC;;;;AAA9E,MAAC;AAAE,MAAC;IACN,MAAM;;AAEL,SAAI,mBAAmB,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;AACzC,SAAI,kBAAkB,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;;;AAGxC,SAAI,KAAK,GAAG,WAAW,CAAC,mBAAmB,CAAC,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC;AACvE,SAAI,WAAW,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC,kBAAkB,CAAC,CAAC,WAAW,CAAC;AAC/E,SAAI,YAAY,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC,kBAAkB,CAAC,CAAC,YAAY,CAAC;;AAEjF,SAAK,QAAQ,IAAK,OAAO,CAAC,mBAAmB,CAAC,CAAC,kBAAkB,CAAC,IAC9D,aAAa,IAAI,OAAO,CAAC,mBAAmB,CAAC,CAAC,kBAAkB,CAAC,CAAC,MAAM,EAAC;AAC3E,kBAAW,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC,kBAAkB,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,WAAW,CAAC;AACjG,mBAAY,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC,kBAAkB,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,YAAY,CAAC;MACpG;;mCAEQ,qBAAqB,CAAC,QAAQ,EAAE,KAAK,CAAC,KAAK,GAAG,WAAW,EAAE,KAAK,CAAC,MAAM,GAAG,YAAY,CAAC;;;;AAA/F,MAAC;AAAE,MAAC;IACN;;AAED,aAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC9B,oBAAiB,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;AAC5C,oBAAiB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,aAAa,GAAG,aAAa,CAAC;;AAErE,QAAK,IAAI,UAAU,IAAI,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE;AAC/C,SAAI,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,KAAK,GAAG,EAAC;AAC/E,cAAO,GAAG,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;AAC/C,wBAAiB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,GAAG;AACnD,cAAK,EAAE;AACL,gBAAK,EAAE,OAAO,CAAC,KAAK;AACpB,iBAAM,EAAE,OAAO,CAAC,MAAM;;;AAGtB,iBAAM,EAAE,OAAO,CAAC,MAAM,GAAG,CAAC;AAC1B,oBAAS,mBAAiB,OAAO,CAAC,IAAI,YAAO,OAAO,CAAC,GAAG,WAAQ;AAChE,mBAAQ,EAAE,UAAU;AACpB,iBAAM,EAAE,CAAC;AACT,kBAAO,EAAE,CAAC;UACX;AACD,YAAG,EAAE,OAAO,CAAC,GAAG;AAChB,aAAI,EAAE,OAAO,CAAC,IAAI;AAClB,cAAK,EAAE,OAAO,CAAC,KAAK;AACpB,eAAM,EAAE,OAAO,CAAC,MAAM;AACtB,eAAM,EAAE,OAAO,CAAC,MAAM,GAAG,CAAC;QAC3B,CAAC;MACH;;AAED,SAAI,UAAU,IAAI,MAAM,EAAC;AACvB,wBAAiB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,eAAe,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;MAC/F;AACD,SAAI,UAAU,IAAI,MAAM,EAAC;AACvB,WAAI,MAAM,CAAC,UAAU,CAAC,KAAK,IAAI,EAAC;AAC9B,0BAAiB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;AACxE,0BAAiB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC;QACnE,MAAM;AACL,0BAAiB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;AACpF,0BAAiB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;QAC/E;MACF;AACD,SAAI,UAAU,IAAI,OAAO,EAAC;AACxB,WAAI,OAAO,CAAC,UAAU,CAAC,KAAK,IAAI,EAAC;AAC/B,0BAAiB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;AACzE,0BAAiB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC;QACpE,MAAM;AACL,0BAAiB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACtF,0BAAiB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;QACjF;MACF;AACD,SAAI,UAAU,IAAI,MAAM,EAAC;AACvB,WAAI,MAAM,CAAC,UAAU,CAAC,KAAK,QAAQ,EAAC;AAClC,0BAAiB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,YAAY,GAAG,KAAK,CAAC;AAC9E,0BAAiB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,iBAAiB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;AACjI,0BAAiB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,GAAG,iBAAiB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;QAC5H;MACF;IACF,CAAC;AACF,UAAO,iBAAiB,CAAC;EAC1B;;AAED,UAAS,YAAY,CAAC,CAAC,EAAE,QAAQ,EAAE,UAAU,EAAE;;AAE7C,OAAI,aAAa,aAAC;;AAElB,QAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAChD,kBAAa,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;AAC5E,SAAG,aAAa,KAAK,KAAK,CAAE,EAAC;AAC3B,WAAI,SAAS,CAAC,CAAC,CAAC,CAAC,aAAa,KAAK,aAAa,EAAC;AAC/C,kBAAS,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,wDAAW,IAAI,EAAE,CAAC;AAC1C,kBAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,WAAW,CAAC,CAAC;QACnF;AACD,gBAAS,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,aAAa,CAAC;MAC5C;AACD,gBAAW,GAAG,KAAK,CAAC,WAAW,EAAE,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IAC9F,CAAC;;AAEF,QAAK,IAAI,EAAE,IAAI,SAAS,EAAC;AACvB,SAAI,SAAS,CAAC,cAAc,CAAC,EAAE,CAAC,EAAC;AAC/B,gBAAS,CAAC,EAAE,CAAC,EAAE,CAAC;MACjB;IACF;EACF;;AAED,UAAS,uBAAuB,CAAC,KAAK,EAAE,YAAY,EAAE,aAAa,EAAC;AAClE,OAAI,MAAM;OAAE,KAAK,GAAG,YAAY,IAAI,CAAC;OAAE,MAAM,GAAG,aAAa,IAAI,CAAC,CAAC;AACnE,OAAI,GAAG,aAAC;AACR,OAAI,WAAW,aAAC;;AAEhB,OAAI,QAAQ,IAAI,KAAK,EAAC;AACpB,SAAG,OAAO,KAAK,CAAC,MAAM,KAAK,UAAU,EAAC;AACpC,kBAAW,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;MACpD,MAAM;AACL,kBAAW,GAAG,KAAK,CAAC,MAAM,CAAC;MAC5B;AACD,WAAM,GAAG,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACpC,UAAK,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACtB,WAAM,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACxB,MAAM,IAAI,WAAW,IAAI,KAAK,IAC7B,cAAc,IAAI,KAAK,EAAE;AACzB,WAAM,GAAG,CAAC,CAAC;AACX,SAAI,WAAW,IAAI,KAAK,EAAE;AACxB,WAAG,OAAO,KAAK,CAAC,SAAS,KAAK,UAAU,EAAC;AACvC,oBAAW,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;QACvD,MAAM;AACL,oBAAW,GAAG,KAAK,CAAC,SAAS,CAAC;QAC/B;AACD,aAAM,GAAG,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACpC,aAAM,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;MACrB;AACD,SAAI,cAAc,IAAI,KAAK,EAAE;AAC3B,WAAG,OAAO,KAAK,CAAC,YAAY,KAAK,UAAU,EAAC;AAC1C,oBAAW,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;QAC1D,MAAM;AACL,oBAAW,GAAG,KAAK,CAAC,YAAY,CAAC;QAClC;AACD,aAAM,GAAG,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACpC,aAAM,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;MACrB;IACF,MAAM,IAAI,aAAa,IAAI,KAAK,IAC/B,YAAY,IAAI,KAAK,EAAE;AACvB,UAAK,GAAG,CAAC,CAAC;AACV,SAAI,aAAa,IAAI,KAAK,EAAE;AAC1B,WAAG,OAAO,KAAK,CAAC,WAAW,KAAK,UAAU,EAAC;AACzC,oBAAW,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;QACzD,MAAM;AACL,oBAAW,GAAG,KAAK,CAAC,WAAW,CAAC;QACjC;AACD,aAAM,GAAG,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACpC,YAAK,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;MACpB;AACD,SAAI,YAAY,IAAI,KAAK,EAAE;AACzB,WAAG,OAAO,KAAK,CAAC,UAAU,KAAK,UAAU,EAAC;AACxC,oBAAW,GAAG,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;QACxD,MAAM;AACL,oBAAW,GAAG,KAAK,CAAC,UAAU,CAAC;QAChC;AACD,aAAM,GAAG,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACpC,YAAK,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;MACpB;IACF,MAAM,IAAI,aAAa,IAAI,KAAK,EAAC;AAChC,SAAG,OAAO,KAAK,CAAC,WAAW,KAAK,UAAU,EAAC;AACzC,kBAAW,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;MACzD,MAAM;AACL,kBAAW,GAAG,KAAK,CAAC,WAAW,CAAC;MACjC;AACD,WAAM,GAAG,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACpC,QAAG,GAAG,MAAM,CAAC,MAAM,CAAC;AACpB,SAAI,GAAG,KAAK,CAAC,EAAC;AACZ,YAAK,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACtB,aAAM,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;MACxB;AACD,SAAI,GAAG,KAAK,CAAC,EAAC;AACZ,YAAK,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACtB,aAAM,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;MACxB;AACD,SAAI,GAAG,KAAK,CAAC,EAAC;AACZ,YAAK,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACtB,aAAM,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;MAChC;AACD,SAAI,GAAG,KAAK,CAAC,EAAC;AACZ,YAAK,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAC9B,aAAM,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;MAChC;IACF,MAAM,IAAI,gBAAgB,IAAI,KAAK,IAClC,mBAAmB,IAAI,KAAK,EAAE;AAC9B,WAAM,GAAG,CAAC,CAAC;AACX,SAAI,gBAAgB,IAAI,KAAK,EAAE;AAC7B,WAAG,OAAO,KAAK,CAAC,cAAc,KAAK,UAAU,EAAC;AAC5C,oBAAW,GAAG,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;QAC5D,MAAM;AACL,oBAAW,GAAG,KAAK,CAAC,cAAc,CAAC;QACpC;AACD,aAAM,GAAG,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACpC,aAAM,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;MACrB;AACD,SAAI,mBAAmB,IAAI,KAAK,EAAE;AAChC,WAAG,OAAO,KAAK,CAAC,iBAAiB,KAAK,UAAU,EAAC;AAC/C,oBAAW,GAAG,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;QAC/D,MAAM;AACL,oBAAW,GAAG,KAAK,CAAC,iBAAiB,CAAC;QACvC;AACD,aAAM,GAAG,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACpC,aAAM,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;MACrB;IACF,MAAM,IAAI,kBAAkB,IAAI,KAAK,IACpC,iBAAiB,IAAI,KAAK,EAAE;AAC5B,UAAK,GAAG,CAAC,CAAC;AACV,SAAI,kBAAkB,IAAI,KAAK,EAAE;AAC/B,WAAG,OAAO,KAAK,CAAC,gBAAgB,KAAK,UAAU,EAAC;AAC9C,oBAAW,GAAG,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;QAC9D,MAAM;AACL,oBAAW,GAAG,KAAK,CAAC,gBAAgB,CAAC;QACtC;AACD,aAAM,GAAG,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACpC,YAAK,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;MACpB;AACD,SAAI,iBAAiB,IAAI,KAAK,EAAE;AAC9B,WAAG,OAAO,KAAK,CAAC,eAAe,KAAK,UAAU,EAAC;AAC7C,oBAAW,GAAG,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;QAC7D,MAAM;AACL,oBAAW,GAAG,KAAK,CAAC,eAAe,CAAC;QACrC;AACD,aAAM,GAAG,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACpC,YAAK,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;MACpB;IACF;AACD,UAAO,EAAE,KAAK,EAAL,KAAK,EAAE,MAAM,EAAN,MAAM,EAAE,CAAC;EAC1B;;AAED,UAAS,eAAe,CAAC,SAAS,EAAE,UAAU,EAAC;AAC7C,OAAI,QAAQ,GAAG,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC;AACpC,OAAI,aAAa,aAAC;;AAElB,YAAS,CAAC,QAAQ,KAAK,KAAK,CAAE,EAAE,mBAAmB,CAAC,CAAC;AACrD,YAAS,CAAE,QAAQ,IAAI,MAAM,EAAM,QAAQ,2BAAwB,CAAC;;;AAGpE,UAAO,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;AACvB,OAAI,UAAU,GAAG,mBAAM,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AAClE,aAAU,CAAC,OAAO,CAAC,UAAS,KAAK,EAAC;AAChC,YAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;AACzC,YAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC;AACpD,YAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC;;AAErD,SAAI,OAAO,IAAI,KAAK,CAAC,KAAK,EAAC;sCACH,uBAAuB,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC;;WAA3D,KAAK,4BAAL,KAAK;WAAE,MAAM,4BAAN,MAAM;;AAClB,cAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,WAAW,GAAG,KAAK,CAAC;AACxD,cAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,YAAY,GAAG,MAAM,CAAC;MAC3D;;AAED,SAAI,aAAa,IAAI,KAAK,CAAC,KAAK,EAAC;AAC/B,cAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,IAAI,EAAE,CAAC;AAC9F,YAAK,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,WAAW,EAAC;AACpC,aAAI,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,EAAC;AAC5C,kBAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;;2CAE7B,uBAAuB,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,EACtE,OAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,WAAW,EAC/C,OAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC;;eAF9C,KAAK,6BAAL,KAAK;eAAE,MAAM,6BAAN,MAAM;;AAIlB,kBAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,KAAK,CAAC;AAClE,kBAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,MAAM,CAAC;UACrE;QACF;MACF;IACF,CAAC,CAAC;;;AAGH,YAAS,CAAC,QAAQ,CAAC,GAAG,YAAU;AAC9B,cAAS,CAAC,WAAW,EAAE,CAAC;IACzB,CAAC;;;;;AAKF,OAAI,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,UAAU,CAAC,OAAO,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;;AAE5F,SAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;AACtB,SAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,GAAG,EAAE,CAAC;AAC9B,SAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,IAAI;YAAM,KAAK,CAAE;IAAA,CAAC;AAC3D,SAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,GAAG,QAAQ,CAAC;;AAErC,gBAAa,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;AACpD,SAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,GAAG,aAAa,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;;AAElE,QAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAClD,SAAI,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AACxB,WAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;AAC3C,WAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;AAC/D,SAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,EAAC;AACpC,aAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,kBAAkB,GAAG,IAAI,CAAC;AAChE,aAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;MACxE,MAAM;;AAEL,aAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,kBAAkB,GAAG,KAAK,CAAC;AACjE,aAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;MACnF;AACD,WAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,WAAW,GAAG,wDAAW,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;AACnH,WAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,QAAQ,GAAG,wDAAW,YAAY,CAAC,aAAa,GAAG,wDAAW,YAAY,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;IACpJ,CAAC;;AAEF,SAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,GAAG,IAAI,wDAAW,IAAI,EAAE,CAAC;AAC9C,SAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,WAAW,CAAC,CAAC;AAC3G,cAAW,GAAG,KAAK,CAAC,WAAW,EAAE,gBAAgB,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;;AAErG,YAAS,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;;AAEjC,QAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAChD,gBAAW,GAAG,KAAK,CAAC,WAAW,EAAE,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IAC9F,CAAC;;AAEF,eAAY,EAAE,CAAC;EAEhB;;AAED,UAAS,kBAAkB,CAAC,QAAQ,EAAC;;AAEnC,OAAI,QAAQ,IAAI,SAAS,EAAC;AACxB,YAAO,SAAS,CAAC,QAAQ,CAAC,CAAC;IAC5B;;AAED,OAAI,QAAQ,IAAI,WAAW,EAAC;AAC1B,YAAO,WAAW,CAAC,QAAQ,CAAC,CAAC;IAC9B;;AAED,OAAI,QAAQ,IAAI,MAAM,EAAC;AACrB,WAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;AAC7B,YAAO,MAAM,CAAC,QAAQ,CAAC,CAAC;IACzB;;AAED,OAAI,QAAQ,IAAI,OAAO,EAAC;AACtB,YAAO,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC1B;;AAED,YAAS,GAAG,SAAS,CAAC,MAAM,CAAC,UAAC,MAAM,EAAG;AACrC,YAAO,MAAM,CAAC,QAAQ,KAAK,QAAQ;IACpC,CAAC,CAAC;;AAEH,eAAY,EAAE,CAAC;EAEhB;;AAED,UAAS,aAAa,CAAC,QAAQ,EAAE,MAAM,EAAC;AACtC,OAAI,OAAO,GAAG,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAE,CAAC;AACnE,OAAI,OAAO,KAAK,KAAK,CAAE,IACrB,EAAE,QAAQ,IAAI,WAAW,CAAC,IAC1B,EAAE,OAAO,IAAI,WAAW,CAAC,QAAQ,CAAC,CAAC,EAAC;AACpC,YAAO,KAAK,CAAE,CAAC;IAChB;AACD,UAAO,WAAW,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;EAC7C;;AAED,UAAS,gBAAgB,CAAC,QAAQ,EAAC;AACjC,OAAI,QAAQ,KAAK,KAAK,CAAE,IACtB,QAAQ,KAAK,IAAI,IACjB,EAAE,QAAQ,IAAI,WAAW,CAAC,EAAC;AAC3B,YAAO,KAAK,CAAE,CAAC;IAChB;AACD,UAAO,WAAW,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC;EAC5C;;AAED,OAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;;AAEhD,KAAI,MAAM,GAAG,SAAT,MAAM,CAAI,KAAK,EAAK;AACtB,OAAI,OAAO,GAAG,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC;AACrC,UAAO,mBAAM,aAAa,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;EAC5C;;SAEQ,MAAM,GAAN,MAAM;;;;KAGF,QAAQ;aAAR,QAAQ;;AACR,YADA,QAAQ,CACP,KAAK,EAAC;2BADP,QAAQ;;AAEjB,gCAFS,QAAQ,6CAEX,KAAK,EAAE;IACd;;gBAHU,QAAQ;;YAKD,8BAAE;AAClB,sBAAe,CAAC,IAAI,EAAE;AACpB,cAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;AACvB,gBAAO,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;QAC3B,CAAC,CAAC;MACJ;;;YAEmB,gCAAG;AACrB,yBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;MACrC;;;YAEK,kBAAE;AACN,WAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;AAC/B,WAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC;AAC1C,WAAI,WAAW,GAAG,mBAAM,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,UAAS,KAAK,EAAE;;AAExE,aAAI,KAAK,CAAC,IAAI,KAAK,MAAM,EAAE;AACzB,kBAAO,KAAK,CAAC;UACd;;AAED,aAAI,WAAW,GAAG,aAAa,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;;;AAGjD,aAAI,WAAW,KAAK,KAAK,CAAE,EAAE;AAC3B,kBAAO,KAAK,CAAC;UACd;;AAED,aAAI,aAAa,IAAI,KAAK,CAAC,KAAK,EAAC;AAC/B,eAAI,aAAa,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;AAC/C,eAAI,aAAa,KAAK,KAAK,CAAE,IAAK,aAAa,IAAI,KAAK,CAAC,KAAK,CAAC,WAAY,EAAC;AAC1E,oBAAO,mBAAM,YAAY,CAAC,KAAK,EAAE;AAC/B,oBAAK,EAAE,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE,WAAW,CAAC;cACrF,CAAC,CAAC;YACJ;UACF;AACD,gBAAO,mBAAM,YAAY,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,WAAW,CAAC,EAAE,CAAC,CAAC;QACpF,CAAC,CAAC;AACH,cAAO,mBAAM,aAAa,CAAC,OAAO,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;MACxD;;;UA3CU,QAAQ;IAAS,mBAAM,SAAS;;;;AA8C7C,SAAQ,CAAC,SAAS,GAAG;AACnB,OAAI,EAAE,mBAAM,SAAS,CAAC,MAAM,CAAC,UAAU;AACvC,QAAK,EAAE,mBAAM,SAAS,CAAC,IAAI;AAC3B,SAAM,EAAE,mBAAM,SAAS,CAAC,SAAS,CAAC,CAChC,mBAAM,SAAS,CAAC,KAAK,CAAC;AACpB,SAAI,EAAE,mBAAM,SAAS,CAAC,MAAM,CAAC,UAAU;AACvC,gBAAW,EAAE,mBAAM,SAAS,CAAC,SAAS,CAAC,CACrC,mBAAM,SAAS,CAAC,OAAO,CAAC,mBAAM,SAAS,CAAC,MAAM,CAAC,EAC/C,mBAAM,SAAS,CAAC,MAAM,CACvB,CAAC,CAAC,UAAU;AACb,WAAM,EAAE,mBAAM,SAAS,CAAC,SAAS,CAAC,CAChC,mBAAM,SAAS,CAAC,OAAO,CAAC,mBAAM,SAAS,CAAC,MAAM,CAAC,EAC/C,mBAAM,SAAS,CAAC,MAAM,CACvB,CAAC,CAAC,UAAU;IACd,CAAC,EACF,mBAAM,SAAS,CAAC,OAAO,CAAC,mBAAM,SAAS,CAAC,KAAK,CAAC;AAC1C,SAAI,EAAE,mBAAM,SAAS,CAAC,MAAM,CAAC,UAAU;AACvC,gBAAW,EAAE,mBAAM,SAAS,CAAC,SAAS,CAAC,CACrC,mBAAM,SAAS,CAAC,OAAO,CAAC,mBAAM,SAAS,CAAC,MAAM,CAAC,EAC/C,mBAAM,SAAS,CAAC,MAAM,CACvB,CAAC,CAAC,UAAU;AACb,WAAM,EAAE,mBAAM,SAAS,CAAC,SAAS,CAAC,CAChC,mBAAM,SAAS,CAAC,OAAO,CAAC,mBAAM,SAAS,CAAC,MAAM,CAAC,EAC/C,mBAAM,SAAS,CAAC,MAAM,CACvB,CAAC,CAAC,UAAU;IACd,CAAC,CACH,CACF,CAAC,CAAC,UAAU;AACb,UAAO,EAAE,mBAAM,SAAS,CAAC,MAAM;AAC/B,WAAQ,EAAE,mBAAM,SAAS,CAAC,GAAG,CAAC,UAAU;EACzC,C;;;;;;ACzkBD;;AAEA;AACA;AACA;AACA;AACA,gDAA6E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,iCAAgC,UAAU,EAAE;AAC5C,E;;;;;;ACpBA;AACA;;;AAGA;AACA,iCAAgC,2BAA2B,GAAG,gBAAgB,eAAe,cAAc,GAAG,0BAA0B,wBAAwB,GAAG;;AAEnK;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,iBAAiB;AACjC;AACA;AACA,yCAAwC,gBAAgB;AACxD,KAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA,aAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjDA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,sBAAsB;AACtC;AACA;AACA,mBAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA,kBAAiB,2BAA2B;AAC5C;AACA;AACA,SAAQ,uBAAuB;AAC/B;AACA;AACA,IAAG;AACH;AACA,kBAAiB,uBAAuB;AACxC;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA,iCAAgC,sBAAsB;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;;AAEA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,wDAAuD;AACvD;;AAEA,8BAA6B,mBAAmB;;AAEhD;;AAEA;;AAEA;AACA;AACA;;;;;;;aC1NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,SAA2D,mBAAmB,gDAAgD,aAAa,KAAK,MAAM,gCAAgC,SAAS,qCAAqC,SAAS,mCAAmC,OAAO,KAAK,OAAO,oBAAoB,aAAa,0BAA0B,0BAA0B,gBAAgB,UAAU,UAAU,0CAA0C,8BAAwB,oBAAoB,8CAA8C,kCAAkC,YAAY,YAAY,mCAAmC,iBAAiB,gBAAgB,sBAAsB,oBAAoB,0CAA0C,YAAY,WAAW,YAAY,SAAS,GAAG;AAC9yB;;AAEA,kCAAiC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEljB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;;AAEA;AACA;AACA,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,2DAA0D;AAC1D,wBAAuB;AACvB,mCAAkC,kDAAkD;AACpF;AACA;AACA;AACA;AACA,mBAAkB,oDAAoD;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,mBAAkB,oDAAoD;AACtE;AACA,mBAAkB,oDAAoD;AACtE;AACA;AACA,MAAK;AACL;AACA,oBAAmB,oDAAoD;AACvE;AACA,eAAc;AACd,MAAK;AACL;AACA,oBAAmB,oDAAoD;AACvE;AACA,oBAAmB,oDAAoD;AACvE;AACA,yCAAwC,0BAA0B,KAAK;AACvE,MAAK;AACL;AACA,oBAAmB,oDAAoD;AACvE;AACA;AACA,MAAK;AACL;AACA,gBAAe,gEAAgE;AAC/E,MAAK;AACL;AACA;AACA,gBAAe,wDAAwD;AACvE,MAAK;AACL;AACA,gBAAe,wDAAwD;AACvE,MAAK;AACL;AACA,oBAAmB,oDAAoD;AACvE;AACA,oBAAmB,oDAAoD;AACvE;AACA,oBAAmB,oDAAoD;AACvE;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA,oBAAmB,oDAAoD;AACvE;AACA,sBAAqB,kBAAkB,SAAS,kBAAkB;AAClE,MAAK;AACL;AACA,oBAAmB,sDAAsD;AACzE;AACA,eAAc;AACd,MAAK;AACL;AACA,oBAAmB,sDAAsD;AACzE;AACA,eAAc;AACd,MAAK;AACL;AACA,oBAAmB,sDAAsD;AACzE;AACA,eAAc;AACd,MAAK;AACL;AACA,oBAAmB,sDAAsD;AACzE;AACA,eAAc;AACd,MAAK;AACL;AACA,eAAc;AACd,MAAK;AACL;AACA,oBAAmB,8DAA8D;AACjF;AACA,oBAAmB,oEAAoE;AACvF;AACA,eAAc;AACd,MAAK;AACL;AACA,oBAAmB,oDAAoD;AACvE;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,iCAAgC,oCAAoC;AACpE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wCAAuC,0CAA0C;AACjF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2BAA0B,YAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW;AACX;AACA,YAAW;AACX;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW;AACX;AACA,YAAW;AACX;AACA,YAAW;AACX;AACA,YAAW;AACX;;AAEA;AACA;AACA;AACA;;AAEA,oBAAmB,qBAAqB;AACxC;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;AACL;AACA,mBAAkB,2CAA2C;AAC7D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,2DAA0D;AAC1D,wBAAuB;AACvB,mCAAkC,kDAAkD;AACpF;AACA;AACA;AACA;AACA,mBAAkB,oDAAoD;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,mBAAkB,sDAAsD;AACxE;AACA;AACA,MAAK;AACL;AACA,oBAAmB,oDAAoD;AACvE;AACA;AACA,MAAK;AACL;AACA,oBAAmB,oDAAoD;AACvE;AACA;AACA,MAAK;AACL;AACA,oBAAmB,oDAAoD;AACvE;AACA;AACA,MAAK;AACL;AACA,oBAAmB,oDAAoD;AACvE;AACA,oBAAmB,sDAAsD;AACzE,oBAAmB,4CAA4C;AAC/D;AACA,oBAAmB,oDAAoD;AACvE;AACA,eAAc;AACd,MAAK;AACL;AACA,oBAAmB,oDAAoD;AACvE;AACA,oBAAmB,oDAAoD;AACvE;AACA,oBAAmB,oDAAoD;AACvE;AACA;AACA,MAAK;AACL;AACA,gDAA+C,0BAA0B,KAAK;AAC9E;AACA,QAAO,KAAK;AACZ,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA,oBAAmB,sDAAsD;AACzE;AACA,gBAAe,mBAAmB;AAClC,MAAK;AACL;AACA,oBAAmB,oDAAoD;AACvE;AACA;AACA,MAAK;AACL;AACA,gBAAe,uCAAuC;AACtD,MAAK;AACL;AACA,oBAAmB,oDAAoD;AACvE;AACA,gBAAe,sCAAsC;AACrD,MAAK;AACL;AACA;AACA,gBAAe,+BAA+B;AAC9C,MAAK;AACL;AACA,gBAAe,4CAA4C;AAC3D,MAAK;AACL;AACA,gBAAe,+BAA+B;AAC9C,MAAK;AACL;AACA,oBAAmB,oDAAoD;AACvE;AACA,oBAAmB,oDAAoD;AACvE;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA,oBAAmB,oDAAoD;AACvE;AACA,sBAAqB,kBAAkB,SAAS,kBAAkB;AAClE,MAAK;AACL;AACA,sBAAqB,sCAAsC,SAAS,kBAAkB;AACtF,MAAK;AACL;AACA,oBAAmB,sDAAsD;AACzE;AACA,eAAc;AACd,MAAK;AACL;AACA,oBAAmB,sDAAsD;AACzE;AACA,eAAc;AACd,MAAK;AACL;AACA,oBAAmB,sDAAsD;AACzE;AACA,eAAc;AACd,MAAK;AACL;AACA,oBAAmB,sDAAsD;AACzE;AACA,eAAc;AACd,MAAK;AACL;AACA,eAAc;AACd,MAAK;AACL;AACA,oBAAmB,oDAAoD;AACvE;AACA,eAAc;AACd,MAAK;AACL;AACA,eAAc;AACd,MAAK;AACL;AACA,oBAAmB,4DAA4D;AAC/E;AACA;AACA,MAAK;AACL;AACA,oBAAmB,8DAA8D;AACjF;AACA;AACA,MAAK;AACL;AACA,oBAAmB,0DAA0D;AAC7E;AACA;AACA,MAAK;AACL;AACA,oBAAmB,gEAAgE;AACnF;AACA;AACA,MAAK;AACL;AACA,oBAAmB,8DAA8D;AACjF;AACA;AACA,MAAK;AACL;AACA,oBAAmB,gEAAgE;AACnF;AACA;AACA,MAAK;AACL;AACA,oBAAmB,kEAAkE;AACrF;AACA;AACA,MAAK;AACL;AACA,oBAAmB,kEAAkE;AACrF;AACA;AACA,MAAK;AACL;AACA,qBAAoB,oDAAoD;AACxE;AACA;AACA,MAAK;AACL;AACA,qBAAoB,oDAAoD;AACxE;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA,qBAAoB,oDAAoD;AACxE;AACA,qBAAoB,8DAA8D;AAClF;AACA,qBAAoB,oEAAoE;AACxF;AACA,eAAc;AACd,MAAK;AACL;AACA,eAAc;AACd,MAAK;AACL;AACA,qBAAoB,sDAAsD;AAC1E;AACA;AACA,MAAK;AACL;AACA,qBAAoB,oDAAoD;AACxE;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,iCAAgC,oCAAoC;AACpE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wCAAuC,0CAA0C;AACjF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2BAA0B,YAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW;AACX;AACA,YAAW;AACX;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW;AACX;AACA,YAAW;AACX;AACA,YAAW;AACX;AACA,YAAW;AACX;;AAEA;AACA;AACA;AACA;;AAEA,oBAAmB,qBAAqB;AACxC;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACbcAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;AACL;AACA,mBAAkB,2CAA2C;AAC7D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA,kBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA,kBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,OAAO;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,YAAY;AACzC;AACA;AACA,IAAG;AACH;AACA,gBAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,kBAAkB;AACpC;AACA;AACA,kBAAiB,oBAAoB;AACrC;AACA;AACA;AACA,sBAAqB,kBAAkB;AACvC;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA6B,8BAA8B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA2B,wBAAwB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,gBAAe,QAAQ;AACvB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,MAAM;AACtB;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,yBAAyB;AAChD;AACA,0BAAyB,kBAAkB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,MAAM,EAAE,OAAO;AACjD,mBAAkB,OAAO;AACzB,oBAAmB,OAAO;AAC1B,sBAAqB,OAAO;AAC5B,sBAAqB,OAAO;AAC5B,uBAAsB,OAAO;AAC7B,uBAAsB,OAAO;AAC7B,sBAAqB,OAAO;AAC5B,oBAAmB,UAAU,GAAG,OAAO;AACvC,qBAAoB,UAAU,GAAG,OAAO;AACxC,oBAAmB,UAAU,EAAE,MAAM;AACrC,oBAAmB,UAAU;AAC7B;AACA,gBAAe,aAAa;AAC5B,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,yBAAyB;AAC9C;AACA,wBAAuB,kBAAkB;AACzC;AACA,0BAAyB,+BAA+B;AACxD,4BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA,gCAA+B,kBAAkB;AACjD;AACA;AACA;AACA,kCAAiC,kBAAkB;AACnD;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,YAAY;AAC5D;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,gBAAe,iBAAiB;AAChC,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAc;AACd;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,mEAAkE;AAClE;AACA;AACA,eAAc;AACd;AACA,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;;AAEA;AACA;AACA,8BAA6B,eAAe;AAC5C;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,cAAc;AAC3B,cAAa,MAAM;AACnB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,KAAK;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B,qCAAoC;AACpC,gDAA+C;AAC/C,mDAAkD;AAClD;AACA;AACA,gBAAe,aAAa;AAC5B,iBAAgB,KAAK;AACrB;AACA;AACA;AACA;AACA;AACA,+EAA8E;AAC9E;AACA,iGAAgG;AAChG;AACA,iGAAgG;AAChG;AACA,0GAAyG;AACzG;AACA,iGAAgG;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,8BAA8B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB,kBAAiB,qBAAqB;AACtC,qBAAoB,oBAAoB;AACxC,kBAAiB,OAAO;AACxB,kBAAiB,qBAAqB;AACtC,uBAAsB,OAAO;AAC7B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,KAAK;AACrB;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB,kBAAiB,qBAAqB;AACtC,qBAAoB,oBAAoB;AACxC,kBAAiB,OAAO;AACxB,kBAAiB,qBAAqB;AACtC,uBAAsB,OAAO;AAC7B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B;AACA;AACA,gBAAe,MAAM;AACrB,iBAAgB,KAAK;AACrB;AACA,IAAG;AACH;AACA;AACA,sBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA,0DAAyD;AACzD;AACA;AACA;AACA,eAAc;AACd;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,EAAE,qBAAqB;AACxB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,WAAW;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,sBAAsB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,+CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,kBAAkB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,EAAC,kBAAkB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,kBAAkB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,EAAC,kBAAkB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzcAAa;AACb;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,kBAAkB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,6CAA4C;AAC5C,MAAK,sCAAsC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,WAAW;AAC1B,gBAAe,SAAS;AACxB,gBAAe,WAAW;AAC1B,gBAAe,OAAO;AACtB;AACA;AACA;AACA,uCAAsC,mCAAmC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,oBAAoB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,oBAAoB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA,mCAAkC,WAAW;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,2BAA2B;AAC9C,qBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,2BAA2B;AAC9C,qBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,qBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,qBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,oBAAoB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,sCAAsC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,OAAO;AAC3B;AACA;AACA;AACA,oDAAmD,OAAO;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,2BAA2B;AAC9C,qBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,2BAA2B;AAC9C,qBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,qBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,qBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,YAAY;AAC/C;AACA,yCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD,OAAO;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA,EAAC,oBAAoB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,qBAAoB,OAAO;AAC3B;AACA;AACA,gCAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK,iDAAiD;AACtD,EAAC,oBAAoB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,oBAAoB;AACvC,oBAAmB,SAAS;AAC5B,oBAAmB,2BAA2B;AAC9C,oBAAmB,OAAO;AAC1B;AACA;AACA,uCAAsC,mCAAmC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,WAAW;AAC9B,qBAAoB,KAAK;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,SAAS;AAC5B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,SAAS;AAC5B,qBAAoB,KAAK;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,SAAS;AAC5B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,4CAA4C;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA4D;AAC5D,6DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK,gCAAgC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC,gBAAgB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,mBAAmB;AAC5D,sEAAqE,YAAY,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,mBAAmB;AAC5D;AACA;AACA,8CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,EAAC,oBAAoB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC;;AAED,EAAC,GAAG,EAAE,GAAG;AACT,EAAC,E;;;;;;ACvzND,gD","file":"react-autolayout.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactAutoLayout\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactAutoLayout\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_6__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"build/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 789935a0106acd67d4ae\n **/","import './styles.css';\nimport AutoLayout from './node_modules/autolayout/dist/autolayout.kiwi.js';\nimport React from 'react';\n\nlet listeners = {};\nlet config = {};\nlet configArr = [];\nlet constraints = {};\nlet borders = {};\nlet pxRegex = /\\d+\\.?\\d?(?=(px))?/g;\n\nfunction invariant(cond, message) {\n  if (cond) {\n    throw new Error('Invariant Violation: ' + message);\n  }\n}\n\nfunction  merge() {\n  let a = {};\n  Array.prototype.slice.call(arguments).forEach(function(x) {\n    for (let k in x) {\n      if (!x.hasOwnProperty(k)) {\n        continue;\n      }\n      if(typeof x[k] === 'function'){\n        a[k] = x[k].call(null, constraints);\n      } else {\n        a[k] = x[k];\n      }\n    }\n  });\n  return a;\n}\n\nfunction getViewportDimensions(viewport, w, h){\n  //TODO: intrinsic values\n  if(viewport !== void(0)){\n    if('height' in viewport){\n      if(viewport.height === true){\n        invariant(viewport.height, 'intrisic not supported for viewport');\n      } else {\n        h = viewport.height;\n      }\n    }\n    if('width' in viewport){\n      if(viewport.width === true){\n        invariant(viewport.width, 'intrisic not supported for viewport');\n      } else {\n        w = viewport.width;\n      }\n    }\n    if('max-height' in viewport){\n      h = h > viewport['max-height'] ? viewport['max-height'] : h;\n    }\n    if('min-height' in viewport){\n      h = h < viewport['min-height'] ? viewport['min-height'] : h;\n    }\n    if('aspect-ratio' in viewport){\n      w = viewport['aspect-ratio'] * h;\n    }\n    if('max-width' in viewport){\n      w = w > viewport['max-width'] ? viewport['max-width'] : w; \n    }\n    if('min-width' in viewport){\n      w = w < viewport['min-width'] ? viewport['min-width'] : w; \n    }\n  }\n  return [w, h];\n}\n\nfunction updateContraints(viewConfig, currentFormat) {\n  let layoutConstraints = {};\n  let subView;\n  let constrainTo = viewConfig.layouts[currentFormat].constrainTo;\n  let constrainToIsFixed = viewConfig.layouts[currentFormat].constrainToIsFixed;\n  let viewport = {};\n  let colors = {};\n  let shapes = {};\n  let widths = {};\n  let heights = {};\n  let w, h; //width, height\n  \n  /*\n   * Sets the spacing for the view.\n   *\n   * The spacing can be set for 7 different variables:\n   * `top`, `right`, `bottom`, `left`, `width`, `height` and `zIndex`. The `left`-spacing is\n   * used when a spacer is used between the parent-view and a sub-view (e.g. `|-[subView]`).\n   * The same is true for the `right`, `top` and `bottom` spacers. The `width` and `height` are\n   * used for spacers in between sub-views (e.g. `[view1]-[view2]`).\n   *\n   * Instead of using the full spacing syntax, it is also possible to use shorthand notations:\n   *\n   * |Syntax|Type|Description|\n   * |---|---|---|\n   * |`[top, right, bottom, left, width, height, zIndex]`|Array(7)|Full syntax including z-index **(clockwise order)**.|\n   * |`[top, right, bottom, left, width, height]`|Array(6)|Full horizontal & vertical spacing syntax (no z-index) **(clockwise order)**.|\n   * |`[horizontal, vertical, zIndex]`|Array(3)|Horizontal = left, right, width, vertical = top, bottom, height.|\n   * |`[horizontal, vertical]`|Array(2)|Horizontal = left, right, width, vertical = top, bottom, height, z-index = 1.|\n   * |`spacing`|Number|Horizontal & vertical spacing are all the same, z-index = 1.|\n   *\n   * Examples:\n   * ```javascript\n   * view.setSpacing(10); // horizontal & vertical spacing 10\n   * view.setSpacing([10, 15, 2]); // horizontal spacing 10, vertical spacing 15, z-axis spacing 2\n   * view.setSpacing([10, 20, 10, 20, 5, 5]); // top, right, bottom, left, horizontal, vertical\n   * view.setSpacing([10, 20, 10, 20, 5, 5, 1]); // top, right, bottom, left, horizontal, vertical, z\n   * ```\n   *\n   * @param {Number|Array} spacing\n   */\n\n  if ('spacing' in viewConfig.layouts[currentFormat].metaInfo) {\n    viewConfig.view.setSpacing(viewConfig.layouts[currentFormat].metaInfo.spacing);\n  }\n\n  if ('viewport' in viewConfig.layouts[currentFormat].metaInfo) {\n    viewport = viewConfig.layouts[currentFormat].metaInfo.viewport;\n  }\n\n  if ('colors' in viewConfig.layouts[currentFormat].metaInfo) {\n    colors = viewConfig.layouts[currentFormat].metaInfo.colors;\n  }\n\n  if ('widths' in viewConfig.layouts[currentFormat].metaInfo) {\n    widths = viewConfig.layouts[currentFormat].metaInfo.widths;\n  }\n\n  if ('heights' in viewConfig.layouts[currentFormat].metaInfo) {\n    heights = viewConfig.layouts[currentFormat].metaInfo.heights;\n  }\n\n  if ('shapes' in viewConfig.layouts[currentFormat].metaInfo) {\n    shapes = viewConfig.layouts[currentFormat].metaInfo.shapes;\n  }\n\n  if (constrainToIsFixed){\n    [w, h] = getViewportDimensions(viewport, constrainTo[0], constrainTo[1]);\n  } else if (viewConfig.layouts[currentFormat].constrainTo[0] == 'viewport' || !(constrainTo[0] in constraints)){\n    [w, h] = getViewportDimensions(viewport, window.innerWidth, window.innerHeight);\n  } else {\n    \n    let constrainToViewName = constrainTo[0];\n    let constrainToViewKey = constrainTo[1];\n    \n    //Need to determine if borders have been set on parent view and adjust obtain the innerWidth/Height\n    let style = constraints[constrainToViewName][constrainToViewKey].style;\n    let borderWidth = borders[constrainToViewName][constrainToViewKey].borderWidth;\n    let borderHeight = borders[constrainToViewName][constrainToViewKey].borderHeight;\n\n    if (('format' in  borders[constrainToViewName][constrainToViewKey]) &&\n        currentFormat in borders[constrainToViewName][constrainToViewKey].format){\n      borderWidth = borders[constrainToViewName][constrainToViewKey].format[currentFormat].borderWidth;\n      borderHeight = borders[constrainToViewName][constrainToViewKey].format[currentFormat].borderHeight;\n    }\n    \n    [w, h] = getViewportDimensions(viewport, style.width - borderWidth, style.height - borderHeight);\n  }\n\n  viewConfig.view.setSize(w, h);\n  layoutConstraints[viewConfig.viewName] = {};\n  layoutConstraints[viewConfig.viewName].currentFormat = currentFormat;\n  \n  for (let subViewKey in viewConfig.view.subViews) {\n    if (viewConfig.view.subViews.hasOwnProperty(subViewKey) && subViewKey[0] !== \"_\"){\n      subView = viewConfig.view.subViews[subViewKey];\n      layoutConstraints[viewConfig.viewName][subViewKey] = {\n        style: {\n          width: subView.width, \n          height: subView.height,\n          // top: subView.top,\n          // left: subView.left,\n          zIndex: subView.zIndex * 5,\n          transform: `translate3d(${subView.left}px, ${subView.top}px, 0)`,\n          position: 'absolute',\n          margin: 0,\n          padding: 0\n        },\n        top: subView.top,\n        left: subView.left,\n        width: subView.width, \n        height: subView.height,\n        zIndex: subView.zIndex * 5,\n      };\n    }\n\n    if (subViewKey in colors){\n      layoutConstraints[viewConfig.viewName][subViewKey].style.backgroundColor = colors[subViewKey];\n    }\n    if (subViewKey in widths){\n      if (widths[subViewKey] === true){\n        layoutConstraints[viewConfig.viewName][subViewKey].style.width = 'auto';\n        layoutConstraints[viewConfig.viewName][subViewKey].width = 'auto';\n      } else {\n        layoutConstraints[viewConfig.viewName][subViewKey].style.width = widths[subViewKey];\n        layoutConstraints[viewConfig.viewName][subViewKey].width = widths[subViewKey];\n      }\n    }\n    if (subViewKey in heights){\n      if (heights[subViewKey] === true){\n        layoutConstraints[viewConfig.viewName][subViewKey].style.height = 'auto';\n        layoutConstraints[viewConfig.viewName][subViewKey].height = 'auto';\n      } else {\n        layoutConstraints[viewConfig.viewName][subViewKey].style.height = heights[subViewKey];\n        layoutConstraints[viewConfig.viewName][subViewKey].height = heights[subViewKey];\n      }\n    }\n    if (subViewKey in shapes){\n      if (shapes[subViewKey] === 'circle'){\n        layoutConstraints[viewConfig.viewName][subViewKey].style.borderRadius = '50%';\n        layoutConstraints[viewConfig.viewName][subViewKey].style.width = layoutConstraints[viewConfig.viewName][subViewKey].style.height;\n        layoutConstraints[viewConfig.viewName][subViewKey].width = layoutConstraints[viewConfig.viewName][subViewKey].style.height;\n      }\n    }\n  };\n  return layoutConstraints;\n}\n\nfunction updateLayout(e, viewName, applyStyle) {\n\n  let currentFormat; \n\n  for (let i = 0, l = configArr.length; i < l; i++) {\n    currentFormat = configArr[i].query(constraints, configArr[i].currentFormat);\n    if(currentFormat !== void(0)){    \n      if (configArr[i].currentFormat !== currentFormat){\n        configArr[i].view = new AutoLayout.View();\n        configArr[i].view.addConstraints(configArr[i].layouts[currentFormat].constraints);\n      }\n      configArr[i].currentFormat = currentFormat;\n    }\n    constraints = merge(constraints, updateContraints(configArr[i], configArr[i].currentFormat));\n  };\n\n  for (let k3 in listeners){\n    if (listeners.hasOwnProperty(k3)){\n      listeners[k3]();\n    }\n  }\n}\n\nfunction captureBorderDimensions(style, defaultWidth, defaultHeight){\n  let border, width = defaultWidth || 0, height = defaultHeight || 0;\n  let len;\n  let borderStyle;\n\n  if ('border' in style){\n    if(typeof style.border === 'function'){\n      borderStyle = style.border.call(null, constraints);\n    } else {\n      borderStyle = style.border;\n    }\n    border = borderStyle.match(pxRegex);\n    width = border[0] * 2;\n    height = border[0] * 2;\n  } else if ('borderTop' in style || \n    'borderBottom' in style) {\n    height = 0;\n    if ('borderTop' in style) {\n      if(typeof style.borderTop === 'function'){\n        borderStyle = style.borderTop.call(null, constraints);\n      } else {\n        borderStyle = style.borderTop;\n      }\n      border = borderStyle.match(pxRegex);\n      height += border[0];\n    }\n    if ('borderBottom' in style) {\n      if(typeof style.borderBottom === 'function'){\n        borderStyle = style.borderBottom.call(null, constraints);\n      } else {\n        borderStyle = style.borderBottom;\n      }\n      border = borderStyle.match(pxRegex);\n      height += border[0];      \n    }\n  } else if ('borderRight' in style || \n    'borderLeft' in style) {\n    width = 0;\n    if ('borderRight' in style) {\n      if(typeof style.borderRight === 'function'){\n        borderStyle = style.borderRight.call(null, constraints);\n      } else {\n        borderStyle = style.borderRight;\n      }\n      border = borderStyle.match(pxRegex);\n      width += border[0];\n    }\n    if ('borderLeft' in style) {\n      if(typeof style.borderLeft === 'function'){\n        borderStyle = style.borderLeft.call(null, constraints);\n      } else {\n        borderStyle = style.borderLeft;\n      }\n      border = borderStyle.match(pxRegex);\n      width += border[0];\n    }\n  } else if ('borderWidth' in style){\n    if(typeof style.borderWidth === 'function'){\n      borderStyle = style.borderWidth.call(null, constraints);\n    } else {\n      borderStyle = style.borderWidth;\n    }\n    border = borderStyle.match(pxRegex);\n    len = border.length;\n    if (len === 1){\n      width = border[0] * 2;\n      height = border[0] * 2;\n    }\n    if (len === 2){\n      width = border[1] * 2;\n      height = border[0] * 2;      \n    }\n    if (len === 3){\n      width = border[1] * 2;\n      height = border[0] * border[2];            \n    }\n    if (len === 4){\n      width = border[1] * border[4];\n      height = border[0] * border[2];      \n    }\n  } else if ('borderTopWidth' in style || \n    'borderBottomWidth' in style) {\n    height = 0;\n    if ('borderTopWidth' in style) {\n      if(typeof style.borderTopWidth === 'function'){\n        borderStyle = style.borderTopWidth.call(null, constraints);\n      } else {\n        borderStyle = style.borderTopWidth;\n      }\n      border = borderStyle.match(pxRegex);\n      height += border[0];\n    }\n    if ('borderBottomWidth' in style) {\n      if(typeof style.borderBottomWidth === 'function'){\n        borderStyle = style.borderBottomWidth.call(null, constraints);\n      } else {\n        borderStyle = style.borderBottomWidth;\n      }\n      border = borderStyle.match(pxRegex);\n      height += border[0];      \n    }\n  } else if ('borderRightWidth' in style || \n    'borderLeftWidth' in style) {\n    width = 0;\n    if ('borderRightWidth' in style) {\n      if(typeof style.borderRightWidth === 'function'){\n        borderStyle = style.borderRightWidth.call(null, constraints);\n      } else {\n        borderStyle = style.borderRightWidth;\n      }\n      border = borderStyle.match(pxRegex);\n      width += border[0];\n    }\n    if ('borderLeftWidth' in style) {\n      if(typeof style.borderLeftWidth === 'function'){\n        borderStyle = style.borderLeftWidth.call(null, constraints);\n      } else {\n        borderStyle = style.borderLeftWidth;\n      }\n      border = borderStyle.match(pxRegex);\n      width += border[0];\n    }\n  }\n  return { width, height };\n}\n\nfunction addVisualFormat(component, descriptor){\n  let viewName = component.props.name;\n  let currentFormat;\n\n  invariant(viewName === void(0), 'name is required!');\n  invariant((viewName in config), `${viewName} name must be unique.`);\n  \n  //capture child border widths\n  borders[viewName] = {};\n  let childArray = React.Children.toArray(component.props.children);\n  childArray.forEach(function(child){\n    borders[viewName][child.props.name] = {};\n    borders[viewName][child.props.name].borderWidth = 0;\n    borders[viewName][child.props.name].borderHeight = 0;\n  \n    if ('style' in child.props){\n      let {width, height} = captureBorderDimensions(child.props.style);\n      borders[viewName][child.props.name].borderWidth = width;\n      borders[viewName][child.props.name].borderHeight = height;\n    }\n  \n    if ('layoutStyle' in child.props){\n      borders[viewName][child.props.name].format = borders[viewName][child.props.name].format || {};\n      for (let k in child.props.layoutStyle){\n        if (child.props.layoutStyle.hasOwnProperty(k)){\n          borders[viewName][child.props.name].format[k] = {};\n          \n          let {width, height} = captureBorderDimensions(child.props.layoutStyle[k], \n            borders[viewName][child.props.name].borderWidth,\n            borders[viewName][child.props.name].borderHeight);\n          \n          borders[viewName][child.props.name].format[k].borderWidth = width;\n          borders[viewName][child.props.name].format[k].borderHeight = height;\n        }\n      }\n    }\n  });\n\n  //then we add the default view to the view as constraints\n  listeners[viewName] = function(){\n    component.forceUpdate();\n  };\n\n  /*\n    If descriptor.layouts is not an Array it is assumed that an object. 'query' is optional.\n  */\n  let layouts = Array.isArray(descriptor.layouts) ? descriptor.layouts : [descriptor.layouts];\n\n  config[viewName] = {};\n  config[viewName].layouts = {};\n  config[viewName].query = descriptor.query || () => void(0); //If no query then just return void(0).\n  config[viewName].viewName = viewName;\n\n  currentFormat = config[viewName].query(constraints);\n  config[viewName].currentFormat = currentFormat || layouts[0].name;\n\n  for (let i = 0, len = layouts.length; i < len; i++) {\n    let layout = layouts[i];\n    config[viewName].layouts[layout.name] = {};\n    config[viewName].layouts[layout.name].htmlTag = layout.htmlTag;\n    if (Array.isArray(layout.constrainTo)){\n      config[viewName].layouts[layout.name].constrainToIsFixed = true;\n      config[viewName].layouts[layout.name].constrainTo = layout.constrainTo;\n    } else {\n      //assume it is a string\n      config[viewName].layouts[layout.name].constrainToIsFixed = false;\n      config[viewName].layouts[layout.name].constrainTo = layout.constrainTo.split('.');\n    }\n    config[viewName].layouts[layout.name].constraints = AutoLayout.VisualFormat.parse(layout.format, {extended: true});\n    config[viewName].layouts[layout.name].metaInfo = AutoLayout.VisualFormat.parseMetaInfo ? AutoLayout.VisualFormat.parseMetaInfo(layout.format) : {};\n  };\n\n  config[viewName].view = new AutoLayout.View();\n  config[viewName].view.addConstraints(config[viewName].layouts[config[viewName].currentFormat].constraints);\n  constraints = merge(constraints, updateContraints(config[viewName], config[viewName].currentFormat));\n\n  configArr.push(config[viewName]);\n\n  for (let i = 0, l = configArr.length; i < l; i++) {\n    constraints = merge(constraints, updateContraints(configArr[i], configArr[i].currentFormat));\n  };\n\n  updateLayout();\n  \n}\n\nfunction removeVisualFormat(viewName){\n\n  if (viewName in listeners){\n    delete listeners[viewName];\n  }\n\n  if (viewName in constraints){\n    delete constraints[viewName];\n  }\n\n  if (viewName in config){\n    config[viewName].view = null;\n    delete config[viewName];\n  }\n\n  if (viewName in borders){\n    delete borders[viewName];\n  }\n\n  configArr = configArr.filter((config)=>{\n    return config.viewName !== viewName\n  });\n\n  updateLayout();\n  \n}\n\nfunction getContraints(viewName, region){\n  let viewKey = !!viewName && !!region ? region.props.name : void(0);\n  if (viewKey === void(0) ||\n    !(viewName in constraints) || \n    !(viewKey in constraints[viewName])){\n    return void(0);\n  }\n  return constraints[viewName][viewKey].style;\n}\n\nfunction getCurrentFormat(viewName){ \n  if (viewName === void(0) || \n    viewName === null || \n    !(viewName in constraints)){\n    return void(0);\n  }\n  return constraints[viewName].currentFormat;\n}\n\nwindow.addEventListener('resize', updateLayout);\n\nlet Region = (props) => {\n  let htmlTag = props.htmlTag || 'div';\n  return React.createElement(htmlTag, props);\n}\n\nexport { Region };\n\n//Viewport Component\nexport class Viewport extends React.Component {\n  constructor(props){\n    super(props);\n  }\n\n  componentWillMount(){\n    addVisualFormat(this, {\n      query: this.props.query,\n      layouts: this.props.layout\n    });\n  }\n\n  componentWillUnmount() {\n    removeVisualFormat(this.props.name);\n  }\n\n  render(){\n    let viewName = this.props.name;\n    let htmlTag = this.props.htmlTag || 'div';\n    let newChildren = React.Children.map(this.props.children, function(child) {\n      \n      if (child.type !== Region) {\n        return child;\n      }\n\n      let constraints = getContraints(viewName, child);\n      \n      //check to see if the element was specified in the layout.\n      if (constraints === void(0)) {\n        return child;\n      }\n\n      if ('layoutStyle' in child.props){\n        let currentFormat = getCurrentFormat(viewName);\n        if (currentFormat !== void(0) && (currentFormat in child.props.layoutStyle)){\n          return React.cloneElement(child, { \n            style: merge(child.props.style, child.props.layoutStyle[currentFormat], constraints) \n          });\n        }\n      }\n      return React.cloneElement(child, { style: merge(child.props.style, constraints) });\n    });\n    return React.createElement(htmlTag, null, newChildren);\n  }\n}\n\nViewport.propTypes = {\n  name: React.PropTypes.string.isRequired,\n  query: React.PropTypes.func,\n  layout: React.PropTypes.oneOfType([\n    React.PropTypes.shape({\n      name: React.PropTypes.string.isRequired,\n      constrainTo: React.PropTypes.oneOfType([\n        React.PropTypes.arrayOf(React.PropTypes.number),\n        React.PropTypes.string\n      ]).isRequired,\n      format: React.PropTypes.oneOfType([\n        React.PropTypes.arrayOf(React.PropTypes.string),\n        React.PropTypes.string\n      ]).isRequired\n    }),\n    React.PropTypes.arrayOf(React.PropTypes.shape({\n        name: React.PropTypes.string.isRequired,\n        constrainTo: React.PropTypes.oneOfType([\n          React.PropTypes.arrayOf(React.PropTypes.number),\n          React.PropTypes.string\n        ]).isRequired,\n        format: React.PropTypes.oneOfType([\n          React.PropTypes.arrayOf(React.PropTypes.string),\n          React.PropTypes.string\n        ]).isRequired\n      })\n    )\n  ]).isRequired,\n  htmlTag: React.PropTypes.string,\n  children: React.PropTypes.any.isRequired\n}\n\n\n/** WEBPACK FOOTER **\n ** ./index.js\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./node_modules/css-loader/index.js!./styles.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./node_modules/css-loader/index.js!./styles.css\", function() {\n\t\t\tvar newContent = require(\"!!./node_modules/css-loader/index.js!./styles.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./styles.css\n ** module id = 1\n ** module chunks = 0\n **/","exports = module.exports = require(\"./node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"html {\\n  box-sizing: border-box;\\n}\\n\\nhtml, body {\\n  padding: 0;\\n  margin: 0;\\n}\\n\\n*, *:before, *:after {\\n  box-sizing: inherit;\\n}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./styles.css\n ** module id = 2\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader/lib/css-base.js\n ** module id = 3\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0;\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction createStyleElement() {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tvar head = getHeadElement();\r\n\tstyleElement.type = \"text/css\";\r\n\thead.appendChild(styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement() {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tvar head = getHeadElement();\r\n\tlinkElement.rel = \"stylesheet\";\r\n\thead.appendChild(linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement());\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement();\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement();\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/style-loader/addStyles.js\n ** module id = 4\n ** module chunks = 0\n **/","/**\n* AutoLayout.js is licensed under the MIT license. If a copy of the\n* MIT-license was not distributed with this file, You can obtain one at:\n* http://opensource.org/licenses/mit-license.html.\n*\n* @author: Hein Rutjes (IjzerenHein)\n* @license MIT\n* @copyright Gloey Apps, 2015\n*\n* @library autolayout.js\n* @version 0.5.2\n*/\n/*-----------------------------------------------------------------------------\n| Kiwi (TypeScript version)\n|\n| Copyright (c) 2014, Nucleic Development Team.\n|\n| Distributed under the terms of the Modified BSD License.\n|\n| The full license is in the file COPYING.txt, distributed with this software.\n|----------------------------------------------------------------------------*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.AutoLayout = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar kiwi = require('kiwi/ts/bin/kiwi');\n'use strict';\n\n/**\n * Layout attributes.\n * @enum {String}\n */\nvar Attribute = {\n  CONST: 'const',\n  NOTANATTRIBUTE: 'const',\n  VARIABLE: 'var',\n  LEFT: 'left',\n  RIGHT: 'right',\n  TOP: 'top',\n  BOTTOM: 'bottom',\n  WIDTH: 'width',\n  HEIGHT: 'height',\n  CENTERX: 'centerX',\n  CENTERY: 'centerY',\n  /*LEADING: 'leading',\n  TRAILING: 'trailing'*/\n  /** Used by the extended VFL syntax. */\n  ZINDEX: 'zIndex'\n};\n\n/**\n * Relation types.\n * @enum {String}\n */\nvar Relation = {\n  /** Less than or equal */\n  LEQ: 'leq',\n  /** Equal */\n  EQU: 'equ',\n  /** Greater than or equal */\n  GEQ: 'geq'\n};\n\n/**\n * Layout priorities.\n * @enum {String}\n */\nvar Priority = {\n  REQUIRED: 1000,\n  DEFAULTHIGH: 750,\n  DEFAULTLOW: 250\n  //FITTINGSIZELEVEL: 50,\n};\n\nvar parser = (function () {\n  /*\n   * Generated by PEG.js 0.8.0.\n   *\n   * http://pegjs.majda.cz/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() {\n      this.constructor = child;\n    }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function SyntaxError(message, expected, found, offset, line, column) {\n    this.message = message;\n    this.expected = expected;\n    this.found = found;\n    this.offset = offset;\n    this.line = line;\n    this.column = column;\n\n    this.name = \"SyntaxError\";\n  }\n\n  peg$subclass(SyntaxError, Error);\n\n  function parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n        peg$FAILED = {},\n        peg$startRuleFunctions = { visualFormatString: peg$parsevisualFormatString },\n        peg$startRuleFunction = peg$parsevisualFormatString,\n        peg$c0 = peg$FAILED,\n        peg$c1 = null,\n        peg$c2 = \":\",\n        peg$c3 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n        peg$c4 = [],\n        peg$c5 = function peg$c5(o, superto, view, views, tosuper) {\n      return {\n        orientation: o ? o[0] : 'horizontal',\n        cascade: (superto || []).concat([view], [].concat.apply([], views), tosuper || [])\n      };\n    },\n        peg$c6 = \"H\",\n        peg$c7 = { type: \"literal\", value: \"H\", description: \"\\\"H\\\"\" },\n        peg$c8 = \"V\",\n        peg$c9 = { type: \"literal\", value: \"V\", description: \"\\\"V\\\"\" },\n        peg$c10 = function peg$c10(orient) {\n      return orient == 'H' ? 'horizontal' : 'vertical';\n    },\n        peg$c11 = \"|\",\n        peg$c12 = { type: \"literal\", value: \"|\", description: \"\\\"|\\\"\" },\n        peg$c13 = function peg$c13() {\n      return { view: null };\n    },\n        peg$c14 = \"[\",\n        peg$c15 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n        peg$c16 = \"]\",\n        peg$c17 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n        peg$c18 = function peg$c18(view, predicates) {\n      return extend(view, predicates ? { constraints: predicates } : {});\n    },\n        peg$c19 = \"-\",\n        peg$c20 = { type: \"literal\", value: \"-\", description: \"\\\"-\\\"\" },\n        peg$c21 = function peg$c21(predicateList) {\n      return predicateList;\n    },\n        peg$c22 = function peg$c22() {\n      return [{ relation: 'equ', constant: 'default', $parserOffset: offset() }];\n    },\n        peg$c23 = \"\",\n        peg$c24 = function peg$c24() {\n      return [{ relation: 'equ', constant: 0, $parserOffset: offset() }];\n    },\n        peg$c25 = function peg$c25(n) {\n      return [{ relation: 'equ', constant: n, $parserOffset: offset() }];\n    },\n        peg$c26 = \"(\",\n        peg$c27 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n        peg$c28 = \",\",\n        peg$c29 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n        peg$c30 = \")\",\n        peg$c31 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n        peg$c32 = function peg$c32(p, ps) {\n      return [p].concat(ps.map(function (p) {\n        return p[1];\n      }));\n    },\n        peg$c33 = \"@\",\n        peg$c34 = { type: \"literal\", value: \"@\", description: \"\\\"@\\\"\" },\n        peg$c35 = function peg$c35(r, o, p) {\n      return extend({ relation: 'equ' }, r || {}, o, p ? p[1] : {});\n    },\n        peg$c36 = \"==\",\n        peg$c37 = { type: \"literal\", value: \"==\", description: \"\\\"==\\\"\" },\n        peg$c38 = function peg$c38() {\n      return { relation: 'equ', $parserOffset: offset() };\n    },\n        peg$c39 = \"<=\",\n        peg$c40 = { type: \"literal\", value: \"<=\", description: \"\\\"<=\\\"\" },\n        peg$c41 = function peg$c41() {\n      return { relation: 'leq', $parserOffset: offset() };\n    },\n        peg$c42 = \">=\",\n        peg$c43 = { type: \"literal\", value: \">=\", description: \"\\\">=\\\"\" },\n        peg$c44 = function peg$c44() {\n      return { relation: 'geq', $parserOffset: offset() };\n    },\n        peg$c45 = /^[0-9]/,\n        peg$c46 = { type: \"class\", value: \"[0-9]\", description: \"[0-9]\" },\n        peg$c47 = function peg$c47(digits) {\n      return { priority: parseInt(digits.join(\"\"), 10) };\n    },\n        peg$c48 = function peg$c48(n) {\n      return { constant: n };\n    },\n        peg$c49 = /^[a-zA-Z_]/,\n        peg$c50 = { type: \"class\", value: \"[a-zA-Z_]\", description: \"[a-zA-Z_]\" },\n        peg$c51 = /^[a-zA-Z0-9_]/,\n        peg$c52 = { type: \"class\", value: \"[a-zA-Z0-9_]\", description: \"[a-zA-Z0-9_]\" },\n        peg$c53 = function peg$c53(f, v) {\n      return { view: f + v };\n    },\n        peg$c54 = \".\",\n        peg$c55 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n        peg$c56 = function peg$c56(digits, decimals) {\n      return parseFloat(digits.concat(\".\").concat(decimals).join(\"\"), 10);\n    },\n        peg$c57 = function peg$c57(digits) {\n      return parseInt(digits.join(\"\"), 10);\n    },\n        peg$currPos = 0,\n        peg$reportedPos = 0,\n        peg$cachedPos = 0,\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n        peg$maxFailPos = 0,\n        peg$maxFailExpected = [],\n        peg$silentFails = 0,\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$reportedPos, peg$currPos);\n    }\n\n    function offset() {\n      return peg$reportedPos;\n    }\n\n    function line() {\n      return peg$computePosDetails(peg$reportedPos).line;\n    }\n\n    function column() {\n      return peg$computePosDetails(peg$reportedPos).column;\n    }\n\n    function expected(description) {\n      throw peg$buildException(null, [{ type: \"other\", description: description }], peg$reportedPos);\n    }\n\n    function error(message) {\n      throw peg$buildException(message, null, peg$reportedPos);\n    }\n\n    function peg$computePosDetails(pos) {\n      function advance(details, startPos, endPos) {\n        var p, ch;\n\n        for (p = startPos; p < endPos; p++) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) {\n              details.line++;\n            }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === '\\u2028' || ch === '\\u2029') {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n        }\n      }\n\n      if (peg$cachedPos !== pos) {\n        if (peg$cachedPos > pos) {\n          peg$cachedPos = 0;\n          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n        }\n        advance(peg$cachedPosDetails, peg$cachedPos, pos);\n        peg$cachedPos = pos;\n      }\n\n      return peg$cachedPosDetails;\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) {\n        return;\n      }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, pos) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function (a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n          }\n\n          return s.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"').replace(/\\x08/g, '\\\\b').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\f/g, '\\\\f').replace(/\\r/g, '\\\\r').replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function (ch) {\n            return '\\\\x0' + hex(ch);\n          }).replace(/[\\x10-\\x1F\\x80-\\xFF]/g, function (ch) {\n            return '\\\\x' + hex(ch);\n          }).replace(/[\\u0180-\\u0FFF]/g, function (ch) {\n            return '\\\\u0' + hex(ch);\n          }).replace(/[\\u1080-\\uFFFF]/g, function (ch) {\n            return '\\\\u' + hex(ch);\n          });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc,\n            foundDesc,\n            i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1 ? expectedDescs.slice(0, -1).join(\", \") + \" or \" + expectedDescs[expected.length - 1] : expectedDescs[0];\n\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      var posDetails = peg$computePosDetails(pos),\n          found = pos < input.length ? input.charAt(pos) : null;\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new SyntaxError(message !== null ? message : buildMessage(expected, found), expected, found, pos, posDetails.line, posDetails.column);\n    }\n\n    function peg$parsevisualFormatString() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$parseorientation();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c2;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c3);\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$c0;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c0;\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$c1;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = peg$parsesuperview();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseconnection();\n          if (s4 !== peg$FAILED) {\n            s3 = [s3, s4];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c0;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$c0;\n        }\n        if (s2 === peg$FAILED) {\n          s2 = peg$c1;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseview();\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$currPos;\n            s6 = peg$parseconnection();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseview();\n              if (s7 !== peg$FAILED) {\n                s6 = [s6, s7];\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$c0;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$c0;\n            }\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$currPos;\n              s6 = peg$parseconnection();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseview();\n                if (s7 !== peg$FAILED) {\n                  s6 = [s6, s7];\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$c0;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$c0;\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$currPos;\n              s6 = peg$parseconnection();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsesuperview();\n                if (s7 !== peg$FAILED) {\n                  s6 = [s6, s7];\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$c0;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$c0;\n              }\n              if (s5 === peg$FAILED) {\n                s5 = peg$c1;\n              }\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c5(s1, s2, s3, s4, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseorientation() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 72) {\n        s1 = peg$c6;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c7);\n        }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 86) {\n          s1 = peg$c8;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c9);\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c10(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsesuperview() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 124) {\n        s1 = peg$c11;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c12);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c13();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseview() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c14;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c15);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseviewName();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsepredicateListWithParens();\n          if (s3 === peg$FAILED) {\n            s3 = peg$c1;\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s4 = peg$c16;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c17);\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c18(s2, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseconnection() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s1 = peg$c19;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c20);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsepredicateList();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 45) {\n            s3 = peg$c19;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c20);\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c21(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 45) {\n          s1 = peg$c19;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c20);\n          }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c22();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$c23;\n          if (s1 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c24();\n          }\n          s0 = s1;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsepredicateList() {\n      var s0;\n\n      s0 = peg$parsesimplePredicate();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsepredicateListWithParens();\n      }\n\n      return s0;\n    }\n\n    function peg$parsesimplePredicate() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parsenumber();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c25(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsepredicateListWithParens() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c26;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c27);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsepredicate();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c28;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c29);\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsepredicate();\n            if (s6 !== peg$FAILED) {\n              s5 = [s5, s6];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$c0;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$c0;\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c28;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c29);\n              }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsepredicate();\n              if (s6 !== peg$FAILED) {\n                s5 = [s5, s6];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$c0;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$c0;\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s4 = peg$c30;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c31);\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c32(s2, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parsepredicate() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parserelation();\n      if (s1 === peg$FAILED) {\n        s1 = peg$c1;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseobjectOfPredicate();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 64) {\n            s4 = peg$c33;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c34);\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsepriority();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$c1;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c35(s1, s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parserelation() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c36) {\n        s1 = peg$c36;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c37);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c38();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c39) {\n          s1 = peg$c39;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c40);\n          }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c41();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c42) {\n            s1 = peg$c42;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c43);\n            }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c44();\n          }\n          s0 = s1;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseobjectOfPredicate() {\n      var s0;\n\n      s0 = peg$parseconstant();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseviewName();\n      }\n\n      return s0;\n    }\n\n    function peg$parsepriority() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c45.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c46);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c45.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c46);\n            }\n          }\n        }\n      } else {\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c47(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseconstant() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parsenumber();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c48(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseviewName() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = [];\n      if (peg$c49.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c50);\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c49.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c50);\n            }\n          }\n        }\n      } else {\n        s2 = peg$c0;\n      }\n      if (s2 !== peg$FAILED) {\n        s2 = input.substring(s1, peg$currPos);\n      }\n      s1 = s2;\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = [];\n        if (peg$c51.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c52);\n          }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c51.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c52);\n            }\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s3 = input.substring(s2, peg$currPos);\n        }\n        s2 = s3;\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c53(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parsenumber() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c45.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c46);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c45.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c46);\n            }\n          }\n        }\n      } else {\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s2 = peg$c54;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c55);\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          if (peg$c45.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c46);\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              if (peg$c45.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c46);\n                }\n              }\n            }\n          } else {\n            s3 = peg$c0;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c56(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        if (peg$c45.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c46);\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            if (peg$c45.test(input.charAt(peg$currPos))) {\n              s2 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c46);\n              }\n            }\n          }\n        } else {\n          s1 = peg$c0;\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c57(s1);\n        }\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n    function extend(dst) {\n      for (var i = 1; i < arguments.length; i++) {\n        for (var k in arguments[i]) {\n          dst[k] = arguments[i][k];\n        }\n      }\n      return dst;\n    }\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n    }\n  }\n\n  return {\n    SyntaxError: SyntaxError,\n    parse: parse\n  };\n})();\n\nvar parserExt = (function () {\n  /*\n   * Generated by PEG.js 0.8.0.\n   *\n   * http://pegjs.majda.cz/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() {\n      this.constructor = child;\n    }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function SyntaxError(message, expected, found, offset, line, column) {\n    this.message = message;\n    this.expected = expected;\n    this.found = found;\n    this.offset = offset;\n    this.line = line;\n    this.column = column;\n\n    this.name = \"SyntaxError\";\n  }\n\n  peg$subclass(SyntaxError, Error);\n\n  function parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n        peg$FAILED = {},\n        peg$startRuleFunctions = { visualFormatString: peg$parsevisualFormatString },\n        peg$startRuleFunction = peg$parsevisualFormatString,\n        peg$c0 = peg$FAILED,\n        peg$c1 = null,\n        peg$c2 = \":\",\n        peg$c3 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n        peg$c4 = [],\n        peg$c5 = function peg$c5(o, superto, view, views, tosuper, comments) {\n      return {\n        orientation: o ? o[0] : 'horizontal',\n        cascade: (superto || []).concat(view, [].concat.apply([], views), tosuper || [])\n      };\n    },\n        peg$c6 = \"HV\",\n        peg$c7 = { type: \"literal\", value: \"HV\", description: \"\\\"HV\\\"\" },\n        peg$c8 = function peg$c8() {\n      return 'horzvert';\n    },\n        peg$c9 = \"H\",\n        peg$c10 = { type: \"literal\", value: \"H\", description: \"\\\"H\\\"\" },\n        peg$c11 = function peg$c11() {\n      return 'horizontal';\n    },\n        peg$c12 = \"V\",\n        peg$c13 = { type: \"literal\", value: \"V\", description: \"\\\"V\\\"\" },\n        peg$c14 = function peg$c14() {\n      return 'vertical';\n    },\n        peg$c15 = \"Z\",\n        peg$c16 = { type: \"literal\", value: \"Z\", description: \"\\\"Z\\\"\" },\n        peg$c17 = function peg$c17() {\n      return 'zIndex';\n    },\n        peg$c18 = \" \",\n        peg$c19 = { type: \"literal\", value: \" \", description: \"\\\" \\\"\" },\n        peg$c20 = \"//\",\n        peg$c21 = { type: \"literal\", value: \"//\", description: \"\\\"//\\\"\" },\n        peg$c22 = { type: \"any\", description: \"any character\" },\n        peg$c23 = \"|\",\n        peg$c24 = { type: \"literal\", value: \"|\", description: \"\\\"|\\\"\" },\n        peg$c25 = function peg$c25() {\n      return { view: null };\n    },\n        peg$c26 = \"[\",\n        peg$c27 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n        peg$c28 = \",\",\n        peg$c29 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n        peg$c30 = \"]\",\n        peg$c31 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n        peg$c32 = function peg$c32(view, views) {\n      return views.length ? [view].concat([].concat.apply([], views)) : view;\n    },\n        peg$c33 = function peg$c33(view, predicates, cascadedViews) {\n      return extend(extend(view, predicates ? { constraints: predicates } : {}), cascadedViews ? {\n        cascade: cascadedViews\n      } : {});\n    },\n        peg$c34 = function peg$c34(views, connection) {\n      return [].concat([].concat.apply([], views), [connection]);\n    },\n        peg$c35 = \"->\",\n        peg$c36 = { type: \"literal\", value: \"->\", description: \"\\\"->\\\"\" },\n        peg$c37 = function peg$c37() {\n      return [{ relation: 'none' }];\n    },\n        peg$c38 = \"-\",\n        peg$c39 = { type: \"literal\", value: \"-\", description: \"\\\"-\\\"\" },\n        peg$c40 = function peg$c40(predicateList) {\n      return predicateList;\n    },\n        peg$c41 = function peg$c41() {\n      return [{ relation: 'equ', constant: 'default' }];\n    },\n        peg$c42 = \"~\",\n        peg$c43 = { type: \"literal\", value: \"~\", description: \"\\\"~\\\"\" },\n        peg$c44 = function peg$c44() {\n      return [{ relation: 'equ', equalSpacing: true }];\n    },\n        peg$c45 = \"\",\n        peg$c46 = function peg$c46() {\n      return [{ relation: 'equ', constant: 0 }];\n    },\n        peg$c47 = function peg$c47(p) {\n      return [{ relation: 'equ', multiplier: p.multiplier }];\n    },\n        peg$c48 = function peg$c48(n) {\n      return [{ relation: 'equ', constant: n }];\n    },\n        peg$c49 = \"(\",\n        peg$c50 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n        peg$c51 = \")\",\n        peg$c52 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n        peg$c53 = function peg$c53(p, ps) {\n      return [p].concat(ps.map(function (p) {\n        return p[1];\n      }));\n    },\n        peg$c54 = \"@\",\n        peg$c55 = { type: \"literal\", value: \"@\", description: \"\\\"@\\\"\" },\n        peg$c56 = function peg$c56(r, o, p) {\n      return extend({ relation: 'equ' }, r || {}, o, p ? p[1] : {});\n    },\n        peg$c57 = function peg$c57(r, o, p) {\n      return extend({ relation: 'equ', equalSpacing: true }, r || {}, o, p ? p[1] : {});\n    },\n        peg$c58 = \"==\",\n        peg$c59 = { type: \"literal\", value: \"==\", description: \"\\\"==\\\"\" },\n        peg$c60 = function peg$c60() {\n      return { relation: 'equ' };\n    },\n        peg$c61 = \"<=\",\n        peg$c62 = { type: \"literal\", value: \"<=\", description: \"\\\"<=\\\"\" },\n        peg$c63 = function peg$c63() {\n      return { relation: 'leq' };\n    },\n        peg$c64 = \">=\",\n        peg$c65 = { type: \"literal\", value: \">=\", description: \"\\\">=\\\"\" },\n        peg$c66 = function peg$c66() {\n      return { relation: 'geq' };\n    },\n        peg$c67 = /^[0-9]/,\n        peg$c68 = { type: \"class\", value: \"[0-9]\", description: \"[0-9]\" },\n        peg$c69 = function peg$c69(digits) {\n      return { priority: parseInt(digits.join(\"\"), 10) };\n    },\n        peg$c70 = function peg$c70(n) {\n      return { constant: n };\n    },\n        peg$c71 = \"%\",\n        peg$c72 = { type: \"literal\", value: \"%\", description: \"\\\"%\\\"\" },\n        peg$c73 = function peg$c73(n) {\n      return { view: null, multiplier: n / 100 };\n    },\n        peg$c74 = function peg$c74(vn, a, m, c) {\n      return { view: vn.view, attribute: a ? a : undefined, multiplier: m ? m : 1, constant: c ? c : undefined };\n    },\n        peg$c75 = \".left\",\n        peg$c76 = { type: \"literal\", value: \".left\", description: \"\\\".left\\\"\" },\n        peg$c77 = function peg$c77() {\n      return 'left';\n    },\n        peg$c78 = \".right\",\n        peg$c79 = { type: \"literal\", value: \".right\", description: \"\\\".right\\\"\" },\n        peg$c80 = function peg$c80() {\n      return 'right';\n    },\n        peg$c81 = \".top\",\n        peg$c82 = { type: \"literal\", value: \".top\", description: \"\\\".top\\\"\" },\n        peg$c83 = function peg$c83() {\n      return 'top';\n    },\n        peg$c84 = \".bottom\",\n        peg$c85 = { type: \"literal\", value: \".bottom\", description: \"\\\".bottom\\\"\" },\n        peg$c86 = function peg$c86() {\n      return 'bottom';\n    },\n        peg$c87 = \".width\",\n        peg$c88 = { type: \"literal\", value: \".width\", description: \"\\\".width\\\"\" },\n        peg$c89 = function peg$c89() {\n      return 'width';\n    },\n        peg$c90 = \".height\",\n        peg$c91 = { type: \"literal\", value: \".height\", description: \"\\\".height\\\"\" },\n        peg$c92 = function peg$c92() {\n      return 'height';\n    },\n        peg$c93 = \".centerX\",\n        peg$c94 = { type: \"literal\", value: \".centerX\", description: \"\\\".centerX\\\"\" },\n        peg$c95 = function peg$c95() {\n      return 'centerX';\n    },\n        peg$c96 = \".centerY\",\n        peg$c97 = { type: \"literal\", value: \".centerY\", description: \"\\\".centerY\\\"\" },\n        peg$c98 = function peg$c98() {\n      return 'centerY';\n    },\n        peg$c99 = \"/\",\n        peg$c100 = { type: \"literal\", value: \"/\", description: \"\\\"/\\\"\" },\n        peg$c101 = function peg$c101(n) {\n      return 1 / n;\n    },\n        peg$c102 = \"*\",\n        peg$c103 = { type: \"literal\", value: \"*\", description: \"\\\"*\\\"\" },\n        peg$c104 = function peg$c104(n) {\n      return n;\n    },\n        peg$c105 = function peg$c105(n) {\n      return -n;\n    },\n        peg$c106 = \"+\",\n        peg$c107 = { type: \"literal\", value: \"+\", description: \"\\\"+\\\"\" },\n        peg$c108 = /^[a-zA-Z_]/,\n        peg$c109 = { type: \"class\", value: \"[a-zA-Z_]\", description: \"[a-zA-Z_]\" },\n        peg$c110 = /^[a-zA-Z0-9_]/,\n        peg$c111 = { type: \"class\", value: \"[a-zA-Z0-9_]\", description: \"[a-zA-Z0-9_]\" },\n        peg$c112 = function peg$c112(f, v, r) {\n      return { view: f + v, range: r, $parserOffset: offset() };\n    },\n        peg$c113 = function peg$c113(f, v) {\n      return { view: f + v, $parserOffset: offset() };\n    },\n        peg$c114 = \"..\",\n        peg$c115 = { type: \"literal\", value: \"..\", description: \"\\\"..\\\"\" },\n        peg$c116 = function peg$c116(d) {\n      return parseInt(d);\n    },\n        peg$c117 = \".\",\n        peg$c118 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n        peg$c119 = function peg$c119(digits, decimals) {\n      return parseFloat(digits.concat(\".\").concat(decimals).join(\"\"), 10);\n    },\n        peg$c120 = function peg$c120(digits) {\n      return parseInt(digits.join(\"\"), 10);\n    },\n        peg$currPos = 0,\n        peg$reportedPos = 0,\n        peg$cachedPos = 0,\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n        peg$maxFailPos = 0,\n        peg$maxFailExpected = [],\n        peg$silentFails = 0,\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$reportedPos, peg$currPos);\n    }\n\n    function offset() {\n      return peg$reportedPos;\n    }\n\n    function line() {\n      return peg$computePosDetails(peg$reportedPos).line;\n    }\n\n    function column() {\n      return peg$computePosDetails(peg$reportedPos).column;\n    }\n\n    function expected(description) {\n      throw peg$buildException(null, [{ type: \"other\", description: description }], peg$reportedPos);\n    }\n\n    function error(message) {\n      throw peg$buildException(message, null, peg$reportedPos);\n    }\n\n    function peg$computePosDetails(pos) {\n      function advance(details, startPos, endPos) {\n        var p, ch;\n\n        for (p = startPos; p < endPos; p++) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) {\n              details.line++;\n            }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === '\\u2028' || ch === '\\u2029') {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n        }\n      }\n\n      if (peg$cachedPos !== pos) {\n        if (peg$cachedPos > pos) {\n          peg$cachedPos = 0;\n          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n        }\n        advance(peg$cachedPosDetails, peg$cachedPos, pos);\n        peg$cachedPos = pos;\n      }\n\n      return peg$cachedPosDetails;\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) {\n        return;\n      }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, pos) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function (a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n          }\n\n          return s.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"').replace(/\\x08/g, '\\\\b').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\f/g, '\\\\f').replace(/\\r/g, '\\\\r').replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function (ch) {\n            return '\\\\x0' + hex(ch);\n          }).replace(/[\\x10-\\x1F\\x80-\\xFF]/g, function (ch) {\n            return '\\\\x' + hex(ch);\n          }).replace(/[\\u0180-\\u0FFF]/g, function (ch) {\n            return '\\\\u0' + hex(ch);\n          }).replace(/[\\u1080-\\uFFFF]/g, function (ch) {\n            return '\\\\u' + hex(ch);\n          });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc,\n            foundDesc,\n            i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1 ? expectedDescs.slice(0, -1).join(\", \") + \" or \" + expectedDescs[expected.length - 1] : expectedDescs[0];\n\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      var posDetails = peg$computePosDetails(pos),\n          found = pos < input.length ? input.charAt(pos) : null;\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new SyntaxError(message !== null ? message : buildMessage(expected, found), expected, found, pos, posDetails.line, posDetails.column);\n    }\n\n    function peg$parsevisualFormatString() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$parseorientation();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c2;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c3);\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$c0;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c0;\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$c1;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = peg$parsesuperview();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseconnection();\n          if (s4 !== peg$FAILED) {\n            s3 = [s3, s4];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c0;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$c0;\n        }\n        if (s2 === peg$FAILED) {\n          s2 = peg$c1;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseviewGroup();\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$currPos;\n            s6 = peg$parseconnection();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseviewGroup();\n              if (s7 !== peg$FAILED) {\n                s6 = [s6, s7];\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$c0;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$c0;\n            }\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$currPos;\n              s6 = peg$parseconnection();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseviewGroup();\n                if (s7 !== peg$FAILED) {\n                  s6 = [s6, s7];\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$c0;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$c0;\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$currPos;\n              s6 = peg$parseconnection();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsesuperview();\n                if (s7 !== peg$FAILED) {\n                  s6 = [s6, s7];\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$c0;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$c0;\n              }\n              if (s5 === peg$FAILED) {\n                s5 = peg$c1;\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsecomments();\n                if (s6 === peg$FAILED) {\n                  s6 = peg$c1;\n                }\n                if (s6 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c5(s1, s2, s3, s4, s5, s6);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseorientation() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c6) {\n        s1 = peg$c6;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c7);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c8();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 72) {\n          s1 = peg$c9;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c10);\n          }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c11();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 86) {\n            s1 = peg$c12;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c13);\n            }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c14();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 90) {\n              s1 = peg$c15;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c16);\n              }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c17();\n            }\n            s0 = s1;\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsecomments() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (input.charCodeAt(peg$currPos) === 32) {\n        s2 = peg$c18;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c19);\n        }\n      }\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (input.charCodeAt(peg$currPos) === 32) {\n          s2 = peg$c18;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c19);\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c20) {\n          s2 = peg$c20;\n          peg$currPos += 2;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c21);\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          if (input.length > peg$currPos) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c22);\n            }\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (input.length > peg$currPos) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c22);\n              }\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s1 = [s1, s2, s3];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parsesuperview() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 124) {\n        s1 = peg$c23;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c24);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c25();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseviewGroup() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c26;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c27);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseview();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c28;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c29);\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseview();\n            if (s6 !== peg$FAILED) {\n              s5 = [s5, s6];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$c0;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$c0;\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c28;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c29);\n              }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseview();\n              if (s6 !== peg$FAILED) {\n                s5 = [s5, s6];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$c0;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$c0;\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s4 = peg$c30;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c31);\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c32(s2, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseview() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parseviewNameRange();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsepredicateListWithParens();\n        if (s2 === peg$FAILED) {\n          s2 = peg$c1;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsecascadedViews();\n          if (s3 === peg$FAILED) {\n            s3 = peg$c1;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c33(s1, s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecascadedViews() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 58) {\n        s1 = peg$c2;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c3);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parseconnection();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseviewGroup();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$c0;\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$currPos;\n            s4 = peg$parseconnection();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseviewGroup();\n              if (s5 !== peg$FAILED) {\n                s4 = [s4, s5];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$c0;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          }\n        } else {\n          s2 = peg$c0;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseconnection();\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c34(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseconnection() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c35) {\n        s1 = peg$c35;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c36);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c37();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 45) {\n          s1 = peg$c38;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c39);\n          }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsepredicateList();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 45) {\n              s3 = peg$c38;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c39);\n              }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c40(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 45) {\n            s1 = peg$c38;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c39);\n            }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c41();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 126) {\n              s1 = peg$c42;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c43);\n              }\n            }\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parseequalSpacingPredicateList();\n              if (s2 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 126) {\n                  s3 = peg$c42;\n                  peg$currPos++;\n                } else {\n                  s3 = peg$FAILED;\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c43);\n                  }\n                }\n                if (s3 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c40(s2);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 126) {\n                s1 = peg$c42;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c43);\n                }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c44();\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                s1 = peg$c45;\n                if (s1 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c46();\n                }\n                s0 = s1;\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsepredicateList() {\n      var s0;\n\n      s0 = peg$parsesimplePredicate();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsepredicateListWithParens();\n      }\n\n      return s0;\n    }\n\n    function peg$parsesimplePredicate() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parsepercentage();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c47(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsenumber();\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c48(s1);\n        }\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n    function peg$parsepredicateListWithParens() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c49;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c50);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsepredicate();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c28;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c29);\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsepredicate();\n            if (s6 !== peg$FAILED) {\n              s5 = [s5, s6];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$c0;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$c0;\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c28;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c29);\n              }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsepredicate();\n              if (s6 !== peg$FAILED) {\n                s5 = [s5, s6];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$c0;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$c0;\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s4 = peg$c51;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c52);\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c53(s2, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parsepredicate() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parserelation();\n      if (s1 === peg$FAILED) {\n        s1 = peg$c1;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseobjectOfPredicate();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 64) {\n            s4 = peg$c54;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c55);\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsepriority();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$c1;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c56(s1, s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseequalSpacingPredicateList() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c49;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c50);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseequalSpacingPredicate();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c28;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c29);\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseequalSpacingPredicate();\n            if (s6 !== peg$FAILED) {\n              s5 = [s5, s6];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$c0;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$c0;\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c28;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c29);\n              }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseequalSpacingPredicate();\n              if (s6 !== peg$FAILED) {\n                s5 = [s5, s6];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$c0;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$c0;\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s4 = peg$c51;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c52);\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c53(s2, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseequalSpacingPredicate() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parserelation();\n      if (s1 === peg$FAILED) {\n        s1 = peg$c1;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseobjectOfPredicate();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 64) {\n            s4 = peg$c54;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c55);\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsepriority();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$c1;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c57(s1, s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parserelation() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c58) {\n        s1 = peg$c58;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c59);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c60();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c61) {\n          s1 = peg$c61;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c62);\n          }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c63();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c64) {\n            s1 = peg$c64;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c65);\n            }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c66();\n          }\n          s0 = s1;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseobjectOfPredicate() {\n      var s0;\n\n      s0 = peg$parsepercentage();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseconstant();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseviewPredicate();\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsepriority() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c67.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c68);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c67.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c68);\n            }\n          }\n        }\n      } else {\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c69(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseconstant() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parsenumber();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c70(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsepercentage() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = peg$parsenumber();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 37) {\n          s2 = peg$c71;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c72);\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c73(s1);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseviewPredicate() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseviewName();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseattribute();\n        if (s2 === peg$FAILED) {\n          s2 = peg$c1;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsemultiplier();\n          if (s3 === peg$FAILED) {\n            s3 = peg$c1;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseconstantExpr();\n            if (s4 === peg$FAILED) {\n              s4 = peg$c1;\n            }\n            if (s4 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c74(s1, s2, s3, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseattribute() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c75) {\n        s1 = peg$c75;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c76);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c77();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 6) === peg$c78) {\n          s1 = peg$c78;\n          peg$currPos += 6;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c79);\n          }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c80();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 4) === peg$c81) {\n            s1 = peg$c81;\n            peg$currPos += 4;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c82);\n            }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c83();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 7) === peg$c84) {\n              s1 = peg$c84;\n              peg$currPos += 7;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c85);\n              }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c86();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.substr(peg$currPos, 6) === peg$c87) {\n                s1 = peg$c87;\n                peg$currPos += 6;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c88);\n                }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c89();\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.substr(peg$currPos, 7) === peg$c90) {\n                  s1 = peg$c90;\n                  peg$currPos += 7;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c91);\n                  }\n                }\n                if (s1 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c92();\n                }\n                s0 = s1;\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  if (input.substr(peg$currPos, 8) === peg$c93) {\n                    s1 = peg$c93;\n                    peg$currPos += 8;\n                  } else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                      peg$fail(peg$c94);\n                    }\n                  }\n                  if (s1 !== peg$FAILED) {\n                    peg$reportedPos = s0;\n                    s1 = peg$c95();\n                  }\n                  s0 = s1;\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$currPos;\n                    if (input.substr(peg$currPos, 8) === peg$c96) {\n                      s1 = peg$c96;\n                      peg$currPos += 8;\n                    } else {\n                      s1 = peg$FAILED;\n                      if (peg$silentFails === 0) {\n                        peg$fail(peg$c97);\n                      }\n                    }\n                    if (s1 !== peg$FAILED) {\n                      peg$reportedPos = s0;\n                      s1 = peg$c98();\n                    }\n                    s0 = s1;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsemultiplier() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 47) {\n        s1 = peg$c99;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c100);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsenumber();\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c101(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s1 = peg$c102;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c103);\n          }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsenumber();\n          if (s2 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c104(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseconstantExpr() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s1 = peg$c38;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c39);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsenumber();\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c105(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s1 = peg$c106;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c107);\n          }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsenumber();\n          if (s2 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c104(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseviewNameRange() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = [];\n      if (peg$c108.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c109);\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c108.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c109);\n            }\n          }\n        }\n      } else {\n        s2 = peg$c0;\n      }\n      if (s2 !== peg$FAILED) {\n        s2 = input.substring(s1, peg$currPos);\n      }\n      s1 = s2;\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = [];\n        if (peg$c110.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c111);\n          }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c110.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c111);\n            }\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s3 = input.substring(s2, peg$currPos);\n        }\n        s2 = s3;\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parserange();\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c112(s1, s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        s2 = [];\n        if (peg$c108.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c109);\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (peg$c108.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c109);\n              }\n            }\n          }\n        } else {\n          s2 = peg$c0;\n        }\n        if (s2 !== peg$FAILED) {\n          s2 = input.substring(s1, peg$currPos);\n        }\n        s1 = s2;\n        if (s1 !== peg$FAILED) {\n          s2 = peg$currPos;\n          s3 = [];\n          if (peg$c110.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c111);\n            }\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c110.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c111);\n              }\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s3 = input.substring(s2, peg$currPos);\n          }\n          s2 = s3;\n          if (s2 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c113(s1, s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseviewName() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = [];\n      if (peg$c108.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c109);\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c108.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c109);\n            }\n          }\n        }\n      } else {\n        s2 = peg$c0;\n      }\n      if (s2 !== peg$FAILED) {\n        s2 = input.substring(s1, peg$currPos);\n      }\n      s1 = s2;\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = [];\n        if (peg$c110.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c111);\n          }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c110.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c111);\n            }\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s3 = input.substring(s2, peg$currPos);\n        }\n        s2 = s3;\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c113(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parserange() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c114) {\n        s1 = peg$c114;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c115);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c67.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c68);\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (peg$c67.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c68);\n              }\n            }\n          }\n        } else {\n          s2 = peg$c0;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c116(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parsenumber() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c67.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c68);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c67.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c68);\n            }\n          }\n        }\n      } else {\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s2 = peg$c117;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c118);\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          if (peg$c67.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c68);\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              if (peg$c67.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c68);\n                }\n              }\n            }\n          } else {\n            s3 = peg$c0;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c119(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        if (peg$c67.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c68);\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            if (peg$c67.test(input.charAt(peg$currPos))) {\n              s2 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c68);\n              }\n            }\n          }\n        } else {\n          s1 = peg$c0;\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c120(s1);\n        }\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n    function extend(dst) {\n      for (var i = 1; i < arguments.length; i++) {\n        for (var k in arguments[i]) {\n          dst[k] = arguments[i][k];\n        }\n      }\n      return dst;\n    }\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n    }\n  }\n\n  return {\n    SyntaxError: SyntaxError,\n    parse: parse\n  };\n})();\n\nvar Orientation = {\n  HORIZONTAL: 1,\n  VERTICAL: 2,\n  ZINDEX: 4\n};\n\n/**\n * Helper function that inserts equal spacers (~).\n * @private\n */\nfunction _processEqualSpacer(context, stackView) {\n\n  // Determine unique name for the spacer\n  context.equalSpacerIndex = context.equalSpacerIndex || 1;\n  var name = '_~' + context.lineIndex + ':' + context.equalSpacerIndex + '~';\n  if (context.equalSpacerIndex > 1) {\n\n    // Ensure that all spacers have the same width/height\n    context.constraints.push({\n      view1: '_~' + context.lineIndex + ':1~',\n      attr1: context.horizontal ? Attribute.WIDTH : Attribute.HEIGHT,\n      relation: context.relation.relation || Relation.EQU,\n      view2: name,\n      attr2: context.horizontal ? Attribute.WIDTH : Attribute.HEIGHT,\n      priority: context.relation.priority\n    });\n  }\n  context.equalSpacerIndex++;\n\n  // Enforce view/proportional width/height\n  if (context.relation.view || context.relation.multiplier && context.relation.multiplier !== 1) {\n    context.constraints.push({\n      view1: name,\n      attr1: context.horizontal ? Attribute.WIDTH : Attribute.HEIGHT,\n      relation: context.relation.relation || Relation.EQU,\n      view2: context.relation.view,\n      attr2: context.horizontal ? Attribute.WIDTH : Attribute.HEIGHT,\n      priority: context.relation.priority,\n      multiplier: context.relation.multiplier\n    });\n    context.relation.multiplier = undefined;\n  } else if (context.relation.constant) {\n    context.constraints.push({\n      view1: name,\n      attr1: context.horizontal ? Attribute.WIDTH : Attribute.HEIGHT,\n      relation: Relation.EQU,\n      view2: null,\n      attr2: Attribute.CONST,\n      priority: context.relation.priority,\n      constant: context.relation.constant\n    });\n    context.relation.constant = undefined;\n  }\n\n  // Add constraint\n  for (var i = 0; i < context.prevViews.length; i++) {\n    var prevView = context.prevViews[i];\n    switch (context.orientation) {\n      case Orientation.HORIZONTAL:\n        context.prevAttr = prevView !== stackView ? Attribute.RIGHT : Attribute.LEFT;\n        context.curAttr = Attribute.LEFT;\n        break;\n      case Orientation.VERTICAL:\n        context.prevAttr = prevView !== stackView ? Attribute.BOTTOM : Attribute.TOP;\n        context.curAttr = Attribute.TOP;\n        break;\n      case Orientation.ZINDEX:\n        context.prevAttr = Attribute.ZINDEX;\n        context.curAttr = Attribute.ZINDEX;\n        context.relation.constant = prevView !== stackView ? 'default' : 0;\n        break;\n    }\n    context.constraints.push({\n      view1: prevView,\n      attr1: context.prevAttr,\n      relation: context.relation.relation,\n      view2: name,\n      attr2: context.curAttr,\n      priority: context.relation.priority\n    });\n  }\n  context.prevViews = [name];\n}\n\n/**\n * Helper function that inserts proportional spacers (-12%-).\n * @private\n */\nfunction _processProportionalSpacer(context, stackView) {\n  context.proportionalSpacerIndex = context.proportionalSpacerIndex || 1;\n  var name = '_-' + context.lineIndex + ':' + context.proportionalSpacerIndex + '-';\n  context.proportionalSpacerIndex++;\n  context.constraints.push({\n    view1: name,\n    attr1: context.horizontal ? Attribute.WIDTH : Attribute.HEIGHT,\n    relation: context.relation.relation || Relation.EQU,\n    view2: context.relation.view, // or relative to the stackView... food for thought\n    attr2: context.horizontal ? Attribute.WIDTH : Attribute.HEIGHT,\n    priority: context.relation.priority,\n    multiplier: context.relation.multiplier\n  });\n  context.relation.multiplier = undefined;\n\n  // Add constraint\n  for (var i = 0; i < context.prevViews.length; i++) {\n    var prevView = context.prevViews[i];\n    switch (context.orientation) {\n      case Orientation.HORIZONTAL:\n        context.prevAttr = prevView !== stackView ? Attribute.RIGHT : Attribute.LEFT;\n        context.curAttr = Attribute.LEFT;\n        break;\n      case Orientation.VERTICAL:\n        context.prevAttr = prevView !== stackView ? Attribute.BOTTOM : Attribute.TOP;\n        context.curAttr = Attribute.TOP;\n        break;\n      case Orientation.ZINDEX:\n        context.prevAttr = Attribute.ZINDEX;\n        context.curAttr = Attribute.ZINDEX;\n        context.relation.constant = prevView !== stackView ? 'default' : 0;\n        break;\n    }\n    context.constraints.push({\n      view1: prevView,\n      attr1: context.prevAttr,\n      relation: context.relation.relation,\n      view2: name,\n      attr2: context.curAttr,\n      priority: context.relation.priority\n    });\n  }\n  context.prevViews = [name];\n}\n\n/**\n * In case of a stack-view, set constraints for opposite orientations\n * @private\n */\nfunction _processStackView(context, name, subView) {\n  var viewName = undefined;\n  for (var orientation = 1; orientation <= 4; orientation *= 2) {\n    if (subView.orientations & orientation && subView.stack.orientation !== orientation && !(subView.stack.processedOrientations & orientation)) {\n      subView.stack.processedOrientations = subView.stack.processedOrientations | orientation;\n      viewName = viewName || {\n        name: name,\n        type: 'stack'\n      };\n      for (var i = 0, j = subView.stack.subViews.length; i < j; i++) {\n        if (orientation === Orientation.ZINDEX) {\n          context.constraints.push({\n            view1: viewName,\n            attr1: Attribute.ZINDEX,\n            relation: Relation.EQU,\n            view2: subView.stack.subViews[i],\n            attr2: Attribute.ZINDEX\n          });\n        } else {\n          context.constraints.push({\n            view1: viewName,\n            attr1: orientation === Orientation.VERTICAL ? Attribute.HEIGHT : Attribute.WIDTH,\n            relation: Relation.EQU,\n            view2: subView.stack.subViews[i],\n            attr2: orientation === Orientation.VERTICAL ? Attribute.HEIGHT : Attribute.WIDTH\n          });\n          context.constraints.push({\n            view1: viewName,\n            attr1: orientation === Orientation.VERTICAL ? Attribute.TOP : Attribute.LEFT,\n            relation: Relation.EQU,\n            view2: subView.stack.subViews[i],\n            attr2: orientation === Orientation.VERTICAL ? Attribute.TOP : Attribute.LEFT\n          });\n        }\n      }\n    }\n  }\n}\n\n/**\n * Recursive helper function converts a view-name and a range to a series\n * of view-names (e.g. [child1, child2, child3, ...]).\n * @private\n */\nfunction _getRange(name, range) {\n  if (range === true) {\n    range = name.match(/\\.\\.\\d+$/);\n    if (range) {\n      name = name.substring(0, name.length - range[0].length);\n      range = parseInt(range[0].substring(2));\n    }\n  }\n  if (!range) {\n    return [name];\n  }\n  var start = name.match(/\\d+$/);\n  var res = [];\n  var i;\n  if (start) {\n    name = name.substring(0, name.length - start[0].length);\n    for (i = parseInt(start); i <= range; i++) {\n      res.push(name + i);\n    }\n  } else {\n    res.push(name);\n    for (i = 2; i <= range; i++) {\n      res.push(name + i);\n    }\n  }\n  return res;\n}\n\n/**\n * Recursive helper function that processes the cascaded data.\n * @private\n */\nfunction _processCascade(context, cascade, parentItem) {\n  var stackView = parentItem ? parentItem.view : null;\n  var subViews = [];\n  var curViews = [];\n  var subView = undefined;\n  if (stackView) {\n    cascade.push({ view: stackView });\n    curViews.push(stackView);\n  }\n  for (var i = 0; i < cascade.length; i++) {\n    var item = cascade[i];\n    if (!Array.isArray(item) && item.hasOwnProperty('view') || Array.isArray(item) && item[0].view && !item[0].relation) {\n      var items = Array.isArray(item) ? item : [item];\n      for (var z = 0; z < items.length; z++) {\n        item = items[z];\n        var viewRange = item === ',' ? [] : item.view ? _getRange(item.view, item.range) : [null];\n        for (var r = 0; r < viewRange.length; r++) {\n          var curView = viewRange[r];\n          curViews.push(curView);\n\n          //\n          // Add this view to the collection of subViews\n          //\n          if (curView !== stackView) {\n            subViews.push(curView);\n            subView = context.subViews[curView];\n            if (!subView) {\n              subView = { orientations: 0 };\n              context.subViews[curView] = subView;\n            }\n            subView.orientations = subView.orientations | context.orientation;\n            if (subView.stack) {\n              _processStackView(context, curView, subView);\n            }\n          }\n\n          //\n          // Process the relationship between this and the previous views\n          //\n          if (context.prevViews !== undefined && curView !== undefined && context.relation) {\n            if (context.relation.relation !== 'none') {\n              for (var p = 0; p < context.prevViews.length; p++) {\n                var prevView = context.prevViews[p];\n                switch (context.orientation) {\n                  case Orientation.HORIZONTAL:\n                    context.prevAttr = prevView !== stackView ? Attribute.RIGHT : Attribute.LEFT;\n                    context.curAttr = curView !== stackView ? Attribute.LEFT : Attribute.RIGHT;\n                    break;\n                  case Orientation.VERTICAL:\n                    context.prevAttr = prevView !== stackView ? Attribute.BOTTOM : Attribute.TOP;\n                    context.curAttr = curView !== stackView ? Attribute.TOP : Attribute.BOTTOM;\n                    break;\n                  case Orientation.ZINDEX:\n                    context.prevAttr = Attribute.ZINDEX;\n                    context.curAttr = Attribute.ZINDEX;\n                    context.relation.constant = !prevView ? 0 : context.relation.constant || 'default';\n                    break;\n                }\n                context.constraints.push({\n                  view1: prevView,\n                  attr1: context.prevAttr,\n                  relation: context.relation.relation,\n                  view2: curView,\n                  attr2: context.curAttr,\n                  multiplier: context.relation.multiplier,\n                  constant: context.relation.constant === 'default' || !context.relation.constant ? context.relation.constant : -context.relation.constant,\n                  priority: context.relation.priority\n                });\n              }\n            }\n          }\n\n          //\n          // Process view size constraints\n          //\n          var constraints = item.constraints;\n          if (constraints) {\n            for (var n = 0; n < constraints.length; n++) {\n              context.prevAttr = context.horizontal ? Attribute.WIDTH : Attribute.HEIGHT;\n              context.curAttr = constraints[n].view || constraints[n].multiplier ? constraints[n].attribute || context.prevAttr : constraints[n].variable ? Attribute.VARIABLE : Attribute.CONST;\n              context.constraints.push({\n                view1: curView,\n                attr1: context.prevAttr,\n                relation: constraints[n].relation,\n                view2: constraints[n].view,\n                attr2: context.curAttr,\n                multiplier: constraints[n].multiplier,\n                constant: constraints[n].constant,\n                priority: constraints[n].priority\n              });\n            }\n          }\n\n          //\n          // Process cascaded data (child stack-views)\n          //\n          if (item.cascade) {\n            _processCascade(context, item.cascade, item);\n          }\n        }\n      }\n    } else if (item !== ',') {\n      context.prevViews = curViews;\n      curViews = [];\n      context.relation = item[0];\n      if (context.prevViews !== undefined) {\n        if (context.relation.equalSpacing) {\n          _processEqualSpacer(context, stackView);\n        }\n        if (context.relation.multiplier) {\n          _processProportionalSpacer(context, stackView);\n        }\n      }\n    }\n  }\n\n  if (stackView) {\n    subView = context.subViews[stackView];\n    if (!subView) {\n      subView = { orientations: context.orientation };\n      context.subViews[stackView] = subView;\n    } else if (subView.stack) {\n      var err = new Error('A stack named \"' + stackView + '\" has already been created');\n      err.column = parentItem.$parserOffset + 1;\n      throw err;\n    }\n    subView.stack = {\n      orientation: context.orientation,\n      processedOrientations: context.orientation,\n      subViews: subViews\n    };\n    _processStackView(context, stackView, subView);\n  }\n}\n\nvar metaInfoCategories = ['viewport', 'spacing', 'colors', 'shapes', 'widths', 'heights'];\n\n/**\n * VisualFormat\n *\n * @namespace VisualFormat\n */\n\nvar VisualFormat = (function () {\n  function VisualFormat() {\n    _classCallCheck(this, VisualFormat);\n  }\n\n  _createClass(VisualFormat, null, [{\n    key: 'parseLine',\n\n    /**\n     * Parses a single line of vfl into an array of constraint definitions.\n     *\n     * When the visual-format could not be succesfully parsed an exception is thrown containing\n     * additional info about the parse error and column position.\n     *\n     * @param {String} visualFormat Visual format string (cannot contain line-endings!).\n     * @param {Object} [options] Configuration options.\n     * @param {Boolean} [options.extended] When set to true uses the extended syntax (default: false).\n     * @param {String} [options.outFormat] Output format (`constraints` or `raw`) (default: `constraints`).\n     * @param {Number} [options.lineIndex] Line-index used when auto generating equal-spacing constraints.\n     * @return {Array} Array of constraint definitions.\n     */\n    value: function parseLine(visualFormat, options) {\n      if (visualFormat.length === 0 || options && options.extended && visualFormat.indexOf('//') === 0) {\n        return [];\n      }\n      var res = options && options.extended ? parserExt.parse(visualFormat) : parser.parse(visualFormat);\n      if (options && options.outFormat === 'raw') {\n        return [res];\n      }\n      var context = {\n        constraints: [],\n        lineIndex: (options ? options.lineIndex : undefined) || 1,\n        subViews: (options ? options.subViews : undefined) || {}\n      };\n      switch (res.orientation) {\n        case 'horizontal':\n          context.orientation = Orientation.HORIZONTAL;\n          context.horizontal = true;\n          _processCascade(context, res.cascade, null);\n          break;\n        case 'vertical':\n          context.orientation = Orientation.VERTICAL;\n          _processCascade(context, res.cascade, null);\n          break;\n        case 'horzvert':\n          context.orientation = Orientation.HORIZONTAL;\n          context.horizontal = true;\n          _processCascade(context, res.cascade, null);\n          context = {\n            constraints: context.constraints,\n            lineIndex: context.lineIndex,\n            subViews: context.subViews,\n            orientation: Orientation.VERTICAL\n          };\n          _processCascade(context, res.cascade, null);\n          break;\n        case 'zIndex':\n          context.orientation = Orientation.ZINDEX;\n          _processCascade(context, res.cascade, null);\n          break;\n      }\n      return context.constraints;\n    }\n\n    /**\n     * Parses one or more visual format strings into an array of constraint definitions.\n     *\n     * When the visual-format could not be succesfully parsed an exception is thrown containing\n     * additional info about the parse error and column position.\n     *\n     * @param {String|Array} visualFormat One or more visual format strings.\n     * @param {Object} [options] Configuration options.\n     * @param {Boolean} [options.extended] When set to true uses the extended syntax (default: false).\n     * @param {Boolean} [options.strict] When set to false trims any leading/trailing spaces and ignores empty lines (default: true).\n     * @param {String} [options.lineSeperator] String that defines the end of a line (default `\\n`).\n     * @param {String} [options.outFormat] Output format (`constraints` or `raw`) (default: `constraints`).\n     * @return {Array} Array of constraint definitions.\n     */\n  }, {\n    key: 'parse',\n    value: function parse(visualFormat, options) {\n      var lineSeperator = options && options.lineSeperator ? options.lineSeperator : '\\n';\n      if (!Array.isArray(visualFormat) && visualFormat.indexOf(lineSeperator) < 0) {\n        try {\n          return this.parseLine(visualFormat, options);\n        } catch (err) {\n          err.source = visualFormat;\n          throw err;\n        }\n      }\n\n      // Decompose visual-format into an array of strings, and within those strings\n      // search for line-endings, and treat each line as a seperate visual-format.\n      visualFormat = Array.isArray(visualFormat) ? visualFormat : [visualFormat];\n      var lines = undefined;\n      var constraints = [];\n      var lineIndex = 0;\n      var line = undefined;\n      var parseOptions = {\n        lineIndex: lineIndex,\n        extended: options && options.extended,\n        strict: options && options.strict !== undefined ? options.strict : true,\n        outFormat: options ? options.outFormat : undefined,\n        subViews: {}\n      };\n      try {\n        for (var i = 0; i < visualFormat.length; i++) {\n          lines = visualFormat[i].split(lineSeperator);\n          for (var j = 0; j < lines.length; j++) {\n            line = lines[j];\n            lineIndex++;\n            parseOptions.lineIndex = lineIndex;\n            if (!parseOptions.strict) {\n              line = line.trim();\n            }\n            if (parseOptions.strict || line.length) {\n              constraints = constraints.concat(this.parseLine(line, parseOptions));\n            }\n          }\n        }\n      } catch (err) {\n        err.source = line;\n        err.line = lineIndex;\n        throw err;\n      }\n      return constraints;\n    }\n\n    /**\n     * Parses meta information from the comments in the VFL.\n     *\n     * Additional meta information can be specified in the comments\n     * for previewing and rendering purposes. For instance, the view-port\n     * aspect-ratio, sub-view widths and colors, can be specified. The\n     * following example renders three colored circles in the visual-format editor:\n     *\n     * ```vfl\n     * //viewport aspect-ratio:3/1 max-height:300\n     * //colors red:#FF0000 green:#00FF00 blue:#0000FF\n     * //shapes red:circle green:circle blue:circle\n     * H:|-[row:[red(green,blue)]-[green]-[blue]]-|\n     * V:|[row]|\n     * ```\n     *\n     * Supported categories and properties:\n     *\n     * |Category|Property|Example|\n     * |--------|--------|-------|\n     * |`viewport`|`aspect-ratio:{width}/{height}`|`//viewport aspect-ratio:16/9`|\n     * ||`width:[{number}/intrinsic]`|`//viewport width:10`|\n     * ||`height:[{number}/intrinsic]`|`//viewport height:intrinsic`|\n     * ||`min-width:{number}`|\n     * ||`max-width:{number}`|\n     * ||`min-height:{number}`|\n     * ||`max-height:{number}`|\n     * |`spacing`|`[{number}/array]`|`//spacing:8` or `//spacing:[10, 20, 5]`|\n     * |`widths`|`{view-name}:[{number}/intrinsic]`|`//widths subview1:100`|\n     * |`heights`|`{view-name}:[{number}/intrinsic]`|`//heights subview1:intrinsic`|\n     * |`colors`|`{view-name}:{color}`|`//colors redview:#FF0000 blueview:#00FF00`|\n     * |`shapes`|`{view-name}:[circle/square]`|`//shapes avatar:circle`|\n     *\n     * @param {String|Array} visualFormat One or more visual format strings.\n     * @param {Object} [options] Configuration options.\n     * @param {String} [options.lineSeperator] String that defines the end of a line (default `\\n`).\n     * @param {String} [options.prefix] When specified, also processes the categories using that prefix (e.g. \"-dev-viewport max-height:10\").\n     * @return {Object} meta-info\n     */\n  }, {\n    key: 'parseMetaInfo',\n    value: function parseMetaInfo(visualFormat, options) {\n      var lineSeperator = options && options.lineSeperator ? options.lineSeperator : '\\n';\n      var prefix = options ? options.prefix : undefined;\n      visualFormat = Array.isArray(visualFormat) ? visualFormat : [visualFormat];\n      var metaInfo = {};\n      var key;\n      for (var k = 0; k < visualFormat.length; k++) {\n        var lines = visualFormat[k].split(lineSeperator);\n        for (var i = 0; i < lines.length; i++) {\n          var line = lines[i];\n          for (var c = 0; c < metaInfoCategories.length; c++) {\n            for (var s = 0; s < (prefix ? 2 : 1); s++) {\n              var category = metaInfoCategories[c];\n              var prefixedCategory = (s === 0 ? '' : prefix) + category;\n              if (line.indexOf('//' + prefixedCategory + ' ') === 0) {\n                var items = line.substring(3 + prefixedCategory.length).split(' ');\n                for (var j = 0; j < items.length; j++) {\n                  metaInfo[category] = metaInfo[category] || {};\n                  var item = items[j].split(':');\n                  var names = _getRange(item[0], true);\n                  for (var r = 0; r < names.length; r++) {\n                    metaInfo[category][names[r]] = item.length > 1 ? item[1] : '';\n                  }\n                }\n              } else if (line.indexOf('//' + prefixedCategory + ':') === 0) {\n                metaInfo[category] = line.substring(3 + prefixedCategory.length);\n              }\n            }\n          }\n        }\n      }\n      if (metaInfo.viewport) {\n        var viewport = metaInfo.viewport;\n        var aspectRatio = viewport['aspect-ratio'];\n        if (aspectRatio) {\n          aspectRatio = aspectRatio.split('/');\n          viewport['aspect-ratio'] = parseInt(aspectRatio[0]) / parseInt(aspectRatio[1]);\n        }\n        if (viewport.height !== undefined) {\n          viewport.height = viewport.height === 'intrinsic' ? true : parseInt(viewport.height);\n        }\n        if (viewport.width !== undefined) {\n          viewport.width = viewport.width === 'intrinsic' ? true : parseInt(viewport.width);\n        }\n        if (viewport['max-height'] !== undefined) {\n          viewport['max-height'] = parseInt(viewport['max-height']);\n        }\n        if (viewport['max-width'] !== undefined) {\n          viewport['max-width'] = parseInt(viewport['max-width']);\n        }\n        if (viewport['min-height'] !== undefined) {\n          viewport['min-height'] = parseInt(viewport['min-height']);\n        }\n        if (viewport['min-width'] !== undefined) {\n          viewport['min-width'] = parseInt(viewport['min-width']);\n        }\n      }\n      if (metaInfo.widths) {\n        for (key in metaInfo.widths) {\n          var width = metaInfo.widths[key] === 'intrinsic' ? true : parseInt(metaInfo.widths[key]);\n          metaInfo.widths[key] = width;\n          if (width === undefined || isNaN(width)) {\n            delete metaInfo.widths[key];\n          }\n        }\n      }\n      if (metaInfo.heights) {\n        for (key in metaInfo.heights) {\n          var height = metaInfo.heights[key] === 'intrinsic' ? true : parseInt(metaInfo.heights[key]);\n          metaInfo.heights[key] = height;\n          if (height === undefined || isNaN(height)) {\n            delete metaInfo.heights[key];\n          }\n        }\n      }\n      if (metaInfo.spacing) {\n        var value = JSON.parse(metaInfo.spacing);\n        metaInfo.spacing = value;\n        if (Array.isArray(value)) {\n          for (var sIdx = 0, len = value.length; sIdx < len; sIdx++) {\n            if (isNaN(value[sIdx])) {\n              delete metaInfo.spacing;\n              break;\n            }\n          }\n        } else if (value === undefined || isNaN(value)) {\n          delete metaInfo.spacing;\n        }\n      }\n      return metaInfo;\n    }\n  }]);\n\n  return VisualFormat;\n})();\n\nvar SubView = (function () {\n  function SubView(options) {\n    _classCallCheck(this, SubView);\n\n    this._name = options.name;\n    this._type = options.type;\n    this._solver = options.solver;\n    this._attr = {};\n    if (!options.name) {\n      if (false) {\n        this._attr[Attribute.LEFT] = new c.Variable();\n        this._solver.addConstraint(new c.StayConstraint(this._attr[Attribute.LEFT], c.Strength.required));\n        this._attr[Attribute.TOP] = new c.Variable();\n        this._solver.addConstraint(new c.StayConstraint(this._attr[Attribute.TOP], c.Strength.required));\n        this._attr[Attribute.ZINDEX] = new c.Variable();\n        this._solver.addConstraint(new c.StayConstraint(this._attr[Attribute.ZINDEX], c.Strength.required));\n      } else {\n        this._attr[Attribute.LEFT] = new kiwi.Variable();\n        this._solver.addConstraint(new kiwi.Constraint(this._attr[Attribute.LEFT], kiwi.Operator.Eq, 0));\n        this._attr[Attribute.TOP] = new kiwi.Variable();\n        this._solver.addConstraint(new kiwi.Constraint(this._attr[Attribute.TOP], kiwi.Operator.Eq, 0));\n        this._attr[Attribute.ZINDEX] = new kiwi.Variable();\n        this._solver.addConstraint(new kiwi.Constraint(this._attr[Attribute.ZINDEX], kiwi.Operator.Eq, 0));\n      }\n    }\n  }\n\n  _createClass(SubView, [{\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        name: this.name,\n        left: this.left,\n        top: this.top,\n        width: this.width,\n        height: this.height\n      };\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      JSON.stringify(this.toJSON(), undefined, 2);\n    }\n\n    /**\n     * Name of the sub-view.\n     * @readonly\n     * @type {String}\n     */\n  }, {\n    key: 'getValue',\n\n    /**\n     * Gets the value of one of the attributes.\n     *\n     * @param {String|Attribute} attr Attribute name (e.g. 'right', 'centerY', Attribute.TOP).\n     * @return {Number} value or `undefined`\n     */\n    value: function getValue(attr) {\n      return this._attr[attr] ? this._attr[attr].value() : undefined;\n    }\n\n    /**\n     * @private\n     */\n  }, {\n    key: '_getAttr',\n    value: function _getAttr(attr) {\n      if (this._attr[attr]) {\n        return this._attr[attr];\n      }\n      this._attr[attr] = false ? new c.Variable() : new kiwi.Variable();\n      switch (attr) {\n        case Attribute.RIGHT:\n          this._getAttr(Attribute.LEFT);\n          this._getAttr(Attribute.WIDTH);\n          if (false) {\n            this._solver.addConstraint(new c.Equation(this._attr[attr], c.plus(this._attr[Attribute.LEFT], this._attr[Attribute.WIDTH])));\n          } else {\n            this._solver.addConstraint(new kiwi.Constraint(this._attr[attr], kiwi.Operator.Eq, this._attr[Attribute.LEFT].plus(this._attr[Attribute.WIDTH])));\n          }\n          break;\n        case Attribute.BOTTOM:\n          this._getAttr(Attribute.TOP);\n          this._getAttr(Attribute.HEIGHT);\n          if (false) {\n            this._solver.addConstraint(new c.Equation(this._attr[attr], c.plus(this._attr[Attribute.TOP], this._attr[Attribute.HEIGHT])));\n          } else {\n            this._solver.addConstraint(new kiwi.Constraint(this._attr[attr], kiwi.Operator.Eq, this._attr[Attribute.TOP].plus(this._attr[Attribute.HEIGHT])));\n          }\n          break;\n        case Attribute.CENTERX:\n          this._getAttr(Attribute.LEFT);\n          this._getAttr(Attribute.WIDTH);\n          if (false) {\n            this._solver.addConstraint(new c.Equation(this._attr[attr], c.plus(this._attr[Attribute.LEFT], c.divide(this._attr[Attribute.WIDTH], 2))));\n          } else {\n            this._solver.addConstraint(new kiwi.Constraint(this._attr[attr], kiwi.Operator.Eq, this._attr[Attribute.LEFT].plus(this._attr[Attribute.WIDTH].divide(2))));\n          }\n          break;\n        case Attribute.CENTERY:\n          this._getAttr(Attribute.TOP);\n          this._getAttr(Attribute.HEIGHT);\n          if (false) {\n            this._solver.addConstraint(new c.Equation(this._attr[attr], c.plus(this._attr[Attribute.TOP], c.divide(this._attr[Attribute.HEIGHT], 2))));\n          } else {\n            this._solver.addConstraint(new kiwi.Constraint(this._attr[attr], kiwi.Operator.Eq, this._attr[Attribute.TOP].plus(this._attr[Attribute.HEIGHT].divide(2))));\n          }\n          break;\n      }\n      if (!false) {\n        this._solver.updateVariables();\n      }\n      return this._attr[attr];\n    }\n\n    /**\n     * @private\n     */\n  }, {\n    key: '_getAttrValue',\n    value: function _getAttrValue(attr) {\n      if (false) {\n        return this._getAttr(attr).value;\n      } else {\n        return this._getAttr(attr).value();\n      }\n    }\n  }, {\n    key: 'name',\n    get: function get() {\n      return this._name;\n    }\n\n    /**\n     * Left value (`Attribute.LEFT`).\n     * @readonly\n     * @type {Number}\n     */\n  }, {\n    key: 'left',\n    get: function get() {\n      return this._getAttrValue(Attribute.LEFT);\n    }\n\n    /**\n     * Right value (`Attribute.RIGHT`).\n     * @readonly\n     * @type {Number}\n     */\n  }, {\n    key: 'right',\n    get: function get() {\n      return this._getAttrValue(Attribute.RIGHT);\n    }\n\n    /**\n     * Width value (`Attribute.WIDTH`).\n     * @type {Number}\n     */\n  }, {\n    key: 'width',\n    get: function get() {\n      return this._getAttrValue(Attribute.WIDTH);\n    }\n\n    /**\n     * Height value (`Attribute.HEIGHT`).\n     * @readonly\n     * @type {Number}\n     */\n  }, {\n    key: 'height',\n    get: function get() {\n      return this._getAttrValue(Attribute.HEIGHT);\n    }\n\n    /**\n     * Intrinsic width of the sub-view.\n     *\n     * Use this property to explicitely set the width of the sub-view, e.g.:\n     * ```javascript\n     * var view = new AutoLayout.View(AutoLayout.VisualFormat.parse('|[child1][child2]|'), {\n     *   width: 500\n     * });\n     * view.subViews.child1.intrinsicWidth = 100;\n     * console.log('child2 width: ' + view.subViews.child2.width); // 400\n     * ```\n     *\n     * @type {Number}\n     */\n  }, {\n    key: 'intrinsicWidth',\n    get: function get() {\n      return this._intrinsicWidth;\n    },\n    set: function set(value) {\n      if (value !== undefined && value !== this._intrinsicWidth) {\n        var attr = this._getAttr(Attribute.WIDTH);\n        if (this._intrinsicWidth === undefined) {\n          if (false) {\n            this._solver.addEditVar(attr, new c.Strength('required', this._name ? 998 : 999, 1000, 1000));\n          } else {\n            this._solver.addEditVariable(attr, kiwi.Strength.create(this._name ? 998 : 999, 1000, 1000));\n          }\n        }\n        this._intrinsicWidth = value;\n        this._solver.suggestValue(attr, value);\n        if (false) {\n          this._solver.resolve();\n        } else {\n          this._solver.updateVariables();\n        }\n      }\n    }\n\n    /**\n     * Intrinsic height of the sub-view.\n     *\n     * See `intrinsicWidth`.\n     *\n     * @type {Number}\n     */\n  }, {\n    key: 'intrinsicHeight',\n    get: function get() {\n      return this._intrinsicHeight;\n    },\n    set: function set(value) {\n      if (value !== undefined && value !== this._intrinsicHeight) {\n        var attr = this._getAttr(Attribute.HEIGHT);\n        if (this._intrinsicHeight === undefined) {\n          if (false) {\n            this._solver.addEditVar(attr, new c.Strength('required', this._name ? 998 : 999, 1000, 1000));\n          } else {\n            this._solver.addEditVariable(attr, kiwi.Strength.create(this._name ? 998 : 999, 1000, 1000));\n          }\n        }\n        this._intrinsicHeight = value;\n        this._solver.suggestValue(attr, value);\n        if (false) {\n          this._solver.resolve();\n        } else {\n          this._solver.updateVariables();\n        }\n      }\n    }\n\n    /**\n     * Top value (`Attribute.TOP`).\n     * @readonly\n     * @type {Number}\n     */\n  }, {\n    key: 'top',\n    get: function get() {\n      return this._getAttrValue(Attribute.TOP);\n    }\n\n    /**\n     * Bottom value (`Attribute.BOTTOM`).\n     * @readonly\n     * @type {Number}\n     */\n  }, {\n    key: 'bottom',\n    get: function get() {\n      return this._getAttrValue(Attribute.BOTTOM);\n    }\n\n    /**\n     * Horizontal center (`Attribute.CENTERX`).\n     * @readonly\n     * @type {Number}\n     */\n  }, {\n    key: 'centerX',\n    get: function get() {\n      return this._getAttrValue(Attribute.CENTERX);\n    }\n\n    /**\n     * Vertical center (`Attribute.CENTERY`).\n     * @readonly\n     * @type {Number}\n     */\n  }, {\n    key: 'centerY',\n    get: function get() {\n      return this._getAttrValue(Attribute.CENTERY);\n    }\n\n    /**\n     * Z-index (`Attribute.ZINDEX`).\n     * @readonly\n     * @type {Number}\n     */\n  }, {\n    key: 'zIndex',\n    get: function get() {\n      return this._getAttrValue(Attribute.ZINDEX);\n    }\n\n    /**\n     * Returns the type of the sub-view.\n     * @readonly\n     * @type {String}\n     */\n  }, {\n    key: 'type',\n    get: function get() {\n      return this._type;\n    }\n  }]);\n\n  return SubView;\n})();\n\nvar defaultPriorityStrength = false ? new c.Strength('defaultPriority', 0, 1000, 1000) : kiwi.Strength.create(0, 1000, 1000);\n\nfunction _getConst(name, value) {\n  if (false) {\n    var vr = new c.Variable({ value: value });\n    this._solver.addConstraint(new c.StayConstraint(vr, c.Strength.required, 0));\n    return vr;\n  } else {\n    var vr = new kiwi.Variable();\n    this._solver.addConstraint(new kiwi.Constraint(vr, kiwi.Operator.Eq, value));\n    return vr;\n  }\n}\n\nfunction _getSubView(viewName) {\n  if (!viewName) {\n    return this._parentSubView;\n  } else if (viewName.name) {\n    this._subViews[viewName.name] = this._subViews[viewName.name] || new SubView({\n      name: viewName.name,\n      solver: this._solver\n    });\n    this._subViews[viewName.name]._type = this._subViews[viewName.name]._type || viewName.type;\n    return this._subViews[viewName.name];\n  } else {\n    this._subViews[viewName] = this._subViews[viewName] || new SubView({\n      name: viewName,\n      solver: this._solver\n    });\n    return this._subViews[viewName];\n  }\n}\n\nfunction _getSpacing(constraint) {\n  var index = 4;\n  if (!constraint.view1 && constraint.attr1 === 'left') {\n    index = 3;\n  } else if (!constraint.view1 && constraint.attr1 === 'top') {\n    index = 0;\n  } else if (!constraint.view2 && constraint.attr2 === 'right') {\n    index = 1;\n  } else if (!constraint.view2 && constraint.attr2 === 'bottom') {\n    index = 2;\n  } else {\n    switch (constraint.attr1) {\n      case 'left':\n      case 'right':\n      case 'centerX':\n      case 'leading':\n      case 'trailing':\n        index = 4;\n        break;\n      case 'zIndex':\n        index = 6;\n        break;\n      default:\n        index = 5;\n    }\n  }\n  this._spacingVars = this._spacingVars || new Array(7);\n  this._spacingExpr = this._spacingExpr || new Array(7);\n  if (!this._spacingVars[index]) {\n    if (false) {\n      this._spacingVars[index] = new c.Variable();\n      this._solver.addEditVar(this._spacingVars[index]);\n      this._spacingExpr[index] = c.minus(0, this._spacingVars[index]);\n    } else {\n      this._spacingVars[index] = new kiwi.Variable();\n      this._solver.addEditVariable(this._spacingVars[index], kiwi.Strength.create(999, 1000, 1000));\n      this._spacingExpr[index] = this._spacingVars[index].multiply(-1);\n    }\n    this._solver.suggestValue(this._spacingVars[index], this._spacing[index]);\n  }\n  return this._spacingExpr[index];\n}\n\nfunction _addConstraint(constraint) {\n  //this.constraints.push(constraint);\n  var relation = undefined;\n  var multiplier = constraint.multiplier !== undefined ? constraint.multiplier : 1;\n  var constant = constraint.constant !== undefined ? constraint.constant : 0;\n  if (constant === 'default') {\n    constant = _getSpacing.call(this, constraint);\n  }\n  var attr1 = _getSubView.call(this, constraint.view1)._getAttr(constraint.attr1);\n  var attr2 = undefined;\n  if (false) {\n    if (constraint.attr2 === Attribute.CONST) {\n      attr2 = _getConst.call(this, undefined, constraint.constant);\n    } else {\n      attr2 = _getSubView.call(this, constraint.view2)._getAttr(constraint.attr2);\n      if (multiplier !== 1 && constant) {\n        attr2 = c.plus(c.times(attr2, multiplier), constant);\n      } else if (constant) {\n        attr2 = c.plus(attr2, constant);\n      } else if (multiplier !== 1) {\n        attr2 = c.times(attr2, multiplier);\n      }\n    }\n    var strength = constraint.priority !== undefined && constraint.priority < 1000 ? new c.Strength('priority', 0, constraint.priority, 1000) : defaultPriorityStrength;\n    switch (constraint.relation) {\n      case Relation.EQU:\n        relation = new c.Equation(attr1, attr2, strength);\n        break;\n      case Relation.GEQ:\n        relation = new c.Inequality(attr1, c.GEQ, attr2, strength);\n        break;\n      case Relation.LEQ:\n        relation = new c.Inequality(attr1, c.LEQ, attr2, strength);\n        break;\n      default:\n        throw 'Invalid relation specified: ' + constraint.relation;\n    }\n  } else {\n    if (constraint.attr2 === Attribute.CONST) {\n      attr2 = _getConst.call(this, undefined, constraint.constant);\n    } else {\n      attr2 = _getSubView.call(this, constraint.view2)._getAttr(constraint.attr2);\n      if (multiplier !== 1 && constant) {\n        attr2 = attr2.multiply(multiplier).plus(constant);\n      } else if (constant) {\n        attr2 = attr2.plus(constant);\n      } else if (multiplier !== 1) {\n        attr2 = attr2.multiply(multiplier);\n      }\n    }\n    var strength = constraint.priority !== undefined && constraint.priority < 1000 ? kiwi.Strength.create(0, constraint.priority, 1000) : defaultPriorityStrength;\n    switch (constraint.relation) {\n      case Relation.EQU:\n        relation = new kiwi.Constraint(attr1, kiwi.Operator.Eq, attr2, strength);\n        break;\n      case Relation.GEQ:\n        relation = new kiwi.Constraint(attr1, kiwi.Operator.Ge, attr2, strength);\n        break;\n      case Relation.LEQ:\n        relation = new kiwi.Constraint(attr1, kiwi.Operator.Le, attr2, strength);\n        break;\n      default:\n        throw 'Invalid relation specified: ' + constraint.relation;\n    }\n  }\n  this._solver.addConstraint(relation);\n}\n\nfunction _compareSpacing(old, newz) {\n  if (old === newz) {\n    return true;\n  }\n  if (!old || !newz) {\n    return false;\n  }\n  for (var i = 0; i < 7; i++) {\n    if (old[i] !== newz[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * AutoLayoutJS API reference.\n *\n * ### Index\n *\n * |Entity|Type|Description|\n * |---|---|---|\n * |[AutoLayout](#autolayout)|`namespace`|Top level AutoLayout object.|\n * |[VisualFormat](#autolayoutvisualformat--object)|`namespace`|Parses VFL into constraints.|\n * |[View](#autolayoutview)|`class`|Main entity for adding & evaluating constraints.|\n * |[SubView](#autolayoutsubview--object)|`class`|SubView's are automatically created when constraints are added to views. They give access to the evaluated results.|\n * |[Attribute](#autolayoutattribute--enum)|`enum`|Attribute types that are supported when adding constraints.|\n * |[Relation](#autolayoutrelation--enum)|`enum`|Relationship types that are supported when adding constraints.|\n * |[Priority](#autolayoutpriority--enum)|`enum`|Default priority values for when adding constraints.|\n *\n * ### AutoLayout\n *\n * @module AutoLayout\n */\n\nvar View = (function () {\n\n  /**\n   * @class View\n   * @param {Object} [options] Configuration options.\n   * @param {Number} [options.width] Initial width of the view.\n   * @param {Number} [options.height] Initial height of the view.\n   * @param {Number|Object} [options.spacing] Spacing for the view (default: 8) (see `setSpacing`).\n   * @param {Array} [options.constraints] One or more constraint definitions (see `addConstraints`).\n   */\n\n  function View(options) {\n    _classCallCheck(this, View);\n\n    this._solver = false ? new c.SimplexSolver() : new kiwi.Solver();\n    this._subViews = {};\n    //this._spacing = undefined;\n    this._parentSubView = new SubView({\n      solver: this._solver\n    });\n    this.setSpacing(options && options.spacing !== undefined ? options.spacing : 8);\n    //this.constraints = [];\n    if (options) {\n      if (options.width !== undefined || options.height !== undefined) {\n        this.setSize(options.width, options.height);\n      }\n      if (options.constraints) {\n        this.addConstraints(options.constraints);\n      }\n    }\n  }\n\n  /**\n   * Sets the width and height of the view.\n   *\n   * @param {Number} width Width of the view.\n   * @param {Number} height Height of the view.\n   * @return {View} this\n   */\n\n  _createClass(View, [{\n    key: 'setSize',\n    value: function setSize(width, height /*, depth*/) {\n      this._parentSubView.intrinsicWidth = width;\n      this._parentSubView.intrinsicHeight = height;\n      return this;\n    }\n\n    /**\n     * Width that was set using `setSize`.\n     * @readonly\n     * @type {Number}\n     */\n  }, {\n    key: 'setSpacing',\n\n    /**\n     * Sets the spacing for the view.\n     *\n     * The spacing can be set for 7 different variables:\n     * `top`, `right`, `bottom`, `left`, `width`, `height` and `zIndex`. The `left`-spacing is\n     * used when a spacer is used between the parent-view and a sub-view (e.g. `|-[subView]`).\n     * The same is true for the `right`, `top` and `bottom` spacers. The `width` and `height` are\n     * used for spacers in between sub-views (e.g. `[view1]-[view2]`).\n     *\n     * Instead of using the full spacing syntax, it is also possible to use shorthand notations:\n     *\n     * |Syntax|Type|Description|\n     * |---|---|---|\n     * |`[top, right, bottom, left, width, height, zIndex]`|Array(7)|Full syntax including z-index **(clockwise order)**.|\n     * |`[top, right, bottom, left, width, height]`|Array(6)|Full horizontal & vertical spacing syntax (no z-index) **(clockwise order)**.|\n     * |`[horizontal, vertical, zIndex]`|Array(3)|Horizontal = left, right, width, vertical = top, bottom, height.|\n     * |`[horizontal, vertical]`|Array(2)|Horizontal = left, right, width, vertical = top, bottom, height, z-index = 1.|\n     * |`spacing`|Number|Horizontal & vertical spacing are all the same, z-index = 1.|\n     *\n     * Examples:\n     * ```javascript\n     * view.setSpacing(10); // horizontal & vertical spacing 10\n     * view.setSpacing([10, 15, 2]); // horizontal spacing 10, vertical spacing 15, z-axis spacing 2\n     * view.setSpacing([10, 20, 10, 20, 5, 5]); // top, right, bottom, left, horizontal, vertical\n     * view.setSpacing([10, 20, 10, 20, 5, 5, 1]); // top, right, bottom, left, horizontal, vertical, z\n     * ```\n     *\n     * @param {Number|Array} spacing\n     * @return {View} this\n     */\n    value: function setSpacing(spacing) {\n      // convert spacing into array: [top, right, bottom, left, horz, vert, z-index]\n      switch (Array.isArray(spacing) ? spacing.length : -1) {\n        case -1:\n          spacing = [spacing, spacing, spacing, spacing, spacing, spacing, 1];break;\n        case 1:\n          spacing = [spacing[0], spacing[0], spacing[0], spacing[0], spacing[0], spacing[0], 1];break;\n        case 2:\n          spacing = [spacing[1], spacing[0], spacing[1], spacing[0], spacing[0], spacing[1], 1];break;\n        case 3:\n          spacing = [spacing[1], spacing[0], spacing[1], spacing[0], spacing[0], spacing[1], spacing[2]];break;\n        case 6:\n          spacing = [spacing[0], spacing[1], spacing[2], spacing[3], spacing[4], spacing[5], 1];break;\n        case 7:\n          break;\n        default:\n          throw 'Invalid spacing syntax';\n      }\n      if (!_compareSpacing(this._spacing, spacing)) {\n        this._spacing = spacing;\n        // update spacing variables\n        if (this._spacingVars) {\n          for (var i = 0; i < this._spacingVars.length; i++) {\n            if (this._spacingVars[i]) {\n              this._solver.suggestValue(this._spacingVars[i], this._spacing[i]);\n            }\n          }\n          if (false) {\n            this._solver.resolve();\n          } else {\n            this._solver.updateVariables();\n          }\n        }\n      }\n      return this;\n    }\n\n    /**\n     * Adds a constraint definition.\n     *\n     * A constraint definition has the following format:\n     *\n     * ```javascript\n     * constraint: {\n     *   view1: {String},\n     *   attr1: {AutoLayout.Attribute},\n     *   relation: {AutoLayout.Relation},\n     *   view2: {String},\n     *   attr2: {AutoLayout.Attribute},\n     *   multiplier: {Number},\n     *   constant: {Number},\n     *   priority: {Number}(0..1000)\n     * }\n     * ```\n     * @param {Object} constraint Constraint definition.\n     * @return {View} this\n     */\n  }, {\n    key: 'addConstraint',\n    value: function addConstraint(constraint) {\n      _addConstraint.call(this, constraint);\n      if (!false) {\n        this._solver.updateVariables();\n      }\n      return this;\n    }\n\n    /**\n     * Adds one or more constraint definitions.\n     *\n     * A constraint definition has the following format:\n     *\n     * ```javascript\n     * constraint: {\n     *   view1: {String},\n     *   attr1: {AutoLayout.Attribute},\n     *   relation: {AutoLayout.Relation},\n     *   view2: {String},\n     *   attr2: {AutoLayout.Attribute},\n     *   multiplier: {Number},\n     *   constant: {Number},\n     *   priority: {Number}(0..1000)\n     * }\n     * ```\n     * @param {Array} constraints One or more constraint definitions.\n     * @return {View} this\n     */\n  }, {\n    key: 'addConstraints',\n    value: function addConstraints(constraints) {\n      for (var j = 0; j < constraints.length; j++) {\n        _addConstraint.call(this, constraints[j]);\n      }\n      if (!false) {\n        this._solver.updateVariables();\n      }\n      return this;\n    }\n\n    /**\n     * Dictionary of `SubView` objects that have been created when adding constraints.\n     * @readonly\n     * @type {Object.SubView}\n     */\n  }, {\n    key: 'width',\n    get: function get() {\n      return this._parentSubView.intrinsicWidth;\n    }\n\n    /**\n     * Height that was set using `setSize`.\n     * @readonly\n     * @type {Number}\n     */\n  }, {\n    key: 'height',\n    get: function get() {\n      return this._parentSubView.intrinsicHeight;\n    }\n\n    /**\n     * Width that is calculated from the constraints and the `.intrinsicWidth` of\n     * the sub-views.\n     *\n     * When the width has been explicitely set using `setSize`, the fittingWidth\n     * will **always** be the same as the explicitely set width. To calculate the size\n     * based on the content, use:\n     * ```javascript\n     * var view = new AutoLayout.View({\n     *   constraints: VisualFormat.parse('|-[view1]-[view2]-'),\n     *   spacing: 20\n     * });\n     * view.subViews.view1.intrinsicWidth = 100;\n     * view.subViews.view2.intrinsicWidth = 100;\n     * console.log('fittingWidth: ' + view.fittingWidth); // 260\n     * ```\n     *\n     * @readonly\n     * @type {Number}\n     */\n  }, {\n    key: 'fittingWidth',\n    get: function get() {\n      return this._parentSubView.width;\n    }\n\n    /**\n     * Height that is calculated from the constraints and the `.intrinsicHeight` of\n     * the sub-views.\n     *\n     * See `.fittingWidth`.\n     *\n     * @readonly\n     * @type {Number}\n     */\n  }, {\n    key: 'fittingHeight',\n    get: function get() {\n      return this._parentSubView.height;\n    }\n  }, {\n    key: 'subViews',\n    get: function get() {\n      return this._subViews;\n    }\n\n    /**\n     * Checks whether the constraints incompletely specify the location\n     * of the subViews.\n     * @private\n     */\n    //get hasAmbiguousLayout() {\n    // Todo\n    //}\n  }]);\n\n  return View;\n})();\n\nvar AutoLayout = {\n  Attribute: Attribute,\n  Relation: Relation,\n  Priority: Priority,\n  VisualFormat: VisualFormat,\n  View: View,\n  SubView: SubView\n  //DOM: DOM\n};\n\nmodule.exports = AutoLayout;\n\n},{\"kiwi/ts/bin/kiwi\":2}],2:[function(require,module,exports){\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define([], function () {\n      return (root['kiwi'] = factory());\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['kiwi'] = factory();\n  }\n}(this, function () {\n\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014, Nucleic Development Team.\n|\n| Distributed under the terms of the Modified BSD License.\n|\n| The full license is in the file COPYING.txt, distributed with this software.\n|----------------------------------------------------------------------------*/\nvar tsu;\n(function (tsu) {\n\n    /**\n    * An iterator for an array of items.\n    */\n    var ArrayIterator = (function () {\n        /*\n        * Construct a new ArrayIterator.\n        *\n        * @param array The array of items to iterate.\n        * @param [index] The index at which to start iteration.\n        */\n        function ArrayIterator(array, index) {\n            if (typeof index === \"undefined\") { index = 0; }\n            this._array = array;\n            this._index = Math.max(0, Math.min(index, array.length));\n        }\n        /**\n        * Returns the next item from the iterator or undefined.\n        */\n        ArrayIterator.prototype.__next__ = function () {\n            return this._array[this._index++];\n        };\n\n        /**\n        * Returns this same iterator.\n        */\n        ArrayIterator.prototype.__iter__ = function () {\n            return this;\n        };\n        return ArrayIterator;\n    })();\n    tsu.ArrayIterator = ArrayIterator;\n\n    /**\n    * A reverse iterator for an array of items.\n    */\n    var ReverseArrayIterator = (function () {\n        /**\n        * Construct a new ReverseArrayIterator.\n        *\n        * @param array The array of items to iterate.\n        * @param [index] The index at which to start iteration.\n        */\n        function ReverseArrayIterator(array, index) {\n            if (typeof index === \"undefined\") { index = array.length; }\n            this._array = array;\n            this._index = Math.max(0, Math.min(index, array.length));\n        }\n        /**\n        * Returns the next item from the iterator or undefined.\n        */\n        ReverseArrayIterator.prototype.__next__ = function () {\n            return this._array[--this._index];\n        };\n\n        /**\n        * Returns this same iterator.\n        */\n        ReverseArrayIterator.prototype.__iter__ = function () {\n            return this;\n        };\n        return ReverseArrayIterator;\n    })();\n    tsu.ReverseArrayIterator = ReverseArrayIterator;\n\n    \n\n    function iter(object) {\n        if (object instanceof Array) {\n            return new ArrayIterator(object);\n        }\n        return object.__iter__();\n    }\n    tsu.iter = iter;\n\n    \n\n    function reversed(object) {\n        if (object instanceof Array) {\n            return new ReverseArrayIterator(object);\n        }\n        return object.__reversed__();\n    }\n    tsu.reversed = reversed;\n\n    /**\n    * Returns the next value from an iterator, or undefined.\n    */\n    function next(iterator) {\n        return iterator.__next__();\n    }\n    tsu.next = next;\n\n\n    function forEach(object, callback) {\n        if (object instanceof Array) {\n            for (var i = 0, n = object.length; i < n; ++i) {\n                if (callback(object[i]) === false) {\n                    return;\n                }\n            }\n        } else {\n            var value;\n            var it = object.__iter__();\n            while ((value = it.__next__()) !== undefined) {\n                if (callback(value) === false) {\n                    return;\n                }\n            }\n        }\n    }\n    tsu.forEach = forEach;\n\n})(tsu || (tsu = {}));\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014, Nucleic Development Team.\n|\n| Distributed under the terms of the Modified BSD License.\n|\n| The full license is in the file COPYING.txt, distributed with this software.\n|----------------------------------------------------------------------------*/\nvar tsu;\n(function (tsu) {\n    \n\n    /**\n    * A class which defines a generic pair object.\n    */\n    var Pair = (function () {\n        /**\n        * Construct a new Pair object.\n        *\n        * @param first The first item of the pair.\n        * @param second The second item of the pair.\n        */\n        function Pair(first, second) {\n            this.first = first;\n            this.second = second;\n        }\n        /**\n        * Create a copy of the pair.\n        */\n        Pair.prototype.copy = function () {\n            return new Pair(this.first, this.second);\n        };\n        return Pair;\n    })();\n    tsu.Pair = Pair;\n})(tsu || (tsu = {}));\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014, Nucleic Development Team.\n|\n| Distributed under the terms of the Modified BSD License.\n|\n| The full license is in the file COPYING.txt, distributed with this software.\n|----------------------------------------------------------------------------*/\n/// <reference path=\"iterator.ts\"/>\n/// <reference path=\"utility.ts\"/>\nvar tsu;\n(function (tsu) {\n    /**\n    * Perform a lower bound search on a sorted array.\n    *\n    * @param array The array of sorted items to search.\n    * @param value The value to located in the array.\n    * @param compare The value comparison function.\n    * @returns The index of the first element in the array which\n    *          compares greater than or equal to the given value.\n    */\n    function lowerBound(array, value, compare) {\n        var begin = 0;\n        var n = array.length;\n        var half;\n        var middle;\n        while (n > 0) {\n            half = n >> 1;\n            middle = begin + half;\n            if (compare(array[middle], value) < 0) {\n                begin = middle + 1;\n                n -= half + 1;\n            } else {\n                n = half;\n            }\n        }\n        return begin;\n    }\n    tsu.lowerBound = lowerBound;\n\n    /**\n    * Perform a binary search on a sorted array.\n    *\n    * @param array The array of sorted items to search.\n    * @param value The value to located in the array.\n    * @param compare The value comparison function.\n    * @returns The index of the found item, or -1.\n    */\n    function binarySearch(array, value, compare) {\n        var index = lowerBound(array, value, compare);\n        if (index === array.length) {\n            return -1;\n        }\n        var item = array[index];\n        if (compare(item, value) !== 0) {\n            return -1;\n        }\n        return index;\n    }\n    tsu.binarySearch = binarySearch;\n\n    /**\n    * Perform a binary find on a sorted array.\n    *\n    * @param array The array of sorted items to search.\n    * @param value The value to located in the array.\n    * @param compare The value comparison function.\n    * @returns The found item in the array, or undefined.\n    */\n    function binaryFind(array, value, compare) {\n        var index = lowerBound(array, value, compare);\n        if (index === array.length) {\n            return undefined;\n        }\n        var item = array[index];\n        if (compare(item, value) !== 0) {\n            return undefined;\n        }\n        return item;\n    }\n    tsu.binaryFind = binaryFind;\n\n})(tsu || (tsu = {}));\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014, Nucleic Development Team.\n|\n| Distributed under the terms of the Modified BSD License.\n|\n| The full license is in the file COPYING.txt, distributed with this software.\n|----------------------------------------------------------------------------*/\n/// <reference path=\"iterator.ts\"/>\nvar tsu;\n(function (tsu) {\n    /**\n    * A base class for implementing array-based data structures.\n    *\n    * @class\n    */\n    var ArrayBase = (function () {\n        function ArrayBase() {\n            /*\n            * The internal data array.\n            *\n            * @protected\n            */\n            this._array = [];\n        }\n        /**\n        * Returns the number of items in the array.\n        */\n        ArrayBase.prototype.size = function () {\n            return this._array.length;\n        };\n\n        /**\n        * Returns true if the array is empty.\n        */\n        ArrayBase.prototype.empty = function () {\n            return this._array.length === 0;\n        };\n\n        /**\n        * Returns the item at the given array index.\n        *\n        * @param index The integer index of the desired item.\n        */\n        ArrayBase.prototype.itemAt = function (index) {\n            return this._array[index];\n        };\n\n        /**\n        * Removes and returns the item at the given index.\n        *\n        * @param index The integer index of the desired item.\n        */\n        ArrayBase.prototype.takeAt = function (index) {\n            return this._array.splice(index, 1)[0];\n        };\n\n        /**\n        * Clear the internal contents of array.\n        */\n        ArrayBase.prototype.clear = function () {\n            this._array = [];\n        };\n\n        /**\n        * Swap this array's contents with another array.\n        *\n        * @param other The array base to use for the swap.\n        */\n        ArrayBase.prototype.swap = function (other) {\n            var array = this._array;\n            this._array = other._array;\n            other._array = array;\n        };\n\n        /**\n        * Returns an iterator over the array of items.\n        */\n        ArrayBase.prototype.__iter__ = function () {\n            return tsu.iter(this._array);\n        };\n\n        /**\n        * Returns a reverse iterator over the array of items.\n        */\n        ArrayBase.prototype.__reversed__ = function () {\n            return tsu.reversed(this._array);\n        };\n        return ArrayBase;\n    })();\n    tsu.ArrayBase = ArrayBase;\n})(tsu || (tsu = {}));\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014, Nucleic Development Team.\n|\n| Distributed under the terms of the Modified BSD License.\n|\n| The full license is in the file COPYING.txt, distributed with this software.\n|----------------------------------------------------------------------------*/\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\n/// <reference path=\"algorithm.ts\"/>\n/// <reference path=\"array_base.ts\"/>\n/// <reference path=\"iterator.ts\"/>\n/// <reference path=\"utility.ts\"/>\nvar tsu;\n(function (tsu) {\n    /**\n    * A mapping container build on a sorted array.\n    *\n    * @class\n    */\n    var AssociativeArray = (function (_super) {\n        __extends(AssociativeArray, _super);\n        /**\n        * Construct a new AssociativeArray.\n        *\n        * @param compare The key comparison function.\n        */\n        function AssociativeArray(compare) {\n            _super.call(this);\n            this._compare = compare;\n            this._wrapped = wrapCompare(compare);\n        }\n        /**\n        * Returns the key comparison function used by this array.\n        */\n        AssociativeArray.prototype.comparitor = function () {\n            return this._compare;\n        };\n\n        /**\n        * Return the array index of the given key, or -1.\n        *\n        * @param key The key to locate in the array.\n        */\n        AssociativeArray.prototype.indexOf = function (key) {\n            return tsu.binarySearch(this._array, key, this._wrapped);\n        };\n\n        /**\n        * Returns true if the key is in the array, false otherwise.\n        *\n        * @param key The key to locate in the array.\n        */\n        AssociativeArray.prototype.contains = function (key) {\n            return tsu.binarySearch(this._array, key, this._wrapped) >= 0;\n        };\n\n        /**\n        * Returns the pair associated with the given key, or undefined.\n        *\n        * @param key The key to locate in the array.\n        */\n        AssociativeArray.prototype.find = function (key) {\n            return tsu.binaryFind(this._array, key, this._wrapped);\n        };\n\n        /**\n        * Returns the pair associated with the key if it exists.\n        *\n        * If the key does not exist, a new pair will be created and\n        * inserted using the value created by the given factory.\n        *\n        * @param key The key to locate in the array.\n        * @param factory The function which creates the default value.\n        */\n        AssociativeArray.prototype.setDefault = function (key, factory) {\n            var array = this._array;\n            var index = tsu.lowerBound(array, key, this._wrapped);\n            if (index === array.length) {\n                var pair = new tsu.Pair(key, factory());\n                array.push(pair);\n                return pair;\n            }\n            var currPair = array[index];\n            if (this._compare(currPair.first, key) !== 0) {\n                var pair = new tsu.Pair(key, factory());\n                array.splice(index, 0, pair);\n                return pair;\n            }\n            return currPair;\n        };\n\n        /**\n        * Insert the pair into the array and return the pair.\n        *\n        * This will overwrite any existing entry in the array.\n        *\n        * @param key The key portion of the pair.\n        * @param value The value portion of the pair.\n        */\n        AssociativeArray.prototype.insert = function (key, value) {\n            var array = this._array;\n            var index = tsu.lowerBound(array, key, this._wrapped);\n            if (index === array.length) {\n                var pair = new tsu.Pair(key, value);\n                array.push(pair);\n                return pair;\n            }\n            var currPair = array[index];\n            if (this._compare(currPair.first, key) !== 0) {\n                var pair = new tsu.Pair(key, value);\n                array.splice(index, 0, pair);\n                return pair;\n            }\n            currPair.second = value;\n            return currPair;\n        };\n\n        AssociativeArray.prototype.update = function (object) {\n            var _this = this;\n            if (object instanceof AssociativeArray) {\n                var obj = object;\n                this._array = merge(this._array, obj._array, this._compare);\n            } else {\n                tsu.forEach(object, function (pair) {\n                    _this.insert(pair.first, pair.second);\n                });\n            }\n        };\n\n        /**\n        * Removes and returns the pair for the given key, or undefined.\n        *\n        * @param key The key to remove from the map.\n        */\n        AssociativeArray.prototype.erase = function (key) {\n            var array = this._array;\n            var index = tsu.binarySearch(array, key, this._wrapped);\n            if (index < 0) {\n                return undefined;\n            }\n            return array.splice(index, 1)[0];\n        };\n\n        /**\n        * Create a copy of this associative array.\n        */\n        AssociativeArray.prototype.copy = function () {\n            var theCopy = new AssociativeArray(this._compare);\n            var copyArray = theCopy._array;\n            var thisArray = this._array;\n            for (var i = 0, n = thisArray.length; i < n; ++i) {\n                copyArray.push(thisArray[i].copy());\n            }\n            return theCopy;\n        };\n        return AssociativeArray;\n    })(tsu.ArrayBase);\n    tsu.AssociativeArray = AssociativeArray;\n\n    /**\n    * An internal which wraps a comparison key function.\n    */\n    function wrapCompare(cmp) {\n        return function (pair, value) {\n            return cmp(pair.first, value);\n        };\n    }\n\n    /**\n    * An internal function which merges two ordered pair arrays.\n    */\n    function merge(first, second, compare) {\n        var i = 0, j = 0;\n        var len1 = first.length;\n        var len2 = second.length;\n        var merged = [];\n        while (i < len1 && j < len2) {\n            var a = first[i];\n            var b = second[j];\n            var v = compare(a.first, b.first);\n            if (v < 0) {\n                merged.push(a.copy());\n                ++i;\n            } else if (v > 0) {\n                merged.push(b.copy());\n                ++j;\n            } else {\n                merged.push(b.copy());\n                ++i;\n                ++j;\n            }\n        }\n        while (i < len1) {\n            merged.push(first[i].copy());\n            ++i;\n        }\n        while (j < len2) {\n            merged.push(second[j].copy());\n            ++j;\n        }\n        return merged;\n    }\n})(tsu || (tsu = {}));\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014, Nucleic Development Team.\n|\n| Distributed under the terms of the Modified BSD License.\n|\n| The full license is in the file COPYING.txt, distributed with this software.\n|----------------------------------------------------------------------------*/\n/// <reference path=\"algorithm.ts\"/>\n/// <reference path=\"array_base.ts\"/>\n/// <reference path=\"associative_array.ts\"/>\n/// <reference path=\"iterator.ts\"/>\n/// <reference path=\"unique_array.ts\"/>\n/// <reference path=\"utility.ts\"/>\n\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014, Nucleic Development Team.\n|\n| Distributed under the terms of the Modified BSD License.\n|\n| The full license is in the file COPYING.txt, distributed with this software.\n|----------------------------------------------------------------------------*/\n// <reference path=\"expression.ts\">\n// <reference path=\"strength.ts\">\n/**\n * Kiwi is an efficient implementation of the Cassowary constraint solving\n * algorithm, based on the seminal Cassowary paper.\n * It is *not* a refactoring or port of the original C++ solver, but\n * has been designed from the ground up to be lightweight and fast.\n *\n * **Example**\n * ```javascript\n * var kiwi = require('kiwi');\n *\n * // Create a solver\n * var solver = new kiwi.Solver();\n *\n * // Create and add some editable variables\n * var left = new kiwi.Variable();\n * var width = new kiwi.Variable();\n * solver.addEditVariable(left, kiwi.Strength.strong);\n * solver.addEditVariable(width, kiwi.Strength.strong);\n *\n * // Create a variable calculated through a constraint\n * var centerX = new kiwi.Variable();\n * var expr = new kiwi.Expression([-1, centerX], left, [0.5, width]);\n * solver.addConstraint(new kiwi.Constraint(expr, kiwi.Operator.Eq, kiwi.Strength.required));\n *\n * // Suggest some values to the solver\n * solver.suggestValue(left, 0);\n * solver.suggestValue(width, 500);\n *\n * // Lets solve the problem!\n * solver.updateVariables();\n * assert(centerX.value(), 250);\n * ```\n *\n * ##API Documentation\n * @module kiwi\n */\nvar kiwi;\n(function (kiwi) {\n    /**\n     * An enum defining the linear constraint operators.\n     *\n     * |Value|Operator|Description|\n     * |----|-----|-----|\n     * |`Le`|<=|Less than equal|\n     * |`Ge`|>=|Greater than equal|\n     * |`Eq`|==|Equal|\n     *\n     * @enum {Number}\n     */\n    (function (Operator) {\n        Operator[Operator[\"Le\"] = 0] = \"Le\";\n        Operator[Operator[\"Ge\"] = 1] = \"Ge\";\n        Operator[Operator[\"Eq\"] = 2] = \"Eq\"; // ==\n    })(kiwi.Operator || (kiwi.Operator = {}));\n    var Operator = kiwi.Operator;\n    /**\n     * A linear constraint equation.\n     *\n     * A constraint equation is composed of an expression, an operator,\n     * and a strength. The RHS of the equation is implicitly zero.\n     *\n     * @class\n     * @param {Expression} expression The constraint expression (LHS).\n     * @param {Operator} operator The equation operator.\n     * @param {Expression} [rhs] Right hand side of the expression.\n     * @param {Number} [strength=Strength.required] The strength of the constraint.\n     */\n    var Constraint = (function () {\n        function Constraint(expression, operator, rhs, strength) {\n            if (strength === void 0) { strength = kiwi.Strength.required; }\n            this._id = CnId++;\n            this._operator = operator;\n            this._strength = kiwi.Strength.clip(strength);\n            if ((rhs === undefined) && (expression instanceof kiwi.Expression)) {\n                this._expression = expression;\n            }\n            else {\n                this._expression = expression.minus(rhs);\n            }\n        }\n        /**\n          * A static constraint comparison function.\n          * @private\n          */\n        Constraint.Compare = function (a, b) {\n            return a.id() - b.id();\n        };\n        /**\n         * Returns the unique id number of the constraint.\n         * @private\n         */\n        Constraint.prototype.id = function () {\n            return this._id;\n        };\n        /**\n         * Returns the expression of the constraint.\n         *\n         * @return {Expression} expression\n         */\n        Constraint.prototype.expression = function () {\n            return this._expression;\n        };\n        /**\n         * Returns the relational operator of the constraint.\n         *\n         * @return {Operator} linear constraint operator\n         */\n        Constraint.prototype.op = function () {\n            return this._operator;\n        };\n        /**\n         * Returns the strength of the constraint.\n         *\n         * @return {Number} strength\n         */\n        Constraint.prototype.strength = function () {\n            return this._strength;\n        };\n        return Constraint;\n    })();\n    kiwi.Constraint = Constraint;\n    /**\n     * The internal constraint id counter.\n     * @private\n     */\n    var CnId = 0;\n})(kiwi || (kiwi = {}));\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014, Nucleic Development Team.\n|\n| Distributed under the terms of the Modified BSD License.\n|\n| The full license is in the file COPYING.txt, distributed with this software.\n|----------------------------------------------------------------------------*/\n/// <reference path=\"../thirdparty/tsu.d.ts\"/>\nvar kiwi;\n(function (kiwi) {\n    function createMap(compare) {\n        return new tsu.AssociativeArray(compare);\n    }\n    kiwi.createMap = createMap;\n})(kiwi || (kiwi = {}));\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014, Nucleic Development Team.\n|\n| Distributed under the terms of the Modified BSD License.\n|\n| The full license is in the file COPYING.txt, distributed with this software.\n|----------------------------------------------------------------------------*/\nvar kiwi;\n(function (kiwi) {\n    /**\n     * The primary user constraint variable.\n     *\n     * @class\n     * @param {String} [name=\"\"] The name to associated with the variable.\n     */\n    var Variable = (function () {\n        function Variable(name) {\n            if (name === void 0) { name = \"\"; }\n            this._value = 0.0;\n            this._context = null;\n            this._id = VarId++;\n            this._name = name;\n        }\n        /**\n         * A static variable comparison function.\n         * @private\n         */\n        Variable.Compare = function (a, b) {\n            return a.id() - b.id();\n        };\n        /**\n         * Returns the unique id number of the variable.\n         * @private\n         */\n        Variable.prototype.id = function () {\n            return this._id;\n        };\n        /**\n         * Returns the name of the variable.\n         *\n         * @return {String} name of the variable\n         */\n        Variable.prototype.name = function () {\n            return this._name;\n        };\n        /**\n         * Set the name of the variable.\n         *\n         * @param {String} name Name of the variable\n         */\n        Variable.prototype.setName = function (name) {\n            this._name = name;\n        };\n        /**\n         * Returns the user context object of the variable.\n         * @private\n         */\n        Variable.prototype.context = function () {\n            return this._context;\n        };\n        /**\n         * Set the user context object of the variable.\n         * @private\n         */\n        Variable.prototype.setContext = function (context) {\n            this._context = context;\n        };\n        /**\n         * Returns the value of the variable.\n         *\n         * @return {Number} Calculated value\n         */\n        Variable.prototype.value = function () {\n            return this._value;\n        };\n        /**\n         * Set the value of the variable.\n         * @private\n         */\n        Variable.prototype.setValue = function (value) {\n            this._value = value;\n        };\n        /**\n         * Creates a new Expression by adding a number, variable or expression\n         * to the variable.\n         *\n         * @param {Number|Variable|Expression} value Value to add.\n         * @return {Expression} expression\n         */\n        Variable.prototype.plus = function (value) {\n            return new kiwi.Expression(this, value);\n        };\n        /**\n         * Creates a new Expression by substracting a number, variable or expression\n         * from the variable.\n         *\n         * @param {Number|Variable|Expression} value Value to substract.\n         * @return {Expression} expression\n         */\n        Variable.prototype.minus = function (value) {\n            return new kiwi.Expression(this, typeof value === 'number' ? -value : [-1, value]);\n        };\n        /**\n         * Creates a new Expression by multiplying with a fixed number.\n         *\n         * @param {Number} coefficient Coefficient to multiply with.\n         * @return {Expression} expression\n         */\n        Variable.prototype.multiply = function (coefficient) {\n            return new kiwi.Expression([coefficient, this]);\n        };\n        /**\n         * Creates a new Expression by dividing with a fixed number.\n         *\n         * @param {Number} coefficient Coefficient to divide by.\n         * @return {Expression} expression\n         */\n        Variable.prototype.divide = function (coefficient) {\n            return new kiwi.Expression([1 / coefficient, this]);\n        };\n        /**\n         * Returns the JSON representation of the variable.\n         * @private\n         */\n        Variable.prototype.toJSON = function () {\n            return {\n                name: this._name,\n                value: this._value\n            };\n        };\n        return Variable;\n    })();\n    kiwi.Variable = Variable;\n    /**\n     * The internal variable id counter.\n     * @private\n     */\n    var VarId = 0;\n})(kiwi || (kiwi = {}));\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014, Nucleic Development Team.\n|\n| Distributed under the terms of the Modified BSD License.\n|\n| The full license is in the file COPYING.txt, distributed with this software.\n|----------------------------------------------------------------------------*/\n/// <reference path=\"../thirdparty/tsu.d.ts\"/>\n/// <reference path=\"maptype.ts\"/>\n/// <reference path=\"variable.ts\"/>\nvar kiwi;\n(function (kiwi) {\n    /**\n     * An expression of variable terms and a constant.\n     *\n     * The constructor accepts an arbitrary number of parameters,\n     * each of which must be one of the following types:\n     *  - number\n     *  - Variable\n     *  - Expression\n     *  - 2-tuple of [number, Variable|Expression]\n     *\n     * The parameters are summed. The tuples are multiplied.\n     *\n     * @class\n     * @param {...(number|Variable|Expression|Array)} args\n     */\n    var Expression = (function () {\n        function Expression() {\n            var parsed = parseArgs(arguments);\n            this._terms = parsed.terms;\n            this._constant = parsed.constant;\n        }\n        /**\n         * Returns the mapping of terms in the expression.\n         *\n         * This *must* be treated as const.\n         * @private\n         */\n        Expression.prototype.terms = function () {\n            return this._terms;\n        };\n        /**\n         * Returns the constant of the expression.\n         * @private\n         */\n        Expression.prototype.constant = function () {\n            return this._constant;\n        };\n        /**\n         * Returns the computed value of the expression.\n         *\n         * @private\n         * @return {Number} computed value of the expression\n         */\n        Expression.prototype.value = function () {\n            var result = this._constant;\n            for (var i = 0, n = this._terms.size(); i < n; i++) {\n                var pair = this._terms.itemAt(i);\n                result += pair.first.value() * pair.second;\n            }\n            return result;\n        };\n        /**\n         * Creates a new Expression by adding a number, variable or expression\n         * to the expression.\n         *\n         * @param {Number|Variable|Expression} value Value to add.\n         * @return {Expression} expression\n         */\n        Expression.prototype.plus = function (value) {\n            return new Expression(this, value);\n        };\n        /**\n         * Creates a new Expression by substracting a number, variable or expression\n         * from the expression.\n         *\n         * @param {Number|Variable|Expression} value Value to substract.\n         * @return {Expression} expression\n         */\n        Expression.prototype.minus = function (value) {\n            return new Expression(this, typeof value === 'number' ? -value : [-1, value]);\n        };\n        /**\n         * Creates a new Expression by multiplying with a fixed number.\n         *\n         * @param {Number} coefficient Coefficient to multiply with.\n         * @return {Expression} expression\n         */\n        Expression.prototype.multiply = function (coefficient) {\n            return new Expression([coefficient, this]);\n        };\n        /**\n         * Creates a new Expression by dividing with a fixed number.\n         *\n         * @param {Number} coefficient Coefficient to divide by.\n         * @return {Expression} expression\n         */\n        Expression.prototype.divide = function (coefficient) {\n            return new Expression([1 / coefficient, this]);\n        };\n        return Expression;\n    })();\n    kiwi.Expression = Expression;\n    /**\n     * An internal argument parsing function.\n     * @private\n     */\n    function parseArgs(args) {\n        var constant = 0.0;\n        var factory = function () { return 0.0; };\n        var terms = kiwi.createMap(kiwi.Variable.Compare);\n        for (var i = 0, n = args.length; i < n; ++i) {\n            var item = args[i];\n            if (typeof item === \"number\") {\n                constant += item;\n            }\n            else if (item instanceof kiwi.Variable) {\n                terms.setDefault(item, factory).second += 1.0;\n            }\n            else if (item instanceof Expression) {\n                constant += item.constant();\n                var terms2 = item.terms();\n                for (var j = 0, k = terms2.size(); j < k; j++) {\n                    var termPair = terms2.itemAt(j);\n                    terms.setDefault(termPair.first, factory).second += termPair.second;\n                }\n            }\n            else if (item instanceof Array) {\n                if (item.length !== 2) {\n                    throw new Error(\"array must have length 2\");\n                }\n                var value = item[0];\n                var value2 = item[1];\n                if (typeof value !== \"number\") {\n                    throw new Error(\"array item 0 must be a number\");\n                }\n                if (value2 instanceof kiwi.Variable) {\n                    terms.setDefault(value2, factory).second += value;\n                }\n                else if (value2 instanceof Expression) {\n                    constant += (value2.constant() * value);\n                    var terms2 = value2.terms();\n                    for (var j = 0, k = terms2.size(); j < k; j++) {\n                        var termPair = terms2.itemAt(j);\n                        terms.setDefault(termPair.first, factory).second += (termPair.second * value);\n                    }\n                }\n                else {\n                    throw new Error(\"array item 1 must be a variable or expression\");\n                }\n            }\n            else {\n                throw new Error(\"invalid Expression argument: \" + item);\n            }\n        }\n        return { terms: terms, constant: constant };\n    }\n})(kiwi || (kiwi = {}));\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014, Nucleic Development Team.\n|\n| Distributed under the terms of the Modified BSD License.\n|\n| The full license is in the file COPYING.txt, distributed with this software.\n|----------------------------------------------------------------------------*/\nvar kiwi;\n(function (kiwi) {\n    /**\n     * @class Strength\n     */\n    var Strength;\n    (function (Strength) {\n        /**\n         * Create a new symbolic strength.\n         *\n         * @param {Number} a strong\n         * @param {Number} b medium\n         * @param {Number} c weak\n         * @param {Number} [w] weight\n         * @return {Number} strength\n         */\n        function create(a, b, c, w) {\n            if (w === void 0) { w = 1.0; }\n            var result = 0.0;\n            result += Math.max(0.0, Math.min(1000.0, a * w)) * 1000000.0;\n            result += Math.max(0.0, Math.min(1000.0, b * w)) * 1000.0;\n            result += Math.max(0.0, Math.min(1000.0, c * w));\n            return result;\n        }\n        Strength.create = create;\n        /**\n         * The 'required' symbolic strength.\n         */\n        Strength.required = create(1000.0, 1000.0, 1000.0);\n        /**\n         * The 'strong' symbolic strength.\n         */\n        Strength.strong = create(1.0, 0.0, 0.0);\n        /**\n         * The 'medium' symbolic strength.\n         */\n        Strength.medium = create(0.0, 1.0, 0.0);\n        /**\n         * The 'weak' symbolic strength.\n         */\n        Strength.weak = create(0.0, 0.0, 1.0);\n        /**\n         * Clip a symbolic strength to the allowed min and max.\n         * @private\n         */\n        function clip(value) {\n            return Math.max(0.0, Math.min(Strength.required, value));\n        }\n        Strength.clip = clip;\n    })(Strength = kiwi.Strength || (kiwi.Strength = {}));\n})(kiwi || (kiwi = {}));\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014, Nucleic Development Team.\n|\n| Distributed under the terms of the Modified BSD License.\n|\n| The full license is in the file COPYING.txt, distributed with this software.\n|----------------------------------------------------------------------------*/\n/// <reference path=\"../thirdparty/tsu.d.ts\"/>\n/// <reference path=\"constraint.ts\"/>\n/// <reference path=\"expression.ts\"/>\n/// <reference path=\"maptype.ts\"/>\n/// <reference path=\"strength.ts\"/>\n/// <reference path=\"variable.ts\"/>\nvar kiwi;\n(function (kiwi) {\n    /**\n     * The constraint solver class.\n     *\n     * @class\n     */\n    var Solver = (function () {\n        /**\n         * Construct a new Solver.\n         */\n        function Solver() {\n            this._cnMap = createCnMap();\n            this._rowMap = createRowMap();\n            this._varMap = createVarMap();\n            this._editMap = createEditMap();\n            this._infeasibleRows = [];\n            this._objective = new Row();\n            this._artificial = null;\n            this._idTick = 0;\n        }\n        /**\n         * Creates and add a constraint to the solver.\n         *\n         * @param {Expression|Variable} lhs Left hand side of the expression\n         * @param {Operator} operator Operator\n         * @param {Expression|Variable|Number} rhs Right hand side of the expression\n         * @param {Number} [strength=Strength.required] Strength\n         */\n        Solver.prototype.createConstraint = function (lhs, operator, rhs, strength) {\n            if (strength === void 0) { strength = kiwi.Strength.required; }\n            var cn = new kiwi.Constraint(lhs, operator, rhs, strength);\n            this.addConstraint(cn);\n            return cn;\n        };\n        /**\n         * Add a constraint to the solver.\n         *\n         * @param {Constraint} constraint Constraint to add to the solver\n         */\n        Solver.prototype.addConstraint = function (constraint) {\n            var cnPair = this._cnMap.find(constraint);\n            if (cnPair !== undefined) {\n                throw new Error(\"duplicate constraint\");\n            }\n            // Creating a row causes symbols to be reserved for the variables\n            // in the constraint. If this method exits with an exception,\n            // then its possible those variables will linger in the var map.\n            // Since its likely that those variables will be used in other\n            // constraints and since exceptional conditions are uncommon,\n            // i'm not too worried about aggressive cleanup of the var map.\n            var data = this._createRow(constraint);\n            var row = data.row;\n            var tag = data.tag;\n            var subject = this._chooseSubject(row, tag);\n            // If chooseSubject couldnt find a valid entering symbol, one\n            // last option is available if the entire row is composed of\n            // dummy variables. If the constant of the row is zero, then\n            // this represents redundant constraints and the new dummy\n            // marker can enter the basis. If the constant is non-zero,\n            // then it represents an unsatisfiable constraint.\n            if (subject.type() === 0 /* Invalid */ && row.allDummies()) {\n                if (!nearZero(row.constant())) {\n                    throw new Error(\"unsatisfiable constraint\");\n                }\n                else {\n                    subject = tag.marker;\n                }\n            }\n            // If an entering symbol still isn't found, then the row must\n            // be added using an artificial variable. If that fails, then\n            // the row represents an unsatisfiable constraint.\n            if (subject.type() === 0 /* Invalid */) {\n                if (!this._addWithArtificialVariable(row)) {\n                    throw new Error(\"unsatisfiable constraint\");\n                }\n            }\n            else {\n                row.solveFor(subject);\n                this._substitute(subject, row);\n                this._rowMap.insert(subject, row);\n            }\n            this._cnMap.insert(constraint, tag);\n            // Optimizing after each constraint is added performs less\n            // aggregate work due to a smaller average system size. It\n            // also ensures the solver remains in a consistent state.\n            this._optimize(this._objective);\n        };\n        /**\n         * Remove a constraint from the solver.\n         *\n         * @param {Constraint} constraint Constraint to remove from the solver\n         */\n        Solver.prototype.removeConstraint = function (constraint) {\n            var cnPair = this._cnMap.erase(constraint);\n            if (cnPair === undefined) {\n                throw new Error(\"unknown constraint\");\n            }\n            // Remove the error effects from the objective function\n            // *before* pivoting, or substitutions into the objective\n            // will lead to incorrect solver results.\n            this._removeConstraintEffects(constraint, cnPair.second);\n            // If the marker is basic, simply drop the row. Otherwise,\n            // pivot the marker into the basis and then drop the row.\n            var marker = cnPair.second.marker;\n            var rowPair = this._rowMap.erase(marker);\n            if (rowPair === undefined) {\n                var leaving = this._getMarkerLeavingSymbol(marker);\n                if (leaving.type() === 0 /* Invalid */) {\n                    throw new Error(\"failed to find leaving row\");\n                }\n                rowPair = this._rowMap.erase(leaving);\n                rowPair.second.solveForEx(leaving, marker);\n                this._substitute(marker, rowPair.second);\n            }\n            // Optimizing after each constraint is removed ensures that the\n            // solver remains consistent. It makes the solver api easier to\n            // use at a small tradeoff for speed.\n            this._optimize(this._objective);\n        };\n        /**\n         * Test whether the solver contains the constraint.\n         *\n         * @param {Constraint} constraint Constraint to test for\n         * @return {Bool} true or false\n         */\n        Solver.prototype.hasConstraint = function (constraint) {\n            return this._cnMap.contains(constraint);\n        };\n        /**\n         * Add an edit variable to the solver.\n         *\n         * @param {Variable} variable Edit variable to add to the solver\n         * @param {Number} strength Strength, should be less than `Strength.required`\n         */\n        Solver.prototype.addEditVariable = function (variable, strength) {\n            var editPair = this._editMap.find(variable);\n            if (editPair !== undefined) {\n                throw new Error(\"duplicate edit variable\");\n            }\n            strength = kiwi.Strength.clip(strength);\n            if (strength === kiwi.Strength.required) {\n                throw new Error(\"bad required strength\");\n            }\n            var expr = new kiwi.Expression(variable);\n            var cn = new kiwi.Constraint(expr, 2 /* Eq */, undefined, strength);\n            this.addConstraint(cn);\n            var tag = this._cnMap.find(cn).second;\n            var info = { tag: tag, constraint: cn, constant: 0.0 };\n            this._editMap.insert(variable, info);\n        };\n        /**\n         * Remove an edit variable from the solver.\n         *\n         * @param {Variable} variable Edit variable to remove from the solver\n         */\n        Solver.prototype.removeEditVariable = function (variable) {\n            var editPair = this._editMap.erase(variable);\n            if (editPair === undefined) {\n                throw new Error(\"unknown edit variable\");\n            }\n            this.removeConstraint(editPair.second.constraint);\n        };\n        /**\n         * Test whether the solver contains the edit variable.\n         *\n         * @param {Variable} variable Edit variable to test for\n         * @return {Bool} true or false\n         */\n        Solver.prototype.hasEditVariable = function (variable) {\n            return this._editMap.contains(variable);\n        };\n        /**\n         * Suggest the value of an edit variable.\n         *\n         * @param {Variable} variable Edit variable to suggest a value for\n         * @param {Number} value Suggested value\n         */\n        Solver.prototype.suggestValue = function (variable, value) {\n            var editPair = this._editMap.find(variable);\n            if (editPair === undefined) {\n                throw new Error(\"unknown edit variable\");\n            }\n            var rows = this._rowMap;\n            var info = editPair.second;\n            var delta = value - info.constant;\n            info.constant = value;\n            // Check first if the positive error variable is basic.\n            var marker = info.tag.marker;\n            var rowPair = rows.find(marker);\n            if (rowPair !== undefined) {\n                if (rowPair.second.add(-delta) < 0.0) {\n                    this._infeasibleRows.push(marker);\n                }\n                this._dualOptimize();\n                return;\n            }\n            // Check next if the negative error variable is basic.\n            var other = info.tag.other;\n            var rowPair = rows.find(other);\n            if (rowPair !== undefined) {\n                if (rowPair.second.add(delta) < 0.0) {\n                    this._infeasibleRows.push(other);\n                }\n                this._dualOptimize();\n                return;\n            }\n            for (var i = 0, n = rows.size(); i < n; ++i) {\n                var rowPair = rows.itemAt(i);\n                var row = rowPair.second;\n                var coeff = row.coefficientFor(marker);\n                if (coeff !== 0.0 && row.add(delta * coeff) < 0.0 && rowPair.first.type() !== 1 /* External */) {\n                    this._infeasibleRows.push(rowPair.first);\n                }\n            }\n            this._dualOptimize();\n        };\n        /**\n         * Update the values of the variables.\n         */\n        Solver.prototype.updateVariables = function () {\n            var vars = this._varMap;\n            var rows = this._rowMap;\n            for (var i = 0, n = vars.size(); i < n; ++i) {\n                var pair = vars.itemAt(i);\n                var rowPair = rows.find(pair.second);\n                if (rowPair !== undefined) {\n                    pair.first.setValue(rowPair.second.constant());\n                }\n                else {\n                    pair.first.setValue(0.0);\n                }\n            }\n        };\n        /**\n         * Get the symbol for the given variable.\n         *\n         * If a symbol does not exist for the variable, one will be created.\n         * @private\n         */\n        Solver.prototype._getVarSymbol = function (variable) {\n            var _this = this;\n            var factory = function () { return _this._makeSymbol(1 /* External */); };\n            return this._varMap.setDefault(variable, factory).second;\n        };\n        /**\n         * Create a new Row object for the given constraint.\n         *\n         * The terms in the constraint will be converted to cells in the row.\n         * Any term in the constraint with a coefficient of zero is ignored.\n         * This method uses the `_getVarSymbol` method to get the symbol for\n         * the variables added to the row. If the symbol for a given cell\n         * variable is basic, the cell variable will be substituted with the\n         * basic row.\n         *\n         * The necessary slack and error variables will be added to the row.\n         * If the constant for the row is negative, the sign for the row\n         * will be inverted so the constant becomes positive.\n         *\n         * Returns the created Row and the tag for tracking the constraint.\n         * @private\n         */\n        Solver.prototype._createRow = function (constraint) {\n            var expr = constraint.expression();\n            var row = new Row(expr.constant());\n            // Substitute the current basic variables into the row.\n            var terms = expr.terms();\n            for (var i = 0, n = terms.size(); i < n; ++i) {\n                var termPair = terms.itemAt(i);\n                if (!nearZero(termPair.second)) {\n                    var symbol = this._getVarSymbol(termPair.first);\n                    var basicPair = this._rowMap.find(symbol);\n                    if (basicPair !== undefined) {\n                        row.insertRow(basicPair.second, termPair.second);\n                    }\n                    else {\n                        row.insertSymbol(symbol, termPair.second);\n                    }\n                }\n            }\n            // Add the necessary slack, error, and dummy variables.\n            var objective = this._objective;\n            var strength = constraint.strength();\n            var tag = { marker: INVALID_SYMBOL, other: INVALID_SYMBOL };\n            switch (constraint.op()) {\n                case 0 /* Le */:\n                case 1 /* Ge */:\n                    {\n                        var coeff = constraint.op() === 0 /* Le */ ? 1.0 : -1.0;\n                        var slack = this._makeSymbol(2 /* Slack */);\n                        tag.marker = slack;\n                        row.insertSymbol(slack, coeff);\n                        if (strength < kiwi.Strength.required) {\n                            var error = this._makeSymbol(3 /* Error */);\n                            tag.other = error;\n                            row.insertSymbol(error, -coeff);\n                            objective.insertSymbol(error, strength);\n                        }\n                        break;\n                    }\n                case 2 /* Eq */:\n                    {\n                        if (strength < kiwi.Strength.required) {\n                            var errplus = this._makeSymbol(3 /* Error */);\n                            var errminus = this._makeSymbol(3 /* Error */);\n                            tag.marker = errplus;\n                            tag.other = errminus;\n                            row.insertSymbol(errplus, -1.0); // v = eplus - eminus\n                            row.insertSymbol(errminus, 1.0); // v - eplus + eminus = 0\n                            objective.insertSymbol(errplus, strength);\n                            objective.insertSymbol(errminus, strength);\n                        }\n                        else {\n                            var dummy = this._makeSymbol(4 /* Dummy */);\n                            tag.marker = dummy;\n                            row.insertSymbol(dummy);\n                        }\n                        break;\n                    }\n            }\n            // Ensure the row has a positive constant.\n            if (row.constant() < 0.0) {\n                row.reverseSign();\n            }\n            return { row: row, tag: tag };\n        };\n        /**\n         * Choose the subject for solving for the row.\n         *\n         * This method will choose the best subject for using as the solve\n         * target for the row. An invalid symbol will be returned if there\n         * is no valid target.\n         *\n         * The symbols are chosen according to the following precedence:\n         *\n         * 1) The first symbol representing an external variable.\n         * 2) A negative slack or error tag variable.\n         *\n         * If a subject cannot be found, an invalid symbol will be returned.\n         *\n         * @private\n         */\n        Solver.prototype._chooseSubject = function (row, tag) {\n            var cells = row.cells();\n            for (var i = 0, n = cells.size(); i < n; ++i) {\n                var pair = cells.itemAt(i);\n                if (pair.first.type() === 1 /* External */) {\n                    return pair.first;\n                }\n            }\n            var type = tag.marker.type();\n            if (type === 2 /* Slack */ || type === 3 /* Error */) {\n                if (row.coefficientFor(tag.marker) < 0.0) {\n                    return tag.marker;\n                }\n            }\n            type = tag.other.type();\n            if (type === 2 /* Slack */ || type === 3 /* Error */) {\n                if (row.coefficientFor(tag.other) < 0.0) {\n                    return tag.other;\n                }\n            }\n            return INVALID_SYMBOL;\n        };\n        /**\n         * Add the row to the tableau using an artificial variable.\n         *\n         * This will return false if the constraint cannot be satisfied.\n         *\n         * @private\n         */\n        Solver.prototype._addWithArtificialVariable = function (row) {\n            // Create and add the artificial variable to the tableau.\n            var art = this._makeSymbol(2 /* Slack */);\n            this._rowMap.insert(art, row.copy());\n            this._artificial = row.copy();\n            // Optimize the artificial objective. This is successful\n            // only if the artificial objective is optimized to zero.\n            this._optimize(this._artificial);\n            var success = nearZero(this._artificial.constant());\n            this._artificial = null;\n            // If the artificial variable is basic, pivot the row so that\n            // it becomes non-basic. If the row is constant, exit early.\n            var pair = this._rowMap.erase(art);\n            if (pair !== undefined) {\n                var basicRow = pair.second;\n                if (basicRow.isConstant()) {\n                    return success;\n                }\n                var entering = this._anyPivotableSymbol(basicRow);\n                if (entering.type() === 0 /* Invalid */) {\n                    return false; // unsatisfiable (will this ever happen?)\n                }\n                basicRow.solveForEx(art, entering);\n                this._substitute(entering, basicRow);\n                this._rowMap.insert(entering, basicRow);\n            }\n            // Remove the artificial variable from the tableau.\n            var rows = this._rowMap;\n            for (var i = 0, n = rows.size(); i < n; ++i) {\n                rows.itemAt(i).second.removeSymbol(art);\n            }\n            this._objective.removeSymbol(art);\n            return success;\n        };\n        /**\n         * Substitute the parametric symbol with the given row.\n         *\n         * This method will substitute all instances of the parametric symbol\n         * in the tableau and the objective function with the given row.\n         *\n         * @private\n         */\n        Solver.prototype._substitute = function (symbol, row) {\n            var rows = this._rowMap;\n            for (var i = 0, n = rows.size(); i < n; ++i) {\n                var pair = rows.itemAt(i);\n                pair.second.substitute(symbol, row);\n                if (pair.second.constant() < 0.0 && pair.first.type() !== 1 /* External */) {\n                    this._infeasibleRows.push(pair.first);\n                }\n            }\n            this._objective.substitute(symbol, row);\n            if (this._artificial) {\n                this._artificial.substitute(symbol, row);\n            }\n        };\n        /**\n         * Optimize the system for the given objective function.\n         *\n         * This method performs iterations of Phase 2 of the simplex method\n         * until the objective function reaches a minimum.\n         *\n         * @private\n         */\n        Solver.prototype._optimize = function (objective) {\n            while (true) {\n                var entering = this._getEnteringSymbol(objective);\n                if (entering.type() === 0 /* Invalid */) {\n                    return;\n                }\n                var leaving = this._getLeavingSymbol(entering);\n                if (leaving.type() === 0 /* Invalid */) {\n                    throw new Error(\"the objective is unbounded\");\n                }\n                // pivot the entering symbol into the basis\n                var row = this._rowMap.erase(leaving).second;\n                row.solveForEx(leaving, entering);\n                this._substitute(entering, row);\n                this._rowMap.insert(entering, row);\n            }\n        };\n        /**\n         * Optimize the system using the dual of the simplex method.\n         *\n         * The current state of the system should be such that the objective\n         * function is optimal, but not feasible. This method will perform\n         * an iteration of the dual simplex method to make the solution both\n         * optimal and feasible.\n         *\n         * @private\n         */\n        Solver.prototype._dualOptimize = function () {\n            var rows = this._rowMap;\n            var infeasible = this._infeasibleRows;\n            while (infeasible.length !== 0) {\n                var leaving = infeasible.pop();\n                var pair = rows.find(leaving);\n                if (pair !== undefined && pair.second.constant() < 0.0) {\n                    var entering = this._getDualEnteringSymbol(pair.second);\n                    if (entering.type() === 0 /* Invalid */) {\n                        throw new Error(\"dual optimize failed\");\n                    }\n                    // pivot the entering symbol into the basis\n                    var row = pair.second;\n                    rows.erase(leaving);\n                    row.solveForEx(leaving, entering);\n                    this._substitute(entering, row);\n                    rows.insert(entering, row);\n                }\n            }\n        };\n        /**\n         * Compute the entering variable for a pivot operation.\n         *\n         * This method will return first symbol in the objective function which\n         * is non-dummy and has a coefficient less than zero. If no symbol meets\n         * the criteria, it means the objective function is at a minimum, and an\n         * invalid symbol is returned.\n         *\n         * @private\n         */\n        Solver.prototype._getEnteringSymbol = function (objective) {\n            var cells = objective.cells();\n            for (var i = 0, n = cells.size(); i < n; ++i) {\n                var pair = cells.itemAt(i);\n                var symbol = pair.first;\n                if (pair.second < 0.0 && symbol.type() !== 4 /* Dummy */) {\n                    return symbol;\n                }\n            }\n            return INVALID_SYMBOL;\n        };\n        /**\n         * Compute the entering symbol for the dual optimize operation.\n         *\n         * This method will return the symbol in the row which has a positive\n         * coefficient and yields the minimum ratio for its respective symbol\n         * in the objective function. The provided row *must* be infeasible.\n         * If no symbol is found which meats the criteria, an invalid symbol\n         * is returned.\n         *\n         * @private\n         */\n        Solver.prototype._getDualEnteringSymbol = function (row) {\n            var ratio = Number.MAX_VALUE;\n            var entering = INVALID_SYMBOL;\n            var cells = row.cells();\n            for (var i = 0, n = cells.size(); i < n; ++i) {\n                var pair = cells.itemAt(i);\n                var symbol = pair.first;\n                var c = pair.second;\n                if (c > 0.0 && symbol.type() !== 4 /* Dummy */) {\n                    var coeff = this._objective.coefficientFor(symbol);\n                    var r = coeff / c;\n                    if (r < ratio) {\n                        ratio = r;\n                        entering = symbol;\n                    }\n                }\n            }\n            return entering;\n        };\n        /**\n         * Compute the symbol for pivot exit row.\n         *\n         * This method will return the symbol for the exit row in the row\n         * map. If no appropriate exit symbol is found, an invalid symbol\n         * will be returned. This indicates that the objective function is\n         * unbounded.\n         *\n         * @private\n         */\n        Solver.prototype._getLeavingSymbol = function (entering) {\n            var ratio = Number.MAX_VALUE;\n            var found = INVALID_SYMBOL;\n            var rows = this._rowMap;\n            for (var i = 0, n = rows.size(); i < n; ++i) {\n                var pair = rows.itemAt(i);\n                var symbol = pair.first;\n                if (symbol.type() !== 1 /* External */) {\n                    var row = pair.second;\n                    var temp = row.coefficientFor(entering);\n                    if (temp < 0.0) {\n                        var temp_ratio = -row.constant() / temp;\n                        if (temp_ratio < ratio) {\n                            ratio = temp_ratio;\n                            found = symbol;\n                        }\n                    }\n                }\n            }\n            return found;\n        };\n        /**\n         * Compute the leaving symbol for a marker variable.\n         *\n         * This method will return a symbol corresponding to a basic row\n         * which holds the given marker variable. The row will be chosen\n         * according to the following precedence:\n         *\n         * 1) The row with a restricted basic varible and a negative coefficient\n         *    for the marker with the smallest ratio of -constant / coefficient.\n         *\n         * 2) The row with a restricted basic variable and the smallest ratio\n         *    of constant / coefficient.\n         *\n         * 3) The last unrestricted row which contains the marker.\n         *\n         * If the marker does not exist in any row, an invalid symbol will be\n         * returned. This indicates an internal solver error since the marker\n         * *should* exist somewhere in the tableau.\n         *\n         * @private\n         */\n        Solver.prototype._getMarkerLeavingSymbol = function (marker) {\n            var dmax = Number.MAX_VALUE;\n            var r1 = dmax;\n            var r2 = dmax;\n            var invalid = INVALID_SYMBOL;\n            var first = invalid;\n            var second = invalid;\n            var third = invalid;\n            var rows = this._rowMap;\n            for (var i = 0, n = rows.size(); i < n; ++i) {\n                var pair = rows.itemAt(i);\n                var row = pair.second;\n                var c = row.coefficientFor(marker);\n                if (c === 0.0) {\n                    continue;\n                }\n                var symbol = pair.first;\n                if (symbol.type() === 1 /* External */) {\n                    third = symbol;\n                }\n                else if (c < 0.0) {\n                    var r = -row.constant() / c;\n                    if (r < r1) {\n                        r1 = r;\n                        first = symbol;\n                    }\n                }\n                else {\n                    var r = row.constant() / c;\n                    if (r < r2) {\n                        r2 = r;\n                        second = symbol;\n                    }\n                }\n            }\n            if (first !== invalid) {\n                return first;\n            }\n            if (second !== invalid) {\n                return second;\n            }\n            return third;\n        };\n        /**\n         * Remove the effects of a constraint on the objective function.\n         *\n         * @private\n         */\n        Solver.prototype._removeConstraintEffects = function (cn, tag) {\n            if (tag.marker.type() === 3 /* Error */) {\n                this._removeMarkerEffects(tag.marker, cn.strength());\n            }\n            if (tag.other.type() === 3 /* Error */) {\n                this._removeMarkerEffects(tag.other, cn.strength());\n            }\n        };\n        /**\n         * Remove the effects of an error marker on the objective function.\n         *\n         * @private\n         */\n        Solver.prototype._removeMarkerEffects = function (marker, strength) {\n            var pair = this._rowMap.find(marker);\n            if (pair !== undefined) {\n                this._objective.insertRow(pair.second, -strength);\n            }\n            else {\n                this._objective.insertSymbol(marker, -strength);\n            }\n        };\n        /**\n         * Get the first Slack or Error symbol in the row.\n         *\n         * If no such symbol is present, an invalid symbol will be returned.\n         *\n         * @private\n         */\n        Solver.prototype._anyPivotableSymbol = function (row) {\n            var cells = row.cells();\n            for (var i = 0, n = cells.size(); i < n; ++i) {\n                var pair = cells.itemAt(i);\n                var type = pair.first.type();\n                if (type === 2 /* Slack */ || type === 3 /* Error */) {\n                    return pair.first;\n                }\n            }\n            return INVALID_SYMBOL;\n        };\n        /**\n         * Returns a new Symbol of the given type.\n         *\n         * @private\n         */\n        Solver.prototype._makeSymbol = function (type) {\n            return new Symbol(type, this._idTick++);\n        };\n        return Solver;\n    })();\n    kiwi.Solver = Solver;\n    /**\n     * Test whether a value is approximately zero.\n     * @private\n     */\n    function nearZero(value) {\n        var eps = 1.0e-8;\n        return value < 0.0 ? -value < eps : value < eps;\n    }\n    /**\n     * An internal function for creating a constraint map.\n     * @private\n     */\n    function createCnMap() {\n        return kiwi.createMap(kiwi.Constraint.Compare);\n    }\n    /**\n     * An internal function for creating a row map.\n     * @private\n     */\n    function createRowMap() {\n        return kiwi.createMap(Symbol.Compare);\n    }\n    /**\n     * An internal function for creating a variable map.\n     * @private\n     */\n    function createVarMap() {\n        return kiwi.createMap(kiwi.Variable.Compare);\n    }\n    /**\n     * An internal function for creating an edit map.\n     * @private\n     */\n    function createEditMap() {\n        return kiwi.createMap(kiwi.Variable.Compare);\n    }\n    /**\n     * An enum defining the available symbol types.\n     * @private\n     */\n    var SymbolType;\n    (function (SymbolType) {\n        SymbolType[SymbolType[\"Invalid\"] = 0] = \"Invalid\";\n        SymbolType[SymbolType[\"External\"] = 1] = \"External\";\n        SymbolType[SymbolType[\"Slack\"] = 2] = \"Slack\";\n        SymbolType[SymbolType[\"Error\"] = 3] = \"Error\";\n        SymbolType[SymbolType[\"Dummy\"] = 4] = \"Dummy\";\n    })(SymbolType || (SymbolType = {}));\n    /**\n     * An internal class representing a symbol in the solver.\n     * @private\n     */\n    var Symbol = (function () {\n        /**\n         * Construct a new Symbol\n         *\n         * @param [type] The type of the symbol.\n         * @param [id] The unique id number of the symbol.\n         */\n        function Symbol(type, id) {\n            this._id = id;\n            this._type = type;\n        }\n        /**\n         * The static Symbol comparison function.\n         */\n        Symbol.Compare = function (a, b) {\n            return a.id() - b.id();\n        };\n        /**\n         * Returns the unique id number of the symbol.\n         */\n        Symbol.prototype.id = function () {\n            return this._id;\n        };\n        /**\n         * Returns the type of the symbol.\n         */\n        Symbol.prototype.type = function () {\n            return this._type;\n        };\n        return Symbol;\n    })();\n    /**\n     * A static invalid symbol\n     * @private\n     */\n    var INVALID_SYMBOL = new Symbol(0 /* Invalid */, -1);\n    /**\n     * An internal row class used by the solver.\n     * @private\n     */\n    var Row = (function () {\n        /**\n         * Construct a new Row.\n         */\n        function Row(constant) {\n            if (constant === void 0) { constant = 0.0; }\n            this._cellMap = kiwi.createMap(Symbol.Compare);\n            this._constant = constant;\n        }\n        /**\n         * Returns the mapping of symbols to coefficients.\n         */\n        Row.prototype.cells = function () {\n            return this._cellMap;\n        };\n        /**\n         * Returns the constant for the row.\n         */\n        Row.prototype.constant = function () {\n            return this._constant;\n        };\n        /**\n         * Returns true if the row is a constant value.\n         */\n        Row.prototype.isConstant = function () {\n            return this._cellMap.empty();\n        };\n        /**\n         * Returns true if the Row has all dummy symbols.\n         */\n        Row.prototype.allDummies = function () {\n            var cells = this._cellMap;\n            for (var i = 0, n = cells.size(); i < n; ++i) {\n                var pair = cells.itemAt(i);\n                if (pair.first.type() !== 4 /* Dummy */) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        /**\n         * Create a copy of the row.\n         */\n        Row.prototype.copy = function () {\n            var theCopy = new Row(this._constant);\n            theCopy._cellMap = this._cellMap.copy();\n            return theCopy;\n        };\n        /**\n         * Add a constant value to the row constant.\n         *\n         * Returns the new value of the constant.\n         */\n        Row.prototype.add = function (value) {\n            return this._constant += value;\n        };\n        /**\n         * Insert the symbol into the row with the given coefficient.\n         *\n         * If the symbol already exists in the row, the coefficient\n         * will be added to the existing coefficient. If the resulting\n         * coefficient is zero, the symbol will be removed from the row.\n         */\n        Row.prototype.insertSymbol = function (symbol, coefficient) {\n            if (coefficient === void 0) { coefficient = 1.0; }\n            var pair = this._cellMap.setDefault(symbol, function () { return 0.0; });\n            if (nearZero(pair.second += coefficient)) {\n                this._cellMap.erase(symbol);\n            }\n        };\n        /**\n         * Insert a row into this row with a given coefficient.\n         *\n         * The constant and the cells of the other row will be\n         * multiplied by the coefficient and added to this row. Any\n         * cell with a resulting coefficient of zero will be removed\n         * from the row.\n         */\n        Row.prototype.insertRow = function (other, coefficient) {\n            if (coefficient === void 0) { coefficient = 1.0; }\n            this._constant += other._constant * coefficient;\n            var cells = other._cellMap;\n            for (var i = 0, n = cells.size(); i < n; ++i) {\n                var pair = cells.itemAt(i);\n                this.insertSymbol(pair.first, pair.second * coefficient);\n            }\n        };\n        /**\n         * Remove a symbol from the row.\n         */\n        Row.prototype.removeSymbol = function (symbol) {\n            this._cellMap.erase(symbol);\n        };\n        /**\n         * Reverse the sign of the constant and cells in the row.\n         */\n        Row.prototype.reverseSign = function () {\n            this._constant = -this._constant;\n            var cells = this._cellMap;\n            for (var i = 0, n = cells.size(); i < n; ++i) {\n                var pair = cells.itemAt(i);\n                pair.second = -pair.second;\n            }\n        };\n        /**\n         * Solve the row for the given symbol.\n         *\n         * This method assumes the row is of the form\n         * a * x + b * y + c = 0 and (assuming solve for x) will modify\n         * the row to represent the right hand side of\n         * x = -b/a * y - c / a. The target symbol will be removed from\n         * the row, and the constant and other cells will be multiplied\n         * by the negative inverse of the target coefficient.\n         *\n         * The given symbol *must* exist in the row.\n         */\n        Row.prototype.solveFor = function (symbol) {\n            var cells = this._cellMap;\n            var pair = cells.erase(symbol);\n            var coeff = -1.0 / pair.second;\n            this._constant *= coeff;\n            for (var i = 0, n = cells.size(); i < n; ++i) {\n                cells.itemAt(i).second *= coeff;\n            }\n        };\n        /**\n         * Solve the row for the given symbols.\n         *\n         * This method assumes the row is of the form\n         * x = b * y + c and will solve the row such that\n         * y = x / b - c / b. The rhs symbol will be removed from the\n         * row, the lhs added, and the result divided by the negative\n         * inverse of the rhs coefficient.\n         *\n         * The lhs symbol *must not* exist in the row, and the rhs\n         * symbol must* exist in the row.\n         */\n        Row.prototype.solveForEx = function (lhs, rhs) {\n            this.insertSymbol(lhs, -1.0);\n            this.solveFor(rhs);\n        };\n        /**\n         * Returns the coefficient for the given symbol.\n         */\n        Row.prototype.coefficientFor = function (symbol) {\n            var pair = this._cellMap.find(symbol);\n            return pair !== undefined ? pair.second : 0.0;\n        };\n        /**\n         * Substitute a symbol with the data from another row.\n         *\n         * Given a row of the form a * x + b and a substitution of the\n         * form x = 3 * y + c the row will be updated to reflect the\n         * expression 3 * a * y + a * c + b.\n         *\n         * If the symbol does not exist in the row, this is a no-op.\n         */\n        Row.prototype.substitute = function (symbol, row) {\n            var pair = this._cellMap.erase(symbol);\n            if (pair !== undefined) {\n                this.insertRow(row, pair.second);\n            }\n        };\n        return Row;\n    })();\n})(kiwi || (kiwi = {}));\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014, Nucleic Development Team.\n|\n| Distributed under the terms of the Modified BSD License.\n|\n| The full license is in the file COPYING.txt, distributed with this software.\n|----------------------------------------------------------------------------*/\n/// <reference path=\"constraint.ts\"/>\n/// <reference path=\"expression.ts\"/>\n/// <reference path=\"maptype.ts\"/>\n/// <reference path=\"solver.ts\"/>\n/// <reference path=\"strength.ts\"/>\n/// <reference path=\"variable.ts\"/>\n\nreturn kiwi;\n\n}));\n\n},{}]},{},[1])(1)\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/autolayout/dist/autolayout.kiwi.js\n ** module id = 5\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n ** module id = 6\n ** module chunks = 0\n **/"],"sourceRoot":""}